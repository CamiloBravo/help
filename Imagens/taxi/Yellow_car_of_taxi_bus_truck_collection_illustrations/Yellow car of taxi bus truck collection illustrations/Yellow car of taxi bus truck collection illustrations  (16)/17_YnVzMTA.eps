%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: bus10.eps
%%Creator: Adobe Illustrator(R) 14.0
%%For: eraprint
%%CreationDate: 3/31/2016
%%BoundingBox: 0 0 287 218
%%HiResBoundingBox: 0 0 286.8584 217.5889
%%CropBox: 0 0 286.8584 217.5889
%%LanguageLevel: 3
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 14.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 14.0.0 x367 R agm 4.4890 ct 5.1541%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
3 3010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.2-c063 53.351735, 2008/07/22-18:11:12        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS4</xmp:CreatorTool>
         <xmp:CreateDate>2016-03-31T20:17:34+05:00</xmp:CreateDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>196</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAxAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYqx7zT+YPkzyrCz69rFrZSAApavKn1iSvQRwg+oxPsMhOfCLZQjxGnkur/nBr2u3&#xA;0baXoeqT6QrBkgW3ktop1G9JJ7g2qtXwDU+ecrru0Zk8U5QhjB+niu/fwWfg9FpcGGEaAlOffw8v&#xA;dxUGO6NJ56s9etNY0/QP0e8EvKWKa8hjEkVQWjb0Dc7MKjeuajB2lp8GQSGS6/mxl8vVTm6gyywM&#xA;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&#xA;2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmp:MetadataDate>2016-03-31T20:17:35+05:00</xmp:MetadataDate>
         <xmp:ModifyDate>2016-03-31T20:17:35+05:00</xmp:ModifyDate>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>404.000000</stDim:w>
            <stDim:h>299.722656</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:DocumentID>xmp.did:3FB6BCAF4BF7E5118D96CD7FD32C7020</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:3FB6BCAF4BF7E5118D96CD7FD32C7020</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>xmp.did:3FB6BCAF4BF7E5118D96CD7FD32C7020</xmpMM:OriginalDocumentID>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:3FB6BCAF4BF7E5118D96CD7FD32C7020</stEvt:instanceID>
                  <stEvt:when>2016-03-31T20:17:35+05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -217.589 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 217.589 li
286.858 217.589 li
286.858 0 li
cp
clp
[1 0 0 1 0 0 ]ct
134.403 217.589 mo
63.896 217.589 6.71679 215.072 6.71679 211.97 cv
6.71679 210.72 15.9869 209.566 31.6604 208.632 cv
33.0907 211.306 34.6781 212.838 36.2334 212.838 cv
48.7939 212.838 li
49.6743 212.838 50.4638 212.252 51.1457 211.191 cv
52.0822 212.259 53.0504 212.838 54.0068 212.838 cv
66.5669 212.838 li
68.1478 212.838 69.4361 210.947 70.3333 207.819 cv
108.228 207.819 li
110.97 211.019 114.095 212.838 117.287 212.838 cv
144.492 212.838 li
147.493 212.838 150.142 210.917 152.255 207.657 cv
189.945 207.657 li
190.924 207.657 li
191.799 207.657 li
193.913 210.917 196.562 212.838 199.562 212.838 cv
226.768 212.838 li
229.719 212.838 232.613 211.283 235.2 208.519 cv
252.051 209.472 262.09 210.669 262.09 211.97 cv
262.09 215.072 204.911 217.589 134.403 217.589 cv
false sop
/0 
[/DeviceRGB] /CSA add_res
.2 .2 .2 rgb
f
207.327 21.9565 mo
207.327 21.9565 215.083 15.2778 217.884 13.77 cv
220.685 12.2622 225.854 10.9692 227.147 15.062 cv
228.439 19.1558 226.932 20.2329 226.932 20.2329 cv
207.327 21.9565 li
cp
.905882 .470588 .0901961 rgb
ef
221.059 12.5669 mo
223.57 11.9849 226.264 12.2661 227.147 15.062 cv
227.795 17.1147 227.739 18.4087 227.522 19.189 cv
224.878 20.4136 li
223.305 20.5522 li
223.65 20.0415 224.056 19.3169 224.396 18.3677 cv
225.163 16.2231 225.328 14.1899 223.08 13.0366 cv
222.518 12.7476 221.808 12.6108 221.059 12.5669 cv
cp
.709804 .337255 .00784314 rgb
ef
220.208 13.7583 mo
220.685 13.7583 221.071 14.145 221.071 14.6216 cv
221.071 15.0981 220.685 15.4849 220.208 15.4849 cv
219.731 15.4849 219.345 15.0981 219.345 14.6216 cv
219.345 14.145 219.731 13.7583 220.208 13.7583 cv
cp
1 1 1 rgb
ef
118.853 11.2925 mo
118.853 11.2925 127.937 3.46921 131.218 1.70264 cv
134.499 -.0629968 140.555 -1.57765 142.069 3.2173 cv
143.583 8.01218 141.816 9.27391 141.816 9.27391 cv
118.853 11.2925 li
.905882 .470588 .0901961 rgb
ef
134.938 .294434 mo
137.879 -.388184 141.034 -.059082 142.069 3.21729 cv
142.828 5.62061 142.762 7.13721 142.508 8.05029 cv
139.411 9.48584 li
137.568 9.64697 li
137.973 9.04932 138.448 8.20068 138.846 7.08838 cv
139.745 4.57764 139.938 2.1958 137.305 .843262 cv
136.646 .505371 135.814 .345215 134.938 .294434 cv
cp
.709804 .337255 .00784314 rgb
ef
133.94 1.68896 mo
134.499 1.68896 134.951 2.14209 134.951 2.69971 cv
134.951 3.2583 134.499 3.71143 133.94 3.71143 cv
133.382 3.71143 132.929 3.2583 132.929 2.69971 cv
132.929 2.14209 133.382 1.68896 133.94 1.68896 cv
cp
1 1 1 rgb
ef
243.463 205.307 mo
250.136 203.348 li
250.185 203.327 li
250.279 203.298 li
251.693 202.866 252.952 202.38 253.893 201.706 cv
254.697 201.13 255.266 200.395 255.483 199.387 cv
258.726 184.351 260.969 169.678 262.122 155.367 cv
263.233 141.573 263.331 128.116 262.338 114.996 cv
265.151 114.645 li
266.168 127.954 266.072 141.602 264.945 155.589 cv
263.782 170.018 261.522 184.813 258.251 199.974 cv
257.865 201.763 256.899 203.038 255.542 204.01 cv
254.347 204.866 252.853 205.459 251.199 205.969 cv
244.188 207.628 li
243.928 207.773 li
243.634 207.81 li
243.463 207.83 li
243.463 205.307 li
10.7812 200.582 mo
10.769 200.549 li
8.72801 194.973 7.00833 188.903 5.58299 182.53 cv
4.16556 176.193 3.04391 169.566 2.18993 162.838 cv
-2.20309 128.243 .471685 90.8105 6.14794 75.8037 cv
6.25438 75.5215 li
6.46875 75.3057 li
20.6225 61.0376 36.7558 47.3071 56.3252 35.4634 cv
75.8936 23.6196 98.9024 13.6616 126.811 6.93699 cv
126.855 6.92527 li
132.344 5.79053 137.833 5.1382 143.321 4.89304 cv
148.792 4.64796 154.27 4.80905 159.749 5.29928 cv
159.793 5.29928 li
174.119 7.00344 187.509 9.00243 199.676 11.3862 cv
211.861 13.7739 222.82 16.5483 232.265 19.7983 cv
232.613 19.895 232.963 20.0523 233.31 20.2564 cv
233.651 20.4585 233.984 20.6978 234.303 20.9654 cv
235.826 22.2427 237.366 24.3735 238.196 25.8188 cv
238.204 25.8374 li
238.679 26.6695 li
239.16 27.5171 li
239.606 28.3149 240.022 29.1001 240.409 29.8726 cv
240.414 32.8521 li
239.909 31.8501 li
238.134 31.5171 li
237.653 30.6294 237.172 29.7573 236.691 28.9009 cv
236.221 28.0639 li
235.74 27.2231 li
235.738 27.2251 li
235.026 25.9848 233.73 24.1773 232.486 23.1352 cv
232.266 22.9497 232.061 22.7993 231.881 22.6929 cv
231.734 22.6069 231.603 22.5464 231.495 22.52 cv
231.489 22.52 li
231.482 22.5181 li
231.366 22.4848 li
222.036 19.2729 211.195 16.5288 199.133 14.1655 cv
187.043 11.7964 173.723 9.80809 159.461 8.11185 cv
159.462 8.10789 li
154.127 7.63233 148.787 7.47706 143.443 7.71632 cv
138.102 7.95457 132.76 8.59037 127.42 9.69382 cv
99.8628 16.3384 77.1298 26.1801 57.7867 37.8882 cv
38.5351 49.5395 22.6421 63.0406 8.69191 77.0781 cv
3.20996 91.9385 .678726 128.524 4.9907 162.483 cv
5.83397 169.128 6.94137 175.669 8.33982 181.922 cv
9.71683 188.075 11.3823 193.963 13.3662 199.409 cv
17.9214 205.29 li
17.9214 207.689 li
17.2773 207.771 li
16.8486 207.307 li
10.9917 200.958 li
10.8554 200.782 li
10.7812 200.582 li
0 0 0 rgb
f
18.6855 207.819 mo
136.522 207.819 li
136.522 145.193 li
18.6855 145.193 li
18.6855 207.819 li
ef
49.4458 164.173 mo
45.4863 164.173 43.3628 176.038 44.6216 189.475 cv
45.8808 202.911 50.0469 212.838 54.0068 212.838 cv
66.5669 212.838 li
70.5268 212.838 72.6504 200.973 71.3911 187.537 cv
70.1323 174.101 65.9658 164.173 62.0064 164.173 cv
49.4458 164.173 li
.121569 .101961 .0901961 rgb
ef
31.6724 164.173 mo
27.7134 164.173 25.5894 176.038 26.8487 189.475 cv
28.1074 202.911 32.2734 212.838 36.2334 212.838 cv
48.7939 212.838 li
52.7534 212.838 54.8769 200.973 53.6181 187.537 cv
52.3589 174.101 48.1924 164.173 44.2329 164.173 cv
31.6724 164.173 li
ef
40.4238 187.607 mo
39.2563 175.146 35.3589 165.444 31.7207 165.94 cv
28.0825 166.437 26.0796 176.944 27.2471 189.404 cv
28.415 201.865 32.312 211.567 35.9502 211.071 cv
39.5884 210.575 41.5918 200.068 40.4238 187.607 cv
cp
.301961 .286275 .282353 rgb
ef
38.4658 187.808 mo
37.5586 178.126 34.5303 170.588 31.7036 170.974 cv
28.877 171.358 27.3208 179.522 28.228 189.204 cv
29.1353 198.885 32.1631 206.424 34.9897 206.038 cv
37.8164 205.653 39.373 197.489 38.4658 187.808 cv
cp
.513726 .509804 .505882 rgb
ef
38.478 188.655 mo
37.6128 179.424 34.7256 172.235 32.0303 172.603 cv
29.3345 172.971 27.8506 180.755 28.7153 189.986 cv
29.5806 199.219 32.4683 206.406 35.1636 206.039 cv
37.8589 205.672 39.3433 197.887 38.478 188.655 cv
cp
level3{
gsave
[-3.45061 -32.8304 32.8304 -3.45061 35.3223 205.737 ]ct
<<
/PatternType 2
/Shading
/0 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.121569 .101961 .0901961 ]
/C1 [.121569 .101961 .0901961 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.121569 .101961 .0901961 ]
/C1 [.384314 .403922 .403922 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.384314 .403922 .403922 ]
/C1 [.709804 .694118 .705882 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.709804 .694118 .705882 ]
/C1 [.898039 .898039 .898039 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.898039 .898039 .898039 ]
/C1 [1 1 1 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 1 1 ]
/C1 [.784314 .807843 .796078 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.784314 .807843 .796078 ]
/C1 [.623529 .603922 .619608 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.623529 .603922 .619608 ]
/C1 [.4 .392157 .403922 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.4 .392157 .403922 ]
/C1 [.121569 .101961 .0901961 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.121569 .101961 .0901961 ]
/C1 [.121569 .101961 .0901961 ]
/N 1 
>>
]
/Bounds [.04 .0952 .1504 .2148 .2608 .408 .6104 .7576 .96 ]
/Encode [0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 ]
>>
>> /Gradient add_res /0 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
33.9121 175.019 mo
33.8228 174.96 li
33.7632 174.965 li
31.5576 175.268 30.3428 181.674 31.0518 189.27 cv
31.7588 196.866 34.1221 202.78 36.3267 202.479 cv
36.8506 202.407 37.3184 201.99 37.7178 201.297 cv
37.9907 200.437 38.2114 199.409 38.3726 198.251 cv
37.9087 199.664 37.2773 200.537 36.5215 200.642 cv
34.4639 200.923 32.2588 195.402 31.5986 188.314 cv
30.9609 181.479 31.9922 175.678 33.9121 175.019 cv
cp
.184314 .203922 .219608 rgb
ef
31.2124 183.749 mo
31.335 181.922 32.2036 180.617 33.1509 180.837 cv
34.0981 181.055 34.7671 182.715 34.6436 184.542 cv
34.521 186.369 33.6523 187.673 32.7051 187.454 cv
31.7568 187.235 31.0889 185.576 31.2124 183.749 cv
cp
.121569 .101961 .0901961 rgb
ef
32.6855 195.845 mo
32.126 193.893 32.4175 192.23 33.3345 192.132 cv
34.2515 192.034 35.4492 193.538 36.0073 195.489 cv
36.5669 197.441 36.2754 199.104 35.3584 199.202 cv
34.4409 199.301 33.2437 197.797 32.6855 195.845 cv
cp
ef
37.2261 203.281 mo
36.3872 204.08 34.7153 201.935 35.3457 200.569 cv
35.9756 199.204 36.5225 202.523 37.1973 201.864 cv
38.4854 200.605 38.0649 202.481 37.2261 203.281 cv
cp
ef
35.2607 175.313 mo
34.3306 174.395 32.9038 176.861 33.6899 178.43 cv
34.4756 179.999 34.6431 176.184 35.3936 176.941 cv
36.8252 178.389 36.1909 176.232 35.2607 175.313 cv
cp
ef
35.2417 182.805 mo
35.127 182.809 li
33.9741 182.966 33.3394 186.295 33.7095 190.242 cv
34.0796 194.189 35.314 197.264 36.4663 197.106 cv
36.6523 197.051 li
38.1499 196.855 li
38.4575 191.919 38.3091 187.105 37.1587 182.533 cv
35.2417 182.805 li
cp
level3{
gsave
[-1.52444 -14.5041 14.5041 -1.52444 36.7324 197.079 ]ct
<<
/PatternType 2
/Shading
/1 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.121569 .101961 .0901961 ]
/C1 [.121569 .101961 .0901961 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.121569 .101961 .0901961 ]
/C1 [.384314 .403922 .403922 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.384314 .403922 .403922 ]
/C1 [.709804 .694118 .705882 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.709804 .694118 .705882 ]
/C1 [.898039 .898039 .898039 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.898039 .898039 .898039 ]
/C1 [1 1 1 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 1 1 ]
/C1 [.784314 .807843 .796078 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.784314 .807843 .796078 ]
/C1 [.623529 .603922 .619608 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.623529 .603922 .619608 ]
/C1 [.4 .392157 .403922 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.4 .392157 .403922 ]
/C1 [.121569 .101961 .0901961 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.121569 .101961 .0901961 ]
/C1 [.121569 .101961 .0901961 ]
/N 1 
>>
]
/Bounds [.05 .104 .158 .221 .266 .41 .608 .752 .95 ]
/Encode [0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 ]
>>
>> /Gradient add_res /1 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
35.3633 183.19 mo
35.2202 183.192 li
34.1538 183.338 33.5669 186.418 33.9087 190.069 cv
34.2515 193.724 35.3936 196.567 36.46 196.422 cv
37.4365 196.288 38.0103 193.696 37.8384 190.458 cv
37.9316 193.312 37.3989 195.539 36.5215 195.658 cv
35.5166 195.796 34.4399 193.116 34.1172 189.673 cv
33.7949 186.232 34.3486 183.329 35.353 183.192 cv
35.3633 183.19 li
cp
0 0 0 rgb
ef
37.5972 189.189 mo
37.3022 186.045 36.3188 183.596 35.4004 183.721 cv
34.4824 183.846 33.9766 186.498 34.2715 189.643 cv
34.5664 192.788 35.5498 195.237 36.4683 195.111 cv
37.3862 194.986 37.8921 192.335 37.5972 189.189 cv
cp
.74902 .74902 .74902 rgb
ef
36.3232 184.983 mo
36.1255 184.751 35.9204 184.634 35.7188 184.661 cv
34.9307 184.769 34.4961 187.05 34.749 189.754 cv
35.0024 192.458 35.8477 194.564 36.6377 194.456 cv
36.8125 194.394 li
36.2339 193.712 35.7158 192.029 35.5273 190.013 cv
35.2935 187.516 35.647 185.38 36.3232 184.983 cv
cp
0 0 0 rgb
ef
32.9526 173.038 mo
32.8457 172.97 li
32.7744 172.976 li
30.1328 173.33 28.6777 180.84 29.5273 189.744 cv
30.3735 198.648 33.2041 205.582 35.8442 205.229 cv
36.4717 205.144 37.0322 204.655 37.5103 203.842 cv
37.8374 202.834 38.1011 201.63 38.2939 200.271 cv
37.7393 201.929 36.9829 202.952 36.0776 203.074 cv
33.6133 203.404 30.9722 196.933 30.1821 188.624 cv
29.418 180.612 30.6528 173.812 32.9526 173.038 cv
cp
.184314 .203922 .219608 rgb
ef
111.953 148.45 mo
103.378 148.45 97.6694 164.149 99.1416 181.926 cv
100.614 199.704 108.71 212.838 117.287 212.838 cv
144.492 212.838 li
153.068 212.838 158.776 197.14 157.304 179.362 cv
155.832 161.585 147.735 148.45 139.159 148.45 cv
111.953 148.45 li
.121569 .101961 .0901961 rgb
ef
128.719 179.455 mo
127.353 162.97 119.818 150.132 111.892 150.788 cv
103.966 151.444 98.6455 165.347 100.011 181.833 cv
101.376 198.319 108.912 211.156 116.837 210.5 cv
124.764 209.844 130.084 195.941 128.719 179.455 cv
.301961 .286275 .282353 rgb
ef
124.46 179.721 mo
123.399 166.911 117.544 156.937 111.386 157.447 cv
105.228 157.957 101.094 168.759 102.155 181.568 cv
103.216 194.377 109.07 204.352 115.229 203.841 cv
121.387 203.331 125.52 192.53 124.46 179.721 cv
.447059 .439216 .435294 rgb
ef
123.282 180.984 mo
122.278 168.847 116.729 159.396 110.894 159.879 cv
102.539 160.57 99.0527 178.212 99.5459 184.182 cv
100.106 190.938 105.537 204.59 114.535 203.841 cv
120.371 203.358 124.288 193.123 123.282 180.984 cv
.639216 .639216 .639216 rgb
ef
111.356 188.823 mo
107.12 188.823 103.01 185.69 99.6279 180.45 cv
100.321 172.913 103.895 160.482 110.873 159.881 cv
110.873 159.881 110.874 159.881 110.874 159.881 cv
110.88 159.88 110.887 159.879 110.894 159.879 cv
111.037 159.867 111.179 159.861 111.322 159.861 cv
112.173 159.861 113.016 160.07 113.837 160.465 cv
113.893 160.565 113.948 160.666 114.002 160.767 cv
114.014 160.766 li
114.014 160.767 114.014 160.767 114.014 160.767 cv
114.017 160.767 li
116.097 164.564 117.828 168.974 119.03 173.81 cv
119.947 183.816 li
117.72 186.76 115.044 188.547 112.064 188.794 cv
111.828 188.814 111.592 188.823 111.356 188.823 cv
level3{
gsave
clp
[3.45367e-7 28.9619 -28.9619 3.45367e-7 111.313 159.862 ]ct
/2 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.819608 .866667 .890196 ]
/C1 [.819608 .866667 .890196 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.819608 .866667 .890196 ]
/C1 [1 1 1 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 1 1 ]
/C1 [1 1 1 ]
/N 1 
>>
]
/Bounds [.09 .91 ]
/Encode [0 1 0 1 0 1 ]
>>
>>/Gradient add_res /2 /Gradient get_res clonedict shfill grestore
}if
np
116.212 182.777 mo
115.405 173.033 110.952 165.446 106.267 165.834 cv
101.583 166.222 98.438 174.438 99.2451 184.183 cv
100.052 193.927 104.505 201.514 109.19 201.126 cv
113.875 200.738 117.02 192.521 116.212 182.777 cv
cp
.870588 .870588 .866667 rgb
ef
115.549 178.241 mo
113.957 170.789 110.193 165.513 106.268 165.835 cv
103.367 166.075 101.058 169.319 99.9102 174.067 cv
101.502 181.521 105.265 186.796 109.19 186.471 cv
112.093 186.229 114.402 182.988 115.549 178.241 cv
cp
level3{
gsave
[2.46416e-7 20.6641 -20.6641 2.46416e-7 107.729 165.821 ]ct
<<
/PatternType 2
/Shading
/2 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
116.134 182.824 mo
115.333 173.077 110.922 165.49 106.283 165.875 cv
102.055 166.229 99.0942 173.089 99.2061 181.678 cv
99.314 173.93 102.073 167.866 105.949 167.541 cv
110.37 167.175 114.572 174.403 115.335 183.69 cv
116.095 192.975 113.131 200.808 108.707 201.178 cv
108.607 201.183 li
108.797 201.193 108.987 201.193 109.178 201.178 cv
113.821 200.789 116.932 192.568 116.134 182.824 cv
cp
1 1 1 rgb
ef
109.103 183.104 mo
108.67 177.881 106.283 173.813 103.772 174.021 cv
101.262 174.229 99.5757 178.634 100.008 183.856 cv
100.441 189.079 102.828 193.146 105.339 192.938 cv
107.85 192.73 109.536 188.326 109.103 183.104 cv
cp
.447059 .439216 .435294 rgb
ef
119.247 171.051 mo
117.788 167.214 114.396 165.085 113.164 165.554 cv
111.932 166.022 114.535 168.608 115.995 172.446 cv
117.455 176.283 117.22 179.922 118.452 179.454 cv
119.684 178.985 120.707 174.889 119.247 171.051 cv
cp
1 1 1 rgb
ef
104.249 174.527 mo
104.146 174.521 104.043 174.521 103.939 174.529 cv
101.616 174.722 100.057 178.798 100.456 183.629 cv
100.857 188.463 103.065 192.226 105.389 192.032 cv
107.517 191.855 109.001 188.427 108.932 184.143 cv
108.867 187.918 107.505 190.865 105.593 191.023 cv
103.403 191.205 101.322 187.659 100.944 183.104 cv
100.568 178.551 102.038 174.71 104.227 174.529 cv
104.249 174.527 li
cp
.811765 .811765 .811765 rgb
ef
108.527 182.464 mo
108.183 178.303 106.281 175.063 104.28 175.229 cv
102.28 175.395 100.937 178.903 101.282 183.063 cv
101.626 187.225 103.528 190.465 105.529 190.299 cv
107.529 190.134 108.872 186.625 108.527 182.464 cv
cp
.74902 .74902 .74902 rgb
ef
108.528 182.464 mo
108.467 181.734 108.359 181.034 108.21 180.374 cv
107.82 180.142 107.412 180.03 107 180.063 cv
105 180.229 103.657 183.738 104.001 187.898 cv
104.062 188.628 104.171 189.329 104.319 189.989 cv
104.709 190.223 105.116 190.333 105.528 190.299 cv
107.531 190.133 108.872 186.624 108.528 182.464 cv
cp
1 1 1 rgb
ef
108.677 183.012 mo
108.486 180.707 107.433 178.912 106.325 179.004 cv
105.217 179.096 104.473 181.039 104.664 183.344 cv
104.854 185.648 105.908 187.443 107.017 187.352 cv
108.125 187.26 108.868 185.316 108.677 183.012 cv
cp
0 0 0 rgb
ef
106.796 183.042 mo
106.59 181.154 105.454 179.684 104.26 179.759 cv
103.065 179.834 102.263 181.426 102.469 183.314 cv
102.675 185.202 103.811 186.672 105.005 186.598 cv
106.2 186.522 107.001 184.93 106.796 183.042 cv
cp
.447059 .439216 .435294 rgb
ef
106.813 182.102 mo
106.713 181.188 106.164 180.477 105.585 180.513 cv
105.007 180.549 104.619 181.319 104.719 182.233 cv
104.818 183.147 105.368 183.858 105.946 183.822 cv
106.524 183.785 106.912 183.016 106.813 182.102 cv
cp
1 1 1 rgb
ef
120.639 171.754 mo
119.582 168.978 117.642 167.17 116.309 167.715 cv
114.975 168.261 114.75 170.955 115.808 173.73 cv
116.865 176.507 118.805 178.314 120.139 177.77 cv
121.473 177.224 121.697 174.529 120.639 171.754 cv
cp
.121569 .101961 .0901961 rgb
ef
121.861 193.025 mo
122.714 190.18 122.278 187.563 120.888 187.184 cv
119.499 186.804 117.678 188.803 116.826 191.648 cv
115.972 194.493 116.409 197.109 117.798 197.489 cv
119.189 197.87 121.008 195.87 121.861 193.025 cv
cp
ef
110.784 203.194 mo
113 203.906 116.879 201.995 115.106 200.779 cv
113.333 199.563 112.439 202.521 110.654 201.934 cv
107.248 200.812 108.569 202.482 110.784 203.194 cv
cp
ef
109.105 162.058 mo
111.32 161.346 115.2 163.257 113.426 164.473 cv
111.653 165.688 110.759 162.731 108.975 163.319 cv
105.569 164.44 106.89 162.77 109.105 162.058 cv
cp
ef
232.102 148.45 mo
240.677 148.45 246.385 164.149 244.913 181.926 cv
243.44 199.704 235.345 212.838 226.768 212.838 cv
199.562 212.838 li
190.986 212.838 185.278 197.14 186.751 179.362 cv
188.223 161.585 196.319 148.45 204.895 148.45 cv
232.102 148.45 li
ef
147.44 207.657 mo
122.262 207.657 li
122.133 207.657 li
121.34 199.007 li
121.199 197.467 li
119.947 183.816 li
119.03 173.81 li
117.828 168.974 116.097 164.564 114.017 160.767 cv
126.655 160.59 li
130.754 207.024 li
132.265 207.023 li
128.222 160.568 li
136.076 160.459 li
136.055 160.936 136.03 161.885 136.074 163.165 cv
136.267 168.991 137.856 181.674 147.666 187.882 cv
147.929 194.5 147.985 200.757 147.791 206.38 cv
147.791 206.38 li
147.678 206.808 147.56 207.235 147.44 207.657 cv
91.2822 207.657 mo
70.3791 207.657 li
62.8413 207.657 li
44.2456 159.978 41.6889 116.394 42.1499 68.2866 cv
60.7886 59.0581 li
60.8344 58.2524 60.8823 57.4438 60.9331 56.6352 cv
40.3559 66.9233 li
40.0207 102.26 41.2822 135.179 49.1524 169.032 cv
43.9047 170.186 38.9582 171.346 34.3999 172.471 cv
32.8416 169.513 31.1816 167.118 29.5514 165.485 cv
27.9932 163.923 26.4613 163.056 25.071 163.056 cv
24.7932 163.056 24.522 163.091 24.2564 163.161 cv
19.4849 164.426 18.6279 176.812 22.3423 190.82 cv
27.8584 207.657 li
22.1289 207.657 li
12.0059 177.841 5.58349 139.384 11.0156 89.1953 cv
15.5918 86.1777 li
15.7183 85.2607 15.8462 84.3408 15.98 83.419 cv
9.59379 87.6836 li
5.78091 123.36 7.80863 153.185 12.8569 178.237 cv
10.3466 178.965 8.20716 179.606 6.50586 180.129 cv
6.57569 180.457 6.64796 180.782 6.71873 181.108 cv
8.4116 180.589 10.5469 179.949 13.0568 179.22 cv
15.167 189.479 17.7827 198.934 20.707 207.657 cv
18.6855 207.657 li
17.9668 207.657 li
17.9214 207.599 li
12.1098 200.095 li
-2.37302 160.574 -.330086 96.9258 7.47073 76.3018 cv
35.6279 47.9165 71.6508 21.6802 127.138 8.31004 cv
134.237 6.84203 141.338 6.19237 148.438 6.19237 cv
152.168 6.19237 155.897 6.37156 159.627 6.70557 cv
159.627 6.70557 li
159.627 6.70557 li
155.901 6.37204 152.175 6.19323 148.449 6.19323 cv
143.053 6.19323 137.656 6.56838 132.261 7.39206 cv
132.893 11.3304 133.822 17.1238 134.925 24.0183 cv
130.439 25.854 128.395 28.5995 128.793 32.2554 cv
133.919 100.446 li
135.066 107.407 138.704 112.038 143.719 113.773 cv
143.719 113.773 li
143.719 113.773 li
143.429 113.641 143.145 113.499 142.867 113.346 cv
144.618 114.132 146.565 114.539 148.65 114.539 cv
148.808 114.539 148.966 114.537 149.125 114.532 cv
149.183 114.941 149.24 115.348 149.295 115.75 cv
143.639 115.437 139.95 113.853 138.045 110.662 cv
138.562 113.027 139.073 115.525 139.573 118.129 cv
136.441 116.129 134.386 113.616 133.061 110.899 cv
131.264 111.774 li
131.264 111.774 li
126.277 129.142 125.122 141.903 126.484 158.598 cv
112.868 158.79 li
112.582 158.326 112.291 157.873 111.995 157.431 cv
110.712 155.516 109.335 153.815 107.898 152.361 cv
107.398 151.855 106.89 151.378 106.376 150.934 cv
103.195 148.179 99.7841 146.632 96.4685 146.632 cv
95.4886 146.632 94.5178 146.767 93.563 147.046 cv
83.8755 149.876 79.5693 166.452 83.9453 184.062 cv
91.2822 207.657 li
79.8491 165.765 mo
70.9087 167.059 li
81.3784 206.468 li
73.0263 168 li
79.8491 165.765 li
5.54747 85.8562 mo
5.41315 85.9747 5.28012 86.0922 5.14596 86.211 cv
5.29247 86.3578 5.15709 86.9468 5.39858 86.9468 cv
5.46707 86.9468 5.56584 86.8995 5.70999 86.7812 cv
43.3975 55.8609 82.6836 35.5874 123.867 23.5971 cv
123.925 22.8133 li
123.973 22.7986 124.021 22.7843 124.067 22.77 cv
124.067 22.77 131.311 20.1548 131.311 15.2104 cv
131.311 13.5855 131.029 10.9204 130.652 8.07373 cv
129.69 8.24367 128.729 8.42626 127.768 8.62546 cv
119.399 10.6419 111.471 12.952 103.948 15.517 cv
104.072 14.9487 li
103.233 15.2319 102.399 15.519 101.569 15.8081 cv
101.443 16.3856 li
60.4208 30.8543 31.5369 52.9911 8.10056 76.6172 cv
7.15897 79.107 6.30227 82.2298 5.54747 85.8562 cv
61.0478 207.657 mo
52.6058 207.657 li
46.4174 207.657 li
39.624 186.238 li
38.3434 181.409 36.6861 177.016 34.8691 173.385 cv
39.3594 172.278 44.2244 171.138 49.3803 170.004 cv
52.3006 182.372 56.1082 194.868 61.0478 207.657 cv
49.1362 170.897 mo
44.0127 172.383 li
53.9824 206.917 li
46.0054 172.993 li
49.1362 170.897 li
147.554 185.286 mo
137.551 177.727 137.981 162.359 138.076 160.431 cv
145.649 160.325 li
146.518 168.805 147.178 177.278 147.554 185.286 cv
136.893 163.052 mo
136.893 163.026 136.894 162.999 136.894 162.974 cv
136.894 162.999 136.893 163.026 136.893 163.052 cv
128.06 158.576 mo
126.887 142.93 128.346 129.968 132.205 114.277 cv
133.942 117.1 136.499 119.645 140.223 121.6 cv
142.248 132.704 144.077 145.484 145.441 158.331 cv
128.06 158.576 li
262.536 113.584 mo
262.536 113.584 li
262.536 113.584 262.536 113.583 262.536 113.583 cv
262.536 113.583 262.536 113.583 262.536 113.583 cv
263.637 113.452 li
263.637 113.452 li
262.536 113.584 li
148.955 113.337 mo
148.748 113.32 148.542 113.299 148.337 113.273 cv
148.542 113.299 148.748 113.32 148.955 113.337 cv
148.955 113.337 li
136.542 102.466 mo
136.296 101.631 136.094 100.751 135.938 99.8301 cv
135.938 99.8301 li
136.094 100.751 136.296 101.631 136.542 102.466 cv
level3{
gsave
clp
[-90.9482 214.261 -214.261 -90.9482 188.976 4.28467 ]ct
/3 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 .701961 0 ]
/C1 [1 .701961 0 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 .701961 0 ]
/C1 [1 .701961 0 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 .701961 0 ]
/C1 [.811765 .564706 0 ]
/N 1 
>>
]
/Bounds [.31 .466667 ]
/Encode [0 1 0 1 0 1 ]
>>
>>/Gradient add_res /3 /Gradient get_res clonedict shfill grestore
}if
np
243.634 207.657 mo
243.463 207.657 li
236.507 207.657 li
239.423 203.12 240.78 197.041 242.385 190.96 cv
248.727 190.985 254.149 191.016 258.04 191.044 cv
258.372 190.147 li
258.372 190.147 li
258.771 189.057 li
254.906 189.029 249.406 188.997 242.923 188.97 cv
243.266 187.731 243.628 186.499 244.024 185.287 cv
244.038 185.243 li
244.932 182.509 245.729 179.813 246.479 177.274 cv
249.266 167.846 251.384 160.682 255.849 160.325 cv
257.5 160.193 259.442 160.144 261.415 160.144 cv
261.982 160.144 262.553 160.148 263.119 160.155 cv
261.876 173.042 259.771 186.215 256.867 199.681 cv
256.264 202.478 253.797 203.701 250.689 204.649 cv
243.634 207.657 li
234.138 207.657 mo
193.018 207.657 li
195.523 190.957 li
202.567 190.921 209.924 190.907 217.101 190.907 cv
225.308 190.907 233.281 190.926 240.272 190.952 cv
238.562 197.148 236.994 203.287 234.138 207.657 cv
189.945 207.657 mo
152.255 207.657 li
147.44 207.657 li
147.44 207.657 li
147.56 207.235 147.678 206.808 147.792 206.377 cv
150.248 201.026 152.249 195.765 153.853 190.541 cv
156.073 191.124 158.57 191.45 161.374 191.45 cv
161.794 191.45 162.222 191.443 162.655 191.428 cv
169.807 191.184 180.624 191.045 192.584 190.973 cv
189.945 207.657 li
161.391 190.55 mo
161.39 190.55 li
161.391 190.55 li
161.391 190.55 li
161.391 190.55 mo
161.785 190.55 162.186 190.543 162.593 190.529 cv
162.593 190.529 li
162.593 190.529 li
162.185 190.543 161.787 190.55 161.391 190.55 cv
162.657 190.527 mo
162.661 190.527 162.665 190.527 162.669 190.527 cv
162.665 190.527 162.661 190.527 162.657 190.527 cv
162.722 190.525 mo
162.73 190.525 162.738 190.524 162.746 190.524 cv
162.738 190.524 162.73 190.525 162.722 190.525 cv
162.786 190.523 mo
162.799 190.522 162.812 190.522 162.825 190.521 cv
162.812 190.522 162.799 190.522 162.786 190.523 cv
162.848 190.521 mo
170.053 190.281 180.835 190.144 192.726 190.073 cv
192.726 190.073 li
180.837 190.144 170.051 190.281 162.848 190.521 cv
195.658 190.057 mo
195.658 190.057 li
202.619 190.022 209.887 190.008 216.979 190.008 cv
216.98 190.008 li
209.887 190.008 202.619 190.022 195.658 190.057 cv
161.422 189.456 mo
158.813 189.455 156.493 189.148 154.432 188.596 cv
157.163 179.138 158.611 169.769 159.13 160.137 cv
182.786 159.807 li
182.862 159.806 182.938 159.805 183.015 159.804 cv
186.918 159.844 190.8 160.523 193.249 162.83 cv
195.858 165.287 196.909 169.723 194.723 177.45 cv
192.899 188.978 li
180.797 189.05 169.832 189.189 162.593 189.436 cv
162.194 189.449 161.807 189.456 161.422 189.456 cv
241.142 188.963 mo
241.142 188.963 li
241.455 187.886 241.78 186.817 242.125 185.763 cv
242.14 185.719 li
243.043 182.954 243.827 180.303 244.564 177.806 cv
247.574 167.627 249.86 159.893 255.691 159.426 cv
257.391 159.29 259.387 159.24 261.41 159.24 cv
261.411 159.24 li
259.387 159.24 257.392 159.29 255.691 159.426 cv
249.86 159.893 247.574 167.627 244.564 177.806 cv
243.827 180.303 243.043 182.954 242.14 185.719 cv
242.125 185.763 li
241.78 186.817 241.455 187.886 241.142 188.963 cv
195.822 188.963 mo
197.467 177.997 li
198.261 175.221 198.656 172.812 198.724 170.723 cv
198.619 167.745 197.785 165.485 196.456 163.778 cv
195.949 162.849 195.321 162.051 194.595 161.369 cv
191.622 158.57 187.09 157.81 182.639 157.81 cv
182.448 157.81 182.258 157.812 182.067 157.814 cv
159.224 158.137 li
159.645 147.733 159.018 136.991 157.78 125.471 cv
158.475 125.492 159.186 125.502 159.914 125.502 cv
159.966 125.502 160.019 125.502 160.071 125.502 cv
263.158 125.285 li
263.113 124.495 li
263.616 124.494 li
263.583 123.83 263.546 123.165 263.507 122.502 cv
160.071 122.72 li
160.018 122.72 159.965 122.72 159.911 122.72 cv
159.074 122.72 158.26 122.706 157.47 122.678 cv
157.203 120.345 156.912 117.978 156.603 115.576 cv
154.776 115.73 153.082 115.809 151.517 115.809 cv
150.745 115.809 150.005 115.79 149.295 115.75 cv
149.24 115.348 149.183 114.941 149.125 114.532 cv
149.491 114.522 149.862 114.498 150.236 114.463 cv
262.568 115.952 li
263.058 115.892 263.474 115.832 263.816 115.772 cv
264.806 129.537 264.606 143.664 263.305 158.161 cv
262.672 158.152 262.034 158.147 261.399 158.147 cv
259.379 158.147 257.388 158.197 255.691 158.333 cv
249.86 158.799 247.574 166.533 244.564 176.712 cv
243.827 179.209 243.043 181.861 242.14 184.625 cv
242.125 184.67 li
241.664 186.079 241.238 187.517 240.828 188.962 cv
233.656 188.935 225.435 188.915 216.968 188.915 cv
209.933 188.915 202.731 188.928 195.822 188.963 cv
194.057 162.83 mo
192.221 161.119 189.588 160.303 186.741 159.98 cv
189.588 160.303 192.221 161.118 194.057 162.83 cv
186.737 159.979 mo
186.732 159.979 186.726 159.978 186.721 159.978 cv
186.727 159.978 186.731 159.979 186.737 159.979 cv
182.798 159.089 mo
182.976 159.087 183.154 159.086 183.333 159.086 cv
183.155 159.086 182.976 159.087 182.798 159.089 cv
183.337 159.086 mo
183.336 159.086 183.334 159.086 183.333 159.086 cv
183.333 159.086 li
183.334 159.086 183.336 159.086 183.337 159.086 cv
263.753 114.921 mo
263.415 114.864 263.009 114.806 262.535 114.748 cv
225.624 114.271 188.713 113.793 151.801 113.315 cv
151.791 113.316 151.782 113.317 151.772 113.318 cv
151.772 113.318 li
151.782 113.317 151.791 113.316 151.801 113.315 cv
262.567 114.748 li
262.558 114.36 262.548 113.973 262.536 113.584 cv
262.536 113.584 262.536 113.584 262.536 113.584 cv
263.637 113.453 li
263.638 113.453 li
263.675 113.908 263.711 114.365 263.746 114.82 cv
263.748 114.855 263.751 114.886 263.753 114.921 cv
150.124 113.389 mo
149.73 113.386 149.339 113.369 148.955 113.337 cv
148.955 113.337 li
149.34 113.369 149.73 113.386 150.125 113.389 cv
150.125 113.389 150.125 113.389 150.124 113.389 cv
240.289 32.7506 mo
240.152 32.5098 240.013 32.2688 239.875 32.0288 cv
215.947 23.7412 192.687 20.599 169.936 20.599 cv
169.898 20.599 169.86 20.599 169.822 20.5991 cv
169.782 20.599 169.745 20.599 169.705 20.599 cv
161.53 20.599 153.415 21.0052 145.365 21.7241 cv
141.042 22.1746 137.561 22.9393 134.925 24.0183 cv
133.822 17.1238 132.893 11.3304 132.261 7.39206 cv
137.656 6.56838 143.053 6.19323 148.449 6.19323 cv
152.175 6.19323 155.901 6.37204 159.627 6.70557 cv
159.627 6.70557 li
188.215 10.106 213.047 14.6802 231.826 21.145 cv
233.57 21.5738 235.895 24.6538 236.968 26.522 cv
238.117 28.5249 239.229 30.5386 240.304 32.561 cv
240.299 32.6234 li
240.289 32.7506 li
level3{
gsave
clp
[-125.575 -6.58107 6.58107 -125.575 261.004 112.769 ]ct
/4 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.811765 .564706 0 ]
/C1 [.811765 .564706 0 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.811765 .564706 0 ]
/C1 [.941176 .87451 .721569 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.941176 .87451 .721569 ]
/C1 [1 .701961 0 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 .701961 0 ]
/C1 [1 .701961 0 ]
/N 1 
>>
]
/Bounds [.03 .735 .97 ]
/Encode [0 1 0 1 0 1 0 1 ]
>>
>>/Gradient add_res /4 /Gradient get_res clonedict shfill grestore
}if
np
283.965 58.6841 mo
283.965 58.6841 280.705 57.4292 279.952 60.6929 cv
279.2 63.9575 277.821 79.2734 277.821 79.2734 cv
277.821 79.2734 276.817 86.0527 278.573 86.4287 cv
280.328 86.8057 281.332 84.7969 282.335 82.0352 cv
283.338 79.2734 285.093 71.6157 284.842 68.853 cv
284.592 66.0913 283.965 58.6841 283.965 58.6841 cv
cp
.301961 .286275 .282353 rgb
ef
283.965 58.6841 mo
283.965 58.6841 280.705 57.4292 279.952 60.6929 cv
279.2 63.9575 277.821 79.2734 277.821 79.2734 cv
277.821 79.2734 276.817 86.0527 278.573 86.4287 cv
279.224 86.5693 279.771 86.3799 280.254 85.9463 cv
280.153 85.9336 280.052 85.9268 279.952 85.9268 cv
277.821 85.9268 278.949 81.0313 279.451 77.7666 cv
279.953 74.502 281.206 61.9487 281.582 60.1909 cv
281.786 59.2378 282.948 58.8745 283.969 58.7427 cv
283.965 58.6841 li
cp
.447059 .439216 .435294 rgb
ef
241.837 32.5708 mo
241.837 32.5708 247.354 33.1987 248.983 33.3247 cv
250.613 33.4497 251.49 33.8267 253.622 34.8306 cv
255.754 35.8345 258.889 37.3413 258.889 37.3413 cv
281.582 51.5278 li
281.582 51.5278 287.267 53.645 286.835 59.061 cv
286.403 64.4761 284.968 69.8579 284.341 71.8667 cv
283.714 73.875 282.711 75.2559 282.711 75.2559 cv
282.711 75.2559 283.463 68.6021 283.463 66.0913 cv
283.463 63.5806 283.714 58.9351 283.714 58.9351 cv
283.714 58.9351 284.592 56.4536 279.663 53.6274 cv
274.735 50.8013 259.207 40.0376 256.14 38.9741 cv
248.857 36.4478 li
242.314 36.2173 li
239.705 32.8218 li
241.837 32.5708 li
cp
.121569 .101961 .0901961 rgb
ef
147.791 206.38 mo
147.985 200.757 147.929 194.5 147.666 187.882 cv
148.641 188.499 149.697 189.052 150.84 189.528 cv
150.156 195.4 149.178 201.166 147.792 206.377 cv
147.791 206.38 147.791 206.38 147.791 206.38 cv
151.076 187.39 mo
149.778 186.792 148.608 186.082 147.554 185.286 cv
147.178 177.278 146.518 168.805 145.649 160.325 cv
149.336 160.274 li
150.017 168.031 150.575 176.611 151.059 186.579 cv
151.137 186.124 151.214 185.669 151.29 185.215 cv
151.223 185.94 151.151 186.666 151.076 187.39 cv
145.441 158.331 mo
144.077 145.484 142.248 132.704 140.223 121.6 cv
140.338 121.66 140.454 121.719 140.57 121.778 cv
141.681 122.34 142.894 122.849 144.217 123.298 cv
146.393 134.569 147.959 145.3 149.156 158.278 cv
145.441 158.331 li
level3{
gsave
clp
[-90.9482 214.261 -214.261 -90.9482 188.976 4.28467 ]ct
/5 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 .85098 .501961 ]
/C1 [1 .85098 .501961 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 .85098 .501961 ]
/C1 [1 .85098 .501961 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 .85098 .501961 ]
/C1 [.905882 .784314 .501961 ]
/N 1 
>>
]
/Bounds [.31 .466667 ]
/Encode [0 1 0 1 0 1 ]
>>
>>/Gradient add_res /5 /Gradient get_res clonedict shfill grestore
}if
np
147.792 206.377 mo
149.178 201.166 150.156 195.4 150.84 189.528 cv
151.783 189.92 152.786 190.26 153.853 190.541 cv
152.249 195.765 150.248 201.026 147.791 206.38 cv
154.432 188.596 mo
153.227 188.273 152.111 187.868 151.076 187.39 cv
151.151 186.666 151.223 185.94 151.29 185.215 cv
152.744 176.467 153.594 167.988 154.078 160.207 cv
159.13 160.137 li
158.611 169.769 157.163 179.138 154.432 188.596 cv
154.195 158.207 mo
155.003 143.589 154.554 131.639 154.514 125.294 cv
155.56 125.379 156.648 125.438 157.78 125.471 cv
159.018 136.991 159.645 147.733 159.224 158.137 cv
154.195 158.207 li
level3{
gsave
clp
[-125.575 -6.58107 6.58107 -125.575 261.004 112.769 ]ct
/6 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.905882 .784314 .501961 ]
/C1 [.905882 .784314 .501961 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.905882 .784314 .501961 ]
/C1 [.972549 .937255 .862745 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.972549 .937255 .862745 ]
/C1 [1 .85098 .501961 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 .85098 .501961 ]
/C1 [1 .85098 .501961 ]
/N 1 
>>
]
/Bounds [.03 .735 .97 ]
/Encode [0 1 0 1 0 1 0 1 ]
>>
>>/Gradient add_res /6 /Gradient get_res clonedict shfill grestore
}if
np
150.106 121.942 mo
146.664 121.334 143.817 120.394 141.469 119.207 cv
140.797 118.868 140.166 118.508 139.573 118.129 cv
139.073 115.525 138.562 113.027 138.045 110.662 cv
139.95 113.853 143.639 115.437 149.295 115.75 cv
149.593 117.908 149.863 119.965 150.106 121.942 cv
level3{
gsave
clp
[-90.9482 214.261 -214.261 -90.9482 188.976 4.28467 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
np
157.47 122.678 mo
154.755 122.584 152.308 122.331 150.106 121.942 cv
149.863 119.965 149.593 117.908 149.295 115.75 cv
150.005 115.79 150.745 115.809 151.517 115.809 cv
153.082 115.809 154.776 115.73 156.603 115.576 cv
156.912 117.978 157.203 120.345 157.47 122.678 cv
level3{
gsave
clp
[-125.575 -6.58107 6.58107 -125.575 261.004 112.769 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
np
151.059 186.579 mo
150.575 176.611 150.017 168.031 149.336 160.274 cv
152.332 160.232 li
152.331 167.535 152.111 176.369 151.29 185.215 cv
151.214 185.669 151.137 186.124 151.059 186.579 cv
149.156 158.278 mo
147.959 145.3 146.393 134.569 144.217 123.298 cv
146.07 123.927 148.138 124.439 150.448 124.81 cv
151.968 138.006 152.297 147.538 152.329 158.234 cv
149.156 158.278 li
level3{
gsave
clp
[-90.9482 214.261 -214.261 -90.9482 188.976 4.28467 ]ct
/7 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 .92549 .752941 ]
/C1 [1 .92549 .752941 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 .92549 .752941 ]
/C1 [1 .92549 .752941 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 .92549 .752941 ]
/C1 [.952941 .894118 .752941 ]
/N 1 
>>
]
/Bounds [.31 .466667 ]
/Encode [0 1 0 1 0 1 ]
>>
>>/Gradient add_res /7 /Gradient get_res clonedict shfill grestore
}if
np
151.29 185.215 mo
152.111 176.369 152.331 167.535 152.332 160.232 cv
154.078 160.207 li
153.594 167.988 152.744 176.467 151.29 185.215 cv
152.329 158.234 mo
152.297 147.538 151.968 138.006 150.448 124.81 cv
151.728 125.016 153.082 125.178 154.514 125.294 cv
154.554 131.639 155.003 143.589 154.195 158.207 cv
152.329 158.234 li
level3{
gsave
clp
[-125.575 -6.58107 6.58107 -125.575 261.004 112.769 ]ct
/8 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.952941 .894118 .752941 ]
/C1 [.952941 .894118 .752941 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.952941 .894118 .752941 ]
/C1 [.988235 .968627 .933333 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.988235 .968627 .933333 ]
/C1 [1 .92549 .752941 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 .92549 .752941 ]
/C1 [1 .92549 .752941 ]
/N 1 
>>
]
/Bounds [.03 .735 .97 ]
/Encode [0 1 0 1 0 1 0 1 ]
>>
>>/Gradient add_res /8 /Gradient get_res clonedict shfill grestore
}if
np
159.523 124.671 mo
158.899 124.671 158.288 124.663 157.69 124.648 cv
157.619 123.994 157.545 123.337 157.47 122.678 cv
158.26 122.706 159.074 122.72 159.911 122.72 cv
159.965 122.72 160.018 122.72 160.071 122.72 cv
263.507 122.502 li
263.546 123.165 263.583 123.83 263.616 124.494 cv
263.113 124.495 li
263.11 124.453 li
159.674 124.671 li
159.623 124.671 159.573 124.671 159.523 124.671 cv
level3{
gsave
clp
[-125.575 -6.58107 6.58107 -125.575 261.004 112.769 ]ct
/9 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.403922 .282353 0 ]
/C1 [.403922 .282353 0 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.403922 .282353 0 ]
/C1 [.470588 .435294 .360784 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.470588 .435294 .360784 ]
/C1 [.498039 .34902 0 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.498039 .34902 0 ]
/C1 [.498039 .34902 0 ]
/N 1 
>>
]
/Bounds [.03 .735 .97 ]
/Encode [0 1 0 1 0 1 0 1 ]
>>
>>/Gradient add_res /9 /Gradient get_res clonedict shfill grestore
}if
np
140.04 120.603 mo
136.416 118.527 134.107 115.809 132.664 112.85 cv
132.546 112.907 li
132.714 112.243 132.885 111.574 133.061 110.899 cv
131.264 111.774 li
131.264 111.774 li
133.061 110.899 li
134.386 113.616 136.441 116.129 139.573 118.129 cv
139.73 118.944 139.886 119.768 140.04 120.603 cv
level3{
gsave
clp
[-90.9482 214.261 -214.261 -90.9482 188.976 4.28467 ]ct
/10 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.498039 .34902 0 ]
/C1 [.498039 .34902 0 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.498039 .34902 0 ]
/C1 [.498039 .34902 0 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.498039 .34902 0 ]
/C1 [.403922 .282353 0 ]
/N 1 
>>
]
/Bounds [.31 .466667 ]
/Encode [0 1 0 1 0 1 ]
>>
>>/Gradient add_res /10 /Gradient get_res clonedict shfill grestore
}if
np
150.246 123.088 mo
148.974 122.808 147.84 122.541 147.197 122.479 cv
145.84 122.347 145.403 122.606 143.789 121.114 cv
143.876 121.553 143.962 121.99 144.047 122.427 cv
142.976 122.045 141.986 121.62 141.072 121.158 cv
140.716 120.979 140.373 120.794 140.04 120.603 cv
139.886 119.768 139.73 118.944 139.573 118.129 cv
140.166 118.508 140.797 118.868 141.469 119.207 cv
143.817 120.394 146.664 121.334 150.106 121.942 cv
150.154 122.327 150.2 122.71 150.246 123.088 cv
level3{
gsave
clp
[-90.9482 214.261 -214.261 -90.9482 188.976 4.28467 ]ct
/11 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.498039 .423529 .25098 ]
/C1 [.498039 .423529 .25098 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.498039 .423529 .25098 ]
/C1 [.498039 .423529 .25098 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.498039 .423529 .25098 ]
/C1 [.45098 .392157 .25098 ]
/N 1 
>>
]
/Bounds [.31 .466667 ]
/Encode [0 1 0 1 0 1 ]
>>
>>/Gradient add_res /11 /Gradient get_res clonedict shfill grestore
}if
np
157.69 124.648 mo
156.588 124.62 155.528 124.566 154.511 124.488 cv
154.511 124.25 154.512 124.023 154.514 123.805 cv
153.244 123.726 151.66 123.399 150.246 123.088 cv
150.2 122.71 150.154 122.327 150.106 121.942 cv
152.308 122.331 154.755 122.584 157.47 122.678 cv
157.545 123.337 157.619 123.994 157.69 124.648 cv
level3{
gsave
clp
[-125.575 -6.58107 6.58107 -125.575 261.004 112.769 ]ct
/12 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.45098 .392157 .25098 ]
/C1 [.45098 .392157 .25098 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.45098 .392157 .25098 ]
/C1 [.486274 .466667 .431373 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.486274 .466667 .431373 ]
/C1 [.498039 .423529 .25098 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.498039 .423529 .25098 ]
/C1 [.498039 .423529 .25098 ]
/N 1 
>>
]
/Bounds [.03 .735 .97 ]
/Encode [0 1 0 1 0 1 0 1 ]
>>
>>/Gradient add_res /12 /Gradient get_res clonedict shfill grestore
}if
np
150.354 124.002 mo
147.99 123.621 145.897 123.087 144.047 122.427 cv
143.962 121.99 143.876 121.553 143.789 121.114 cv
145.403 122.606 145.84 122.347 147.197 122.479 cv
147.84 122.541 148.974 122.808 150.246 123.088 cv
150.283 123.395 150.319 123.699 150.354 124.002 cv
level3{
gsave
clp
[-90.9482 214.261 -214.261 -90.9482 188.976 4.28467 ]ct
/13 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.498039 .462745 .376471 ]
/C1 [.498039 .462745 .376471 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.498039 .462745 .376471 ]
/C1 [.498039 .462745 .376471 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.498039 .462745 .376471 ]
/C1 [.47451 .447059 .376471 ]
/N 1 
>>
]
/Bounds [.31 .466667 ]
/Encode [0 1 0 1 0 1 ]
>>
>>/Gradient add_res /13 /Gradient get_res clonedict shfill grestore
}if
np
154.511 124.488 mo
153.04 124.375 151.656 124.212 150.354 124.002 cv
150.319 123.699 150.283 123.395 150.246 123.088 cv
151.66 123.399 153.244 123.726 154.514 123.805 cv
154.512 124.023 154.511 124.25 154.511 124.488 cv
level3{
gsave
clp
[-125.575 -6.58107 6.58107 -125.575 261.004 112.769 ]ct
/14 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.47451 .447059 .376471 ]
/C1 [.47451 .447059 .376471 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.47451 .447059 .376471 ]
/C1 [.494118 .482353 .466667 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.494118 .482353 .466667 ]
/C1 [.498039 .462745 .376471 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.498039 .462745 .376471 ]
/C1 [.498039 .462745 .376471 ]
/N 1 
>>
]
/Bounds [.03 .735 .97 ]
/Encode [0 1 0 1 0 1 0 1 ]
>>
>>/Gradient add_res /14 /Gradient get_res clonedict shfill grestore
}if
np
140.223 121.6 mo
136.499 119.645 133.942 117.1 132.205 114.277 cv
132.251 114.09 132.298 113.9 132.345 113.712 cv
134.052 116.404 136.523 118.834 140.063 120.724 cv
140.116 121.015 140.17 121.307 140.223 121.6 cv
level3{
gsave
clp
[-90.9482 214.261 -214.261 -90.9482 188.976 4.28467 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
np
159.914 125.502 mo
159.186 125.502 158.475 125.492 157.78 125.471 cv
157.751 125.209 157.723 124.942 157.694 124.679 cv
158.416 124.701 159.156 124.712 159.914 124.712 cv
159.966 124.712 160.019 124.712 160.071 124.712 cv
263.113 124.495 li
263.158 125.285 li
160.071 125.502 li
160.019 125.502 159.966 125.502 159.914 125.502 cv
level3{
gsave
clp
[-125.575 -6.58107 6.58107 -125.575 261.004 112.769 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
np
144.217 123.298 mo
142.894 122.849 141.681 122.34 140.57 121.778 cv
140.454 121.719 140.338 121.66 140.223 121.6 cv
140.17 121.307 140.116 121.015 140.063 120.724 cv
140.23 120.814 140.399 120.901 140.57 120.988 cv
141.635 121.526 142.793 122.017 144.052 122.452 cv
144.107 122.735 144.162 123.016 144.217 123.298 cv
level3{
gsave
clp
[-90.9482 214.261 -214.261 -90.9482 188.976 4.28467 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
np
157.78 125.471 mo
156.648 125.438 155.56 125.379 154.514 125.294 cv
154.512 125.02 154.511 124.757 154.511 124.504 cv
155.532 124.586 156.592 124.645 157.694 124.679 cv
157.723 124.942 157.751 125.209 157.78 125.471 cv
level3{
gsave
clp
[-125.575 -6.58107 6.58107 -125.575 261.004 112.769 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
np
150.448 124.81 mo
148.138 124.439 146.07 123.927 144.217 123.298 cv
144.162 123.016 144.107 122.735 144.052 122.452 cv
145.922 123.098 148.014 123.624 150.355 124.005 cv
150.386 124.274 150.418 124.543 150.448 124.81 cv
level3{
gsave
clp
[-90.9482 214.261 -214.261 -90.9482 188.976 4.28467 ]ct
/15 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 .964706 .878431 ]
/C1 [1 .964706 .878431 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 .964706 .878431 ]
/C1 [1 .964706 .878431 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 .964706 .878431 ]
/C1 [.976471 .94902 .878431 ]
/N 1 
>>
]
/Bounds [.31 .466667 ]
/Encode [0 1 0 1 0 1 ]
>>
>>/Gradient add_res /15 /Gradient get_res clonedict shfill grestore
}if
np
154.514 125.294 mo
153.082 125.178 151.728 125.016 150.448 124.81 cv
150.418 124.543 150.386 124.274 150.355 124.005 cv
151.661 124.218 153.046 124.385 154.511 124.504 cv
154.511 124.757 154.512 125.02 154.514 125.294 cv
level3{
gsave
clp
[-125.575 -6.58107 6.58107 -125.575 261.004 112.769 ]ct
/16 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.976471 .94902 .878431 ]
/C1 [.976471 .94902 .878431 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.976471 .94902 .878431 ]
/C1 [.996078 .984314 .968627 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.996078 .984314 .968627 ]
/C1 [1 .964706 .878431 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 .964706 .878431 ]
/C1 [1 .964706 .878431 ]
/N 1 
>>
]
/Bounds [.03 .735 .97 ]
/Encode [0 1 0 1 0 1 0 1 ]
>>
>>/Gradient add_res /16 /Gradient get_res clonedict shfill grestore
}if
np
159.914 124.712 mo
159.156 124.712 158.416 124.701 157.694 124.679 cv
157.692 124.667 157.692 124.66 157.69 124.648 cv
158.288 124.663 158.899 124.671 159.523 124.671 cv
159.573 124.671 159.623 124.671 159.674 124.671 cv
263.11 124.453 li
263.113 124.495 li
160.071 124.712 li
160.019 124.712 159.966 124.712 159.914 124.712 cv
level3{
gsave
clp
[-125.575 -6.58107 6.58107 -125.575 261.004 112.769 ]ct
/17 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.701961 .643137 .501961 ]
/C1 [.701961 .643137 .501961 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.701961 .643137 .501961 ]
/C1 [.737255 .717647 .682353 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.737255 .717647 .682353 ]
/C1 [.74902 .67451 .501961 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.74902 .67451 .501961 ]
/C1 [.74902 .67451 .501961 ]
/N 1 
>>
]
/Bounds [.03 .735 .97 ]
/Encode [0 1 0 1 0 1 0 1 ]
>>
>>/Gradient add_res /17 /Gradient get_res clonedict shfill grestore
}if
np
140.063 120.724 mo
136.523 118.834 134.052 116.404 132.345 113.712 cv
132.411 113.444 132.478 113.176 132.546 112.907 cv
132.664 112.85 li
134.107 115.809 136.416 118.527 140.04 120.603 cv
140.048 120.644 140.055 120.683 140.063 120.724 cv
level3{
gsave
clp
[-90.9482 214.261 -214.261 -90.9482 188.976 4.28467 ]ct
/18 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.74902 .67451 .501961 ]
/C1 [.74902 .67451 .501961 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.74902 .67451 .501961 ]
/C1 [.74902 .67451 .501961 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.74902 .67451 .501961 ]
/C1 [.701961 .643137 .501961 ]
/N 1 
>>
]
/Bounds [.31 .466667 ]
/Encode [0 1 0 1 0 1 ]
>>
>>/Gradient add_res /18 /Gradient get_res clonedict shfill grestore
}if
np
144.052 122.452 mo
142.793 122.017 141.635 121.526 140.57 120.988 cv
140.399 120.901 140.23 120.814 140.063 120.724 cv
140.055 120.683 140.048 120.644 140.04 120.603 cv
140.373 120.794 140.716 120.979 141.072 121.158 cv
141.986 121.62 142.976 122.045 144.047 122.427 cv
144.049 122.435 144.051 122.444 144.052 122.452 cv
level3{
gsave
clp
[-90.9482 214.261 -214.261 -90.9482 188.976 4.28467 ]ct
/19 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.74902 .713725 .627451 ]
/C1 [.74902 .713725 .627451 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.74902 .713725 .627451 ]
/C1 [.74902 .713725 .627451 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.74902 .713725 .627451 ]
/C1 [.72549 .698039 .627451 ]
/N 1 
>>
]
/Bounds [.31 .466667 ]
/Encode [0 1 0 1 0 1 ]
>>
>>/Gradient add_res /19 /Gradient get_res clonedict shfill grestore
}if
np
157.694 124.679 mo
156.592 124.645 155.532 124.586 154.511 124.504 cv
154.511 124.499 154.511 124.493 154.511 124.488 cv
155.528 124.566 156.588 124.62 157.69 124.648 cv
157.692 124.66 157.692 124.667 157.694 124.679 cv
level3{
gsave
clp
[-125.575 -6.58107 6.58107 -125.575 261.004 112.769 ]ct
/20 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.72549 .698039 .627451 ]
/C1 [.72549 .698039 .627451 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.72549 .698039 .627451 ]
/C1 [.745098 .733333 .717647 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.745098 .733333 .717647 ]
/C1 [.74902 .713725 .627451 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.74902 .713725 .627451 ]
/C1 [.74902 .713725 .627451 ]
/N 1 
>>
]
/Bounds [.03 .735 .97 ]
/Encode [0 1 0 1 0 1 0 1 ]
>>
>>/Gradient add_res /20 /Gradient get_res clonedict shfill grestore
}if
np
150.355 124.005 mo
148.014 123.624 145.922 123.098 144.052 122.452 cv
144.051 122.444 144.049 122.435 144.047 122.427 cv
145.897 123.087 147.99 123.621 150.354 124.002 cv
150.354 124.003 150.355 124.004 150.355 124.005 cv
level3{
gsave
clp
[-90.9482 214.261 -214.261 -90.9482 188.976 4.28467 ]ct
/21 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.74902 .733333 .690196 ]
/C1 [.74902 .733333 .690196 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.74902 .733333 .690196 ]
/C1 [.74902 .733333 .690196 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.74902 .733333 .690196 ]
/C1 [.737255 .72549 .690196 ]
/N 1 
>>
]
/Bounds [.31 .466667 ]
/Encode [0 1 0 1 0 1 ]
>>
>>/Gradient add_res /21 /Gradient get_res clonedict shfill grestore
}if
np
154.511 124.504 mo
153.046 124.385 151.661 124.218 150.355 124.005 cv
150.355 124.004 150.354 124.003 150.354 124.002 cv
151.656 124.212 153.04 124.375 154.511 124.488 cv
154.511 124.493 154.511 124.499 154.511 124.504 cv
level3{
gsave
clp
[-125.575 -6.58107 6.58107 -125.575 261.004 112.769 ]ct
/22 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.737255 .72549 .690196 ]
/C1 [.737255 .72549 .690196 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.737255 .72549 .690196 ]
/C1 [.74902 .741176 .733333 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.74902 .741176 .733333 ]
/C1 [.74902 .733333 .690196 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.74902 .733333 .690196 ]
/C1 [.74902 .733333 .690196 ]
/N 1 
>>
]
/Bounds [.03 .735 .97 ]
/Encode [0 1 0 1 0 1 0 1 ]
>>
>>/Gradient add_res /22 /Gradient get_res clonedict shfill grestore
}if
np
234.807 207.657 mo
234.138 207.657 li
236.994 203.287 238.562 197.148 240.272 190.952 cv
240.373 190.952 240.475 190.952 240.575 190.953 cv
238.881 197.014 237.406 203.114 234.807 207.657 cv
level3{
gsave
clp
[-125.575 -6.58107 6.58107 -125.575 261.004 112.769 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
np
263.333 159.254 mo
263.29 159.253 263.248 159.253 263.205 159.252 cv
263.239 158.887 263.272 158.525 263.305 158.161 cv
263.397 158.162 263.489 158.164 263.581 158.165 cv
263.499 158.528 263.416 158.891 263.333 159.254 cv
0 0 0 rgb
f
241.142 188.963 mo
241.039 188.963 240.931 188.962 240.828 188.962 cv
241.238 187.517 241.664 186.079 242.125 184.67 cv
242.14 184.625 li
243.043 181.861 243.827 179.209 244.564 176.712 cv
247.574 166.533 249.86 158.799 255.691 158.333 cv
257.388 158.197 259.379 158.147 261.399 158.147 cv
262.034 158.147 262.672 158.152 263.305 158.161 cv
263.272 158.525 263.239 158.887 263.205 159.252 cv
262.609 159.244 262.009 159.24 261.411 159.24 cv
261.411 159.24 261.411 159.24 261.411 159.24 cv
261.41 159.24 li
259.387 159.24 257.391 159.29 255.691 159.426 cv
249.86 159.893 247.574 167.627 244.564 177.806 cv
243.827 180.303 243.043 182.954 242.14 185.719 cv
242.125 185.763 li
241.78 186.817 241.455 187.886 241.142 188.963 cv
level3{
gsave
clp
[-125.575 -6.58107 6.58107 -125.575 261.004 112.769 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
np
236.507 207.657 mo
235.964 207.657 li
234.807 207.657 li
237.406 203.114 238.881 197.014 240.575 190.953 cv
241.187 190.955 241.79 190.957 242.385 190.96 cv
240.78 197.041 239.423 203.12 236.507 207.657 cv
level3{
gsave
clp
[-125.575 -6.58107 6.58107 -125.575 261.004 112.769 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
np
263.124 160.155 mo
263.122 160.155 263.121 160.155 263.119 160.155 cv
263.148 159.855 263.177 159.552 263.205 159.252 cv
263.248 159.253 263.29 159.253 263.333 159.254 cv
263.333 159.254 li
263.333 159.254 263.334 159.254 263.334 159.254 cv
263.124 160.155 li
.501961 .501961 .501961 rgb
f
242.923 188.97 mo
242.336 188.968 241.744 188.965 241.142 188.963 cv
241.455 187.886 241.78 186.817 242.125 185.763 cv
242.14 185.719 li
243.043 182.954 243.827 180.303 244.564 177.806 cv
247.574 167.627 249.86 159.893 255.691 159.426 cv
257.392 159.29 259.387 159.24 261.411 159.24 cv
262.009 159.24 262.609 159.244 263.205 159.252 cv
263.177 159.552 263.148 159.855 263.119 160.155 cv
262.553 160.148 261.982 160.144 261.415 160.144 cv
259.442 160.144 257.5 160.193 255.849 160.325 cv
251.384 160.682 249.266 167.846 246.479 177.274 cv
245.729 179.813 244.932 182.509 244.038 185.243 cv
244.024 185.287 li
243.628 186.499 243.266 187.731 242.923 188.97 cv
level3{
gsave
clp
[-125.575 -6.58107 6.58107 -125.575 261.004 112.769 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
np
263.333 159.254 mo
263.29 159.253 263.248 159.253 263.205 159.252 cv
263.205 159.252 li
263.248 159.253 263.29 159.253 263.333 159.254 cv
263.333 159.254 263.333 159.254 263.333 159.254 cv
.501961 .501961 .501961 rgb
f
263.205 159.252 mo
262.609 159.244 262.009 159.24 261.411 159.24 cv
261.411 159.24 261.411 159.24 261.411 159.24 cv
262.009 159.24 262.609 159.244 263.205 159.252 cv
263.205 159.252 li
level3{
gsave
clp
[-125.575 -6.58107 6.58107 -125.575 261.004 112.769 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
np
192.899 188.978 mo
194.723 177.45 li
196.909 169.723 195.858 165.287 193.249 162.83 cv
190.8 160.523 186.918 159.844 183.015 159.804 cv
183.124 159.803 183.234 159.803 183.344 159.803 cv
184.479 159.803 185.616 159.853 186.721 159.978 cv
186.726 159.978 186.732 159.979 186.737 159.979 cv
186.738 159.979 186.74 159.98 186.741 159.98 cv
189.588 160.303 192.221 161.119 194.057 162.83 cv
194.057 162.83 li
195.707 164.367 196.738 166.682 196.739 170.092 cv
196.739 170.304 196.735 170.52 196.727 170.741 cv
196.727 170.741 li
196.727 170.741 li
196.734 170.944 196.738 171.151 196.739 171.362 cv
196.74 173.401 196.372 175.832 195.545 178.726 cv
193.908 188.973 li
193.572 188.975 193.234 188.976 192.899 188.978 cv
level3{
gsave
clp
[-125.575 -6.58107 6.58107 -125.575 261.004 112.769 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
np
190.924 207.657 mo
189.945 207.657 li
192.584 190.973 li
192.918 190.971 193.253 190.969 193.59 190.967 cv
190.924 207.657 li
192.726 190.073 mo
192.726 190.073 li
193.06 190.071 193.398 190.069 193.733 190.067 cv
193.733 190.067 li
193.395 190.069 193.063 190.071 192.726 190.073 cv
level3{
gsave
clp
[-125.575 -6.58107 6.58107 -125.575 261.004 112.769 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
np
128.161 159.852 mo
128.125 159.425 128.092 158.999 128.06 158.576 cv
145.441 158.331 li
145.487 158.758 145.531 159.181 145.575 159.609 cv
128.161 159.852 li
level3{
gsave
clp
[-90.9482 214.261 -214.261 -90.9482 188.976 4.28467 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
np
196.456 163.778 mo
196.137 163.369 195.79 162.992 195.417 162.645 cv
195.417 162.645 li
195.417 162.645 li
192.414 159.845 187.835 159.086 183.337 159.086 cv
183.336 159.086 183.334 159.086 183.333 159.086 cv
183.333 159.086 li
183.333 159.086 li
183.333 159.086 li
183.154 159.086 182.976 159.087 182.798 159.089 cv
182.786 159.089 182.775 159.09 182.763 159.09 cv
182.763 159.09 li
159.167 159.419 li
159.187 158.991 159.206 158.566 159.224 158.137 cv
182.067 157.814 li
182.258 157.812 182.448 157.81 182.639 157.81 cv
187.09 157.81 191.622 158.57 194.595 161.369 cv
195.321 162.051 195.949 162.849 196.456 163.778 cv
level3{
gsave
clp
[-125.575 -6.58107 6.58107 -125.575 261.004 112.769 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
np
145.575 159.609 mo
145.531 159.181 145.487 158.758 145.441 158.331 cv
149.156 158.278 li
149.195 158.702 149.234 159.129 149.272 159.557 cv
145.575 159.609 li
level3{
gsave
clp
[-90.9482 214.261 -214.261 -90.9482 188.976 4.28467 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
np
154.122 159.489 mo
154.147 159.061 154.172 158.632 154.195 158.207 cv
159.224 158.137 li
159.206 158.566 159.187 158.991 159.167 159.419 cv
154.122 159.489 li
level3{
gsave
clp
[-125.575 -6.58107 6.58107 -125.575 261.004 112.769 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
np
149.272 159.557 mo
149.234 159.129 149.195 158.702 149.156 158.278 cv
152.329 158.234 li
152.33 158.659 152.331 159.085 152.332 159.514 cv
149.272 159.557 li
level3{
gsave
clp
[-90.9482 214.261 -214.261 -90.9482 188.976 4.28467 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
np
152.332 159.514 mo
152.331 159.085 152.33 158.659 152.329 158.234 cv
154.195 158.207 li
154.172 158.632 154.147 159.061 154.122 159.489 cv
152.332 159.514 li
level3{
gsave
clp
[-125.575 -6.58107 6.58107 -125.575 261.004 112.769 ]ct
/14 /Gradient get_res clonedict shfill grestore
}if
np
113.85 160.471 mo
113.846 160.469 113.841 160.467 113.837 160.464 cv
113.521 159.891 113.196 159.334 112.865 158.79 cv
112.868 158.79 li
113.122 159.203 113.373 159.625 113.618 160.055 cv
113.616 160.055 li
113.616 160.055 li
113.616 160.055 li
113.624 160.069 113.633 160.084 113.641 160.098 cv
113.641 160.099 113.641 160.099 113.642 160.099 cv
113.649 160.113 113.657 160.126 113.664 160.139 cv
113.666 160.142 113.667 160.145 113.669 160.148 cv
113.674 160.157 113.68 160.167 113.685 160.177 cv
113.691 160.187 113.697 160.197 113.703 160.208 cv
113.703 160.208 113.704 160.209 113.704 160.21 cv
113.753 160.297 113.802 160.384 113.85 160.471 cv
.223529 .219608 .215686 rgb
f
113.851 160.471 mo
113.846 160.469 113.842 160.467 113.837 160.465 cv
113.837 160.465 113.837 160.465 113.837 160.464 cv
113.841 160.467 113.846 160.469 113.85 160.471 cv
113.851 160.471 113.851 160.471 113.851 160.471 cv
.317647 .317647 .317647 rgb
f
114.002 160.767 mo
113.948 160.666 113.893 160.565 113.837 160.465 cv
113.842 160.467 113.846 160.469 113.851 160.471 cv
113.905 160.569 113.959 160.667 114.014 160.766 cv
114.002 160.767 li
level3{
gsave
clp
[3.45367e-7 28.9619 -28.9619 3.45367e-7 111.313 159.862 ]ct
/23 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.407843 .431373 .443137 ]
/C1 [.407843 .431373 .443137 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.407843 .431373 .443137 ]
/C1 [.498039 .498039 .498039 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.498039 .498039 .498039 ]
/C1 [.498039 .498039 .498039 ]
/N 1 
>>
]
/Bounds [.09 .91 ]
/Encode [0 1 0 1 0 1 ]
>>
>>/Gradient add_res /23 /Gradient get_res clonedict shfill grestore
}if
np
113.618 160.055 mo
113.373 159.625 113.122 159.203 112.868 158.79 cv
126.484 158.598 li
126.518 159.02 126.554 159.446 126.592 159.874 cv
113.616 160.055 li
level3{
gsave
clp
[-90.9482 214.261 -214.261 -90.9482 188.976 4.28467 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
np
193.018 207.657 mo
190.924 207.657 li
193.59 190.967 li
194.231 190.964 194.875 190.96 195.523 190.957 cv
193.018 207.657 li
193.733 190.067 mo
193.733 190.067 li
194.374 190.064 195.012 190.06 195.658 190.057 cv
195.658 190.057 li
195.014 190.06 194.372 190.064 193.733 190.067 cv
level3{
gsave
clp
[-125.575 -6.58107 6.58107 -125.575 261.004 112.769 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
np
128.222 160.565 mo
128.211 160.44 li
128.194 160.244 128.177 160.048 128.161 159.852 cv
145.575 159.609 li
145.6 159.845 145.625 160.084 145.649 160.32 cv
138.076 160.427 li
138.082 160.302 138.087 160.234 138.087 160.23 cv
136.095 160.113 li
136.094 160.12 136.085 160.238 136.076 160.455 cv
128.222 160.565 li
138.076 160.431 mo
138.076 160.43 138.076 160.428 138.076 160.427 cv
145.649 160.32 li
145.649 160.323 145.649 160.323 145.649 160.325 cv
138.076 160.431 li
level3{
gsave
clp
[-90.9482 214.261 -214.261 -90.9482 188.976 4.28467 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
np
193.908 188.973 mo
195.545 178.726 li
196.372 175.832 196.74 173.401 196.739 171.362 cv
196.738 171.151 196.734 170.944 196.727 170.741 cv
196.735 170.52 196.739 170.304 196.739 170.092 cv
196.738 166.682 195.707 164.367 194.057 162.83 cv
194.057 162.83 li
192.221 161.118 189.588 160.303 186.741 159.98 cv
186.739 159.98 186.738 159.98 186.737 159.979 cv
186.731 159.979 186.727 159.978 186.721 159.978 cv
185.613 159.853 184.472 159.802 183.333 159.802 cv
183.214 159.802 183.095 159.803 182.976 159.804 cv
182.989 159.804 183.002 159.804 183.015 159.804 cv
182.938 159.805 182.862 159.806 182.786 159.807 cv
159.13 160.137 li
159.13 160.133 159.13 160.134 159.13 160.13 cv
182.091 159.807 li
159.13 160.13 li
159.143 159.894 159.155 159.656 159.167 159.419 cv
182.763 159.09 li
182.763 159.09 li
182.775 159.09 182.786 159.089 182.798 159.089 cv
182.976 159.087 183.155 159.086 183.333 159.086 cv
183.333 159.086 li
183.334 159.086 183.336 159.086 183.337 159.086 cv
187.835 159.086 192.414 159.845 195.417 162.645 cv
195.417 162.645 li
195.417 162.645 li
195.791 162.994 196.14 163.373 196.459 163.784 cv
196.458 163.782 196.457 163.78 196.456 163.778 cv
197.785 165.485 198.619 167.745 198.724 170.723 cv
198.656 172.812 198.261 175.221 197.467 177.997 cv
195.822 188.963 li
195.182 188.966 194.543 188.969 193.908 188.973 cv
level3{
gsave
clp
[-125.575 -6.58107 6.58107 -125.575 261.004 112.769 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
np
145.649 160.325 mo
145.649 160.323 145.649 160.323 145.649 160.32 cv
149.335 160.268 li
149.335 160.27 149.336 160.272 149.336 160.274 cv
145.649 160.325 li
145.649 160.32 mo
145.625 160.084 145.6 159.845 145.575 159.609 cv
149.272 159.557 li
149.293 159.793 149.314 160.031 149.335 160.268 cv
145.649 160.32 li
level3{
gsave
clp
[-90.9482 214.261 -214.261 -90.9482 188.976 4.28467 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
np
154.078 160.207 mo
154.078 160.204 154.078 160.205 154.078 160.202 cv
159.13 160.13 li
159.13 160.134 159.13 160.133 159.13 160.137 cv
154.078 160.207 li
154.078 160.201 mo
154.093 159.964 154.108 159.726 154.122 159.489 cv
159.167 159.419 li
159.155 159.656 159.143 159.894 159.13 160.13 cv
154.078 160.201 li
level3{
gsave
clp
[-125.575 -6.58107 6.58107 -125.575 261.004 112.769 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
np
149.336 160.274 mo
149.336 160.272 149.335 160.27 149.335 160.268 cv
152.332 160.226 li
152.332 160.228 152.332 160.23 152.332 160.232 cv
149.336 160.274 li
149.335 160.268 mo
149.314 160.031 149.293 159.793 149.272 159.557 cv
152.332 159.514 li
152.332 159.739 152.332 159.965 152.332 160.19 cv
152.332 160.202 152.332 160.214 152.332 160.226 cv
149.335 160.268 li
level3{
gsave
clp
[-90.9482 214.261 -214.261 -90.9482 188.976 4.28467 ]ct
/15 /Gradient get_res clonedict shfill grestore
}if
np
152.332 160.232 mo
152.332 160.23 152.332 160.228 152.332 160.226 cv
154.078 160.202 li
154.078 160.205 154.078 160.204 154.078 160.207 cv
152.332 160.232 li
152.332 160.226 mo
152.332 160.214 152.332 160.202 152.332 160.19 cv
152.332 159.965 152.332 159.739 152.332 159.514 cv
154.122 159.489 li
154.108 159.726 154.093 159.964 154.078 160.201 cv
152.332 160.226 li
level3{
gsave
clp
[-125.575 -6.58107 6.58107 -125.575 261.004 112.769 ]ct
/16 /Gradient get_res clonedict shfill grestore
}if
np
128.222 160.568 mo
128.222 160.566 li
136.076 160.455 li
136.076 160.456 136.076 160.458 136.076 160.459 cv
128.222 160.568 li
level3{
gsave
clp
[-90.9482 214.261 -214.261 -90.9482 188.976 4.28467 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
np
196.739 171.362 mo
196.738 171.151 196.734 170.944 196.727 170.741 cv
196.727 170.741 li
196.734 170.944 196.738 171.151 196.739 171.362 cv
196.739 170.092 mo
196.738 166.682 195.707 164.367 194.057 162.83 cv
194.057 162.83 li
194.057 162.83 li
195.707 164.367 196.738 166.682 196.739 170.092 cv
196.459 163.784 mo
196.14 163.373 195.791 162.994 195.417 162.645 cv
195.79 162.992 196.137 163.369 196.456 163.778 cv
196.457 163.78 196.458 163.782 196.459 163.784 cv
195.417 162.645 mo
192.414 159.845 187.835 159.086 183.337 159.086 cv
187.835 159.086 192.414 159.845 195.417 162.645 cv
level3{
gsave
clp
[-125.575 -6.58107 6.58107 -125.575 261.004 112.769 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
np
128.222 160.566 mo
128.222 160.565 li
136.076 160.455 li
136.076 160.455 136.076 160.455 136.076 160.455 cv
128.222 160.566 li
138.076 160.427 mo
138.076 160.427 138.076 160.427 138.076 160.427 cv
145.649 160.32 li
145.649 160.32 li
138.076 160.427 li
level3{
gsave
clp
[-90.9482 214.261 -214.261 -90.9482 188.976 4.28467 ]ct
/18 /Gradient get_res clonedict shfill grestore
}if
np
159.13 160.13 mo
159.13 160.13 li
182.091 159.807 li
159.13 160.13 li
level3{
gsave
clp
[-125.575 -6.58107 6.58107 -125.575 261.004 112.769 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
np
145.649 160.32 mo
145.649 160.32 li
149.335 160.268 li
149.335 160.268 li
145.649 160.32 li
level3{
gsave
clp
[-90.9482 214.261 -214.261 -90.9482 188.976 4.28467 ]ct
/19 /Gradient get_res clonedict shfill grestore
}if
np
154.078 160.202 mo
154.078 160.201 li
159.13 160.13 li
159.13 160.13 li
154.078 160.202 li
level3{
gsave
clp
[-125.575 -6.58107 6.58107 -125.575 261.004 112.769 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
np
149.335 160.268 mo
149.335 160.268 li
152.332 160.226 li
152.332 160.226 li
149.335 160.268 li
level3{
gsave
clp
[-90.9482 214.261 -214.261 -90.9482 188.976 4.28467 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
np
152.332 160.226 mo
152.332 160.226 li
154.078 160.201 li
154.078 160.202 li
152.332 160.226 li
level3{
gsave
clp
[-125.575 -6.58107 6.58107 -125.575 261.004 112.769 ]ct
/22 /Gradient get_res clonedict shfill grestore
}if
np
186.741 159.98 mo
186.74 159.98 186.738 159.979 186.737 159.979 cv
186.738 159.98 186.739 159.98 186.741 159.98 cv
186.721 159.978 mo
185.616 159.853 184.479 159.803 183.344 159.803 cv
183.234 159.803 183.124 159.803 183.015 159.804 cv
183.002 159.804 182.989 159.804 182.976 159.804 cv
183.095 159.803 183.214 159.802 183.333 159.802 cv
184.472 159.802 185.613 159.853 186.721 159.978 cv
182.763 159.09 mo
182.775 159.09 182.786 159.089 182.798 159.089 cv
182.786 159.089 182.775 159.09 182.763 159.09 cv
183.333 159.086 mo
183.333 159.086 li
183.333 159.086 li
183.333 159.086 li
level3{
gsave
clp
[-125.575 -6.58107 6.58107 -125.575 261.004 112.769 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
np
114.014 160.767 mo
114.014 160.767 114.014 160.767 114.014 160.766 cv
114.016 160.766 li
114.017 160.767 li
114.014 160.767 li
level3{
gsave
clp
[3.45367e-7 28.9619 -28.9619 3.45367e-7 111.313 159.862 ]ct
/24 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.909804 .933333 .945098 ]
/C1 [.909804 .933333 .945098 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.909804 .933333 .945098 ]
/C1 [1 1 1 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 1 1 ]
/C1 [1 1 1 ]
/N 1 
>>
]
/Bounds [.09 .91 ]
/Encode [0 1 0 1 0 1 ]
>>
>>/Gradient add_res /24 /Gradient get_res clonedict shfill grestore
}if
np
114.017 160.767 mo
114.016 160.766 li
126.655 160.588 li
126.655 160.59 li
114.017 160.767 li
level3{
gsave
clp
[-90.9482 214.261 -214.261 -90.9482 188.976 4.28467 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
np
113.854 160.473 mo
113.853 160.472 113.852 160.471 113.851 160.471 cv
113.802 160.384 113.753 160.297 113.704 160.21 cv
113.704 160.209 113.703 160.208 113.703 160.208 cv
113.697 160.197 113.691 160.187 113.685 160.177 cv
113.68 160.167 113.674 160.157 113.669 160.148 cv
113.667 160.145 113.666 160.142 113.664 160.139 cv
113.657 160.126 113.649 160.113 113.642 160.099 cv
113.641 160.099 113.641 160.099 113.641 160.098 cv
113.633 160.084 113.624 160.069 113.616 160.055 cv
113.616 160.055 li
113.698 160.194 113.776 160.332 113.854 160.473 cv
.72549 .721569 .717647 rgb
f
113.854 160.473 mo
113.853 160.472 113.852 160.472 113.851 160.471 cv
113.851 160.471 113.851 160.471 113.851 160.471 cv
113.852 160.471 113.853 160.472 113.854 160.473 cv
113.854 160.473 li
.819608 .819608 .819608 rgb
f
114.014 160.766 mo
113.96 160.667 113.905 160.569 113.851 160.471 cv
113.852 160.472 113.853 160.472 113.854 160.473 cv
113.908 160.57 113.962 160.668 114.016 160.766 cv
114.014 160.766 li
level3{
gsave
clp
[3.45367e-7 28.9619 -28.9619 3.45367e-7 111.313 159.862 ]ct
/24 /Gradient get_res clonedict shfill grestore
}if
np
114.016 160.766 mo
113.962 160.668 113.908 160.57 113.854 160.473 cv
113.854 160.473 li
113.776 160.332 113.698 160.194 113.618 160.055 cv
126.592 159.874 li
126.593 159.887 126.594 159.901 126.596 159.915 cv
126.655 160.588 li
114.016 160.766 li
level3{
gsave
clp
[-90.9482 214.261 -214.261 -90.9482 188.976 4.28467 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
np
113.851 160.471 mo
113.85 160.471 li
113.802 160.384 113.753 160.297 113.704 160.21 cv
113.753 160.297 113.802 160.384 113.851 160.471 cv
.611765 .611765 .607843 rgb
f
113.851 160.471 mo
113.851 160.471 li
113.851 160.471 113.851 160.471 113.85 160.471 cv
113.851 160.471 li
113.851 160.471 113.851 160.471 113.851 160.471 cv
.658823 .658823 .658823 rgb
f
114.014 160.766 mo
113.959 160.667 113.905 160.569 113.851 160.471 cv
113.851 160.471 li
113.905 160.569 113.96 160.667 114.014 160.766 cv
114.016 160.766 li
114.016 160.766 li
114.014 160.766 li
level3{
gsave
clp
[3.45367e-7 28.9619 -28.9619 3.45367e-7 111.313 159.862 ]ct
/25 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.705882 .717647 .721569 ]
/C1 [.705882 .717647 .721569 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.705882 .717647 .721569 ]
/C1 [.74902 .74902 .74902 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.74902 .74902 .74902 ]
/C1 [.74902 .74902 .74902 ]
/N 1 
>>
]
/Bounds [.09 .91 ]
/Encode [0 1 0 1 0 1 ]
>>
>>/Gradient add_res /25 /Gradient get_res clonedict shfill grestore
}if
np
114.016 160.766 mo
114.016 160.766 li
126.655 160.588 li
126.655 160.588 li
114.016 160.766 li
level3{
gsave
clp
[-90.9482 214.261 -214.261 -90.9482 188.976 4.28467 ]ct
/18 /Gradient get_res clonedict shfill grestore
}if
np
113.703 160.208 mo
113.697 160.197 113.691 160.187 113.685 160.177 cv
113.691 160.187 113.697 160.197 113.703 160.208 cv
113.669 160.148 mo
113.667 160.145 113.666 160.142 113.664 160.139 cv
113.666 160.142 113.667 160.145 113.669 160.148 cv
113.642 160.099 mo
113.641 160.099 113.641 160.099 113.641 160.098 cv
113.641 160.099 113.641 160.099 113.642 160.099 cv
113.616 160.055 mo
113.616 160.055 li
113.616 160.055 li
.611765 .611765 .607843 rgb
f
130.754 207.024 mo
126.655 160.59 li
128.222 160.568 li
132.265 207.023 li
130.754 207.024 li
126.484 158.598 mo
125.122 141.903 126.277 129.142 131.264 111.774 cv
131.264 111.774 li
131.493 112.245 131.742 112.71 132.012 113.167 cv
131.662 113.338 li
131.833 113.654 132.014 113.967 132.205 114.277 cv
128.346 129.968 126.887 142.93 128.06 158.576 cv
126.484 158.598 li
level3{
gsave
clp
[-90.9482 214.261 -214.261 -90.9482 188.976 4.28467 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
np
132.012 113.167 mo
131.742 112.71 131.493 112.245 131.264 111.774 cv
133.061 110.899 li
132.885 111.574 132.714 112.243 132.546 112.907 cv
132.012 113.167 li
level3{
gsave
clp
[-90.9482 214.261 -214.261 -90.9482 188.976 4.28467 ]ct
/26 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.247059 .172549 0 ]
/C1 [.247059 .172549 0 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.247059 .172549 0 ]
/C1 [.247059 .172549 0 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.247059 .172549 0 ]
/C1 [.2 .141176 0 ]
/N 1 
>>
]
/Bounds [.31 .466667 ]
/Encode [0 1 0 1 0 1 ]
>>
>>/Gradient add_res /26 /Gradient get_res clonedict shfill grestore
}if
np
132.205 114.277 mo
132.014 113.967 131.833 113.654 131.662 113.338 cv
132.012 113.167 li
132.119 113.35 132.23 113.532 132.345 113.712 cv
132.298 113.9 132.251 114.09 132.205 114.277 cv
level3{
gsave
clp
[-90.9482 214.261 -214.261 -90.9482 188.976 4.28467 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
np
132.345 113.712 mo
132.23 113.532 132.119 113.35 132.012 113.167 cv
132.546 112.907 li
132.478 113.176 132.411 113.444 132.345 113.712 cv
level3{
gsave
clp
[-90.9482 214.261 -214.261 -90.9482 188.976 4.28467 ]ct
/27 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.372549 .337255 .25098 ]
/C1 [.372549 .337255 .25098 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.372549 .337255 .25098 ]
/C1 [.372549 .337255 .25098 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.372549 .337255 .25098 ]
/C1 [.34902 .321569 .25098 ]
/N 1 
>>
]
/Bounds [.31 .466667 ]
/Encode [0 1 0 1 0 1 ]
>>
>>/Gradient add_res /27 /Gradient get_res clonedict shfill grestore
}if
np
126.592 159.874 mo
126.554 159.446 126.518 159.02 126.484 158.598 cv
128.06 158.576 li
128.092 158.999 128.125 159.425 128.161 159.852 cv
126.592 159.874 li
level3{
gsave
clp
[-90.9482 214.261 -214.261 -90.9482 188.976 4.28467 ]ct
/26 /Gradient get_res clonedict shfill grestore
}if
np
126.655 160.59 mo
126.655 160.588 li
128.222 160.566 li
128.222 160.568 li
126.655 160.59 li
126.655 160.588 mo
126.596 159.915 li
126.594 159.901 126.593 159.887 126.592 159.874 cv
128.161 159.852 li
128.177 160.048 128.194 160.244 128.211 160.44 cv
128.222 160.565 li
126.655 160.588 li
level3{
gsave
clp
[-90.9482 214.261 -214.261 -90.9482 188.976 4.28467 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
np
126.655 160.588 mo
126.655 160.588 li
128.222 160.565 li
128.222 160.566 li
126.655 160.588 li
level3{
gsave
clp
[-90.9482 214.261 -214.261 -90.9482 188.976 4.28467 ]ct
/27 /Gradient get_res clonedict shfill grestore
}if
np
133.897 121.264 mo
134.049 120.132 133.701 119.151 133.121 119.073 cv
132.541 118.996 131.947 119.851 131.795 120.981 cv
131.644 122.114 131.991 123.095 132.571 123.172 cv
133.152 123.25 133.745 122.396 133.897 121.264 cv
cp
0 0 0 rgb
ef
131.724 137.637 mo
131.866 136.504 131.509 135.526 130.928 135.454 cv
130.347 135.381 129.761 136.241 129.62 137.374 cv
129.478 138.507 129.834 139.484 130.416 139.558 cv
130.997 139.63 131.583 138.77 131.724 137.637 cv
cp
ef
130.754 154.64 mo
130.742 153.498 130.257 152.577 129.672 152.583 cv
129.086 152.589 128.622 153.521 128.634 154.662 cv
128.646 155.804 129.13 156.725 129.715 156.719 cv
130.301 156.712 130.766 155.781 130.754 154.64 cv
cp
ef
132.736 177.299 mo
132.568 176.17 131.962 175.323 131.383 175.409 cv
130.804 175.495 130.47 176.481 130.638 177.61 cv
130.806 178.74 131.412 179.586 131.991 179.5 cv
132.57 179.414 132.904 178.428 132.736 177.299 cv
cp
ef
134.612 194.945 mo
134.444 193.816 133.839 192.97 133.26 193.056 cv
132.681 193.142 132.347 194.128 132.515 195.257 cv
132.683 196.387 133.288 197.232 133.867 197.146 cv
134.446 197.061 134.78 196.074 134.612 194.945 cv
cp
ef
147.617 186.696 mo
137.984 180.105 136.846 166.995 136.893 163.052 cv
136.893 163.026 136.894 162.999 136.894 162.974 cv
136.894 162.974 li
136.894 162.974 li
136.894 162.974 li
136.894 162.95 136.894 162.927 136.894 162.904 cv
136.894 162.216 137.04 161.818 137.04 161.581 cv
137.039 161.317 136.858 161.251 136.095 161.206 cv
136.095 161.217 136.066 161.628 136.055 162.346 cv
136.055 162.346 li
136.055 162.346 li
136.059 162.601 136.065 162.874 136.074 163.165 cv
136.03 161.885 136.055 160.936 136.076 160.459 cv
138.076 160.431 li
137.981 162.359 137.551 177.727 147.554 185.286 cv
147.576 185.758 147.597 186.229 147.617 186.696 cv
level3{
gsave
clp
[-90.9482 214.261 -214.261 -90.9482 188.976 4.28467 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
np
161.391 190.55 mo
161.39 190.55 li
158.681 190.55 156.271 190.228 154.122 189.651 cv
154.227 189.3 154.331 188.947 154.432 188.596 cv
156.493 189.148 158.813 189.455 161.422 189.456 cv
161.807 189.456 162.194 189.449 162.593 189.436 cv
169.832 189.189 180.797 189.05 192.899 188.978 cv
192.726 190.073 li
180.835 190.144 170.053 190.281 162.848 190.521 cv
162.84 190.521 162.833 190.521 162.825 190.521 cv
162.812 190.522 162.799 190.522 162.786 190.523 cv
162.773 190.523 162.759 190.524 162.746 190.524 cv
162.738 190.524 162.73 190.525 162.722 190.525 cv
162.705 190.526 162.686 190.526 162.669 190.527 cv
162.665 190.527 162.661 190.527 162.657 190.527 cv
162.636 190.528 162.614 190.529 162.593 190.529 cv
162.593 190.529 li
162.186 190.543 161.785 190.55 161.391 190.55 cv
161.391 190.55 li
level3{
gsave
clp
[-125.575 -6.58107 6.58107 -125.575 261.004 112.769 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
np
150.952 188.543 mo
149.74 188.012 148.632 187.391 147.617 186.696 cv
147.597 186.229 147.576 185.758 147.554 185.286 cv
148.608 186.082 149.778 186.792 151.076 187.39 cv
151.036 187.775 150.994 188.159 150.952 188.543 cv
level3{
gsave
clp
[-90.9482 214.261 -214.261 -90.9482 188.976 4.28467 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
np
154.122 189.651 mo
152.995 189.349 151.938 188.976 150.952 188.543 cv
150.994 188.159 151.036 187.775 151.076 187.39 cv
152.111 187.868 153.227 188.273 154.432 188.596 cv
154.331 188.947 154.227 189.3 154.122 189.651 cv
level3{
gsave
clp
[-125.575 -6.58107 6.58107 -125.575 261.004 112.769 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
np
192.726 190.073 mo
192.899 188.978 li
193.234 188.976 193.572 188.975 193.908 188.973 cv
193.733 190.067 li
193.398 190.069 193.06 190.071 192.726 190.073 cv
level3{
gsave
clp
[-125.575 -6.58107 6.58107 -125.575 261.004 112.769 ]ct
/28 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.2 .141176 0 ]
/C1 [.2 .141176 0 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.2 .141176 0 ]
/C1 [.235294 .215686 .180392 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.235294 .215686 .180392 ]
/C1 [.247059 .172549 0 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.247059 .172549 0 ]
/C1 [.247059 .172549 0 ]
/N 1 
>>
]
/Bounds [.03 .735 .97 ]
/Encode [0 1 0 1 0 1 0 1 ]
>>
>>/Gradient add_res /28 /Gradient get_res clonedict shfill grestore
}if
np
258.372 190.147 mo
254.472 190.12 249.018 190.088 242.624 190.062 cv
242.722 189.698 242.822 189.334 242.923 188.97 cv
249.406 188.997 254.906 189.029 258.771 189.057 cv
258.371 190.147 li
195.658 190.057 mo
195.822 188.963 li
202.731 188.928 209.933 188.915 216.968 188.915 cv
225.435 188.915 233.656 188.935 240.828 188.962 cv
240.725 189.325 240.622 189.69 240.521 190.054 cv
233.425 190.027 225.324 190.008 216.98 190.008 cv
216.98 190.008 li
216.979 190.008 li
209.887 190.008 202.619 190.022 195.658 190.057 cv
level3{
gsave
clp
[-125.575 -6.58107 6.58107 -125.575 261.004 112.769 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
np
240.828 190.055 mo
240.727 190.055 240.622 190.054 240.521 190.054 cv
240.622 189.69 240.725 189.325 240.828 188.962 cv
240.931 188.962 241.039 188.963 241.142 188.963 cv
241.036 189.326 240.931 189.691 240.828 190.055 cv
level3{
gsave
clp
[-125.575 -6.58107 6.58107 -125.575 261.004 112.769 ]ct
/28 /Gradient get_res clonedict shfill grestore
}if
np
242.624 190.062 mo
242.032 190.06 241.436 190.057 240.828 190.055 cv
240.931 189.691 241.036 189.326 241.142 188.963 cv
241.744 188.965 242.336 188.968 242.923 188.97 cv
242.822 189.334 242.722 189.698 242.624 190.062 cv
level3{
gsave
clp
[-125.575 -6.58107 6.58107 -125.575 261.004 112.769 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
np
193.733 190.067 mo
193.908 188.973 li
194.543 188.969 195.182 188.966 195.822 188.963 cv
195.658 190.057 li
195.012 190.06 194.374 190.064 193.733 190.067 cv
level3{
gsave
clp
[-125.575 -6.58107 6.58107 -125.575 261.004 112.769 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
np
136.076 160.459 mo
136.076 160.458 136.076 160.456 136.076 160.455 cv
138.076 160.427 li
138.076 160.428 138.076 160.43 138.076 160.431 cv
136.076 160.459 li
136.076 160.455 mo
136.085 160.238 136.094 160.12 136.095 160.113 cv
138.087 160.23 li
138.087 160.234 138.082 160.302 138.076 160.427 cv
136.076 160.455 li
level3{
gsave
clp
[-90.9482 214.261 -214.261 -90.9482 188.976 4.28467 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
np
136.076 160.455 mo
136.076 160.455 136.076 160.455 136.076 160.455 cv
138.076 160.427 li
138.076 160.427 138.076 160.427 138.076 160.427 cv
136.076 160.455 li
level3{
gsave
clp
[-90.9482 214.261 -214.261 -90.9482 188.976 4.28467 ]ct
/27 /Gradient get_res clonedict shfill grestore
}if
np
147.666 187.882 mo
137.856 181.674 136.267 168.991 136.074 163.165 cv
136.076 163.208 136.077 163.251 136.079 163.294 cv
136.067 162.955 136.06 162.639 136.055 162.346 cv
136.066 161.628 136.095 161.217 136.095 161.206 cv
136.858 161.251 137.039 161.317 137.04 161.581 cv
137.04 161.818 136.894 162.216 136.894 162.904 cv
136.894 162.927 136.894 162.95 136.894 162.974 cv
136.894 162.974 li
136.894 162.999 136.893 163.026 136.893 163.052 cv
136.846 166.996 137.979 180.107 147.618 186.698 cv
147.635 187.095 147.651 187.488 147.666 187.882 cv
level3{
gsave
clp
[-90.9482 214.261 -214.261 -90.9482 188.976 4.28467 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
np
161.374 191.45 mo
158.57 191.45 156.073 191.124 153.853 190.541 cv
153.944 190.243 154.033 189.949 154.122 189.652 cv
156.27 190.228 158.682 190.55 161.39 190.55 cv
161.391 190.55 li
161.391 190.55 li
161.391 190.55 li
161.391 190.55 li
161.787 190.55 162.185 190.543 162.593 190.529 cv
162.593 190.529 li
162.614 190.529 162.636 190.528 162.657 190.527 cv
162.661 190.527 162.665 190.527 162.669 190.527 cv
162.686 190.526 162.705 190.526 162.722 190.525 cv
162.73 190.525 162.738 190.524 162.746 190.524 cv
162.759 190.524 162.773 190.523 162.786 190.523 cv
162.799 190.522 162.812 190.522 162.825 190.521 cv
162.833 190.521 162.84 190.521 162.848 190.521 cv
170.051 190.281 180.837 190.144 192.726 190.073 cv
192.584 190.973 li
180.624 191.045 169.807 191.184 162.655 191.428 cv
162.222 191.443 161.794 191.45 161.374 191.45 cv
161.079 191.445 mo
161.184 191.447 161.288 191.449 161.394 191.449 cv
161.288 191.449 161.185 191.446 161.079 191.445 cv
159.796 191.411 mo
159.933 191.417 160.07 191.424 160.21 191.428 cv
160.07 191.424 159.933 191.417 159.796 191.411 cv
158.826 191.353 mo
158.893 191.358 158.96 191.363 159.027 191.367 cv
158.96 191.362 158.893 191.358 158.826 191.353 cv
158.759 191.348 158.692 191.342 158.626 191.337 cv
158.692 191.343 158.759 191.348 158.826 191.353 cv
157.698 191.247 mo
157.755 191.253 157.811 191.259 157.867 191.265 cv
157.811 191.259 157.755 191.253 157.698 191.247 cv
157.637 191.241 157.575 191.235 157.514 191.228 cv
157.575 191.235 157.636 191.241 157.698 191.247 cv
155.164 190.845 mo
155.381 190.892 li
155.164 190.845 li
154.365 190.668 mo
154.365 190.668 li
154.365 190.668 li
154.261 190.643 154.156 190.614 154.053 190.589 cv
154.156 190.615 154.26 190.643 154.365 190.668 cv
258.04 191.044 mo
254.149 191.016 248.727 190.985 242.385 190.96 cv
242.464 190.661 242.544 190.361 242.624 190.062 cv
249.015 190.088 254.472 190.12 258.371 190.147 cv
258.371 190.147 li
258.372 190.147 258.372 190.147 258.372 190.147 cv
258.04 191.044 li
195.523 190.957 mo
195.658 190.057 li
202.619 190.022 209.887 190.008 216.98 190.008 cv
225.323 190.008 233.425 190.027 240.521 190.054 cv
240.437 190.353 240.355 190.652 240.272 190.952 cv
233.281 190.926 225.308 190.907 217.101 190.907 cv
209.924 190.907 202.567 190.921 195.523 190.957 cv
level3{
gsave
clp
[-125.575 -6.58107 6.58107 -125.575 261.004 112.769 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
np
150.84 189.528 mo
149.697 189.052 148.641 188.499 147.666 187.882 cv
147.651 187.488 147.635 187.095 147.618 186.698 cv
148.632 187.391 149.741 188.013 150.952 188.544 cv
150.915 188.872 150.878 189.2 150.84 189.528 cv
147.771 187.945 mo
147.979 188.072 li
147.771 187.945 li
level3{
gsave
clp
[-90.9482 214.261 -214.261 -90.9482 188.976 4.28467 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
np
153.853 190.541 mo
152.786 190.26 151.783 189.92 150.84 189.528 cv
150.878 189.2 150.915 188.872 150.952 188.544 cv
151.939 188.977 152.994 189.349 154.122 189.652 cv
154.033 189.949 153.944 190.243 153.853 190.541 cv
152.427 190.114 mo
152.427 190.114 li
152.427 190.114 li
152.335 190.084 152.241 190.054 152.15 190.022 cv
152.241 190.054 152.334 190.084 152.427 190.114 cv
level3{
gsave
clp
[-125.575 -6.58107 6.58107 -125.575 261.004 112.769 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
np
240.575 190.953 mo
240.475 190.952 240.373 190.952 240.272 190.952 cv
240.355 190.652 240.437 190.353 240.521 190.054 cv
240.622 190.054 240.727 190.055 240.828 190.055 cv
240.743 190.354 240.659 190.653 240.575 190.953 cv
level3{
gsave
clp
[-125.575 -6.58107 6.58107 -125.575 261.004 112.769 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
np
242.385 190.96 mo
241.79 190.957 241.187 190.955 240.575 190.953 cv
240.659 190.653 240.743 190.354 240.828 190.055 cv
241.436 190.057 242.032 190.06 242.624 190.062 cv
242.544 190.361 242.464 190.661 242.385 190.96 cv
level3{
gsave
clp
[-125.575 -6.58107 6.58107 -125.575 261.004 112.769 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
np
192.584 190.973 mo
192.726 190.073 li
193.063 190.071 193.395 190.069 193.733 190.067 cv
193.59 190.967 li
193.253 190.969 192.918 190.971 192.584 190.973 cv
level3{
gsave
clp
[-125.575 -6.58107 6.58107 -125.575 261.004 112.769 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
np
193.59 190.967 mo
193.733 190.067 li
194.372 190.064 195.014 190.06 195.658 190.057 cv
195.523 190.957 li
194.875 190.96 194.231 190.964 193.59 190.967 cv
level3{
gsave
clp
[-125.575 -6.58107 6.58107 -125.575 261.004 112.769 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
np
161.394 191.449 mo
161.288 191.449 161.184 191.447 161.079 191.445 cv
161.185 191.446 161.288 191.449 161.394 191.449 cv
160.21 191.428 mo
160.07 191.424 159.933 191.417 159.796 191.411 cv
159.933 191.417 160.07 191.424 160.21 191.428 cv
159.027 191.367 mo
158.96 191.363 158.893 191.358 158.826 191.353 cv
158.893 191.358 158.96 191.362 159.027 191.367 cv
158.826 191.353 mo
158.759 191.348 158.692 191.343 158.626 191.337 cv
158.692 191.342 158.759 191.348 158.826 191.353 cv
157.867 191.265 mo
157.811 191.259 157.755 191.253 157.698 191.247 cv
157.755 191.253 157.811 191.259 157.867 191.265 cv
157.698 191.247 mo
157.636 191.241 157.575 191.235 157.514 191.228 cv
157.575 191.235 157.637 191.241 157.698 191.247 cv
155.381 190.892 mo
155.164 190.845 li
155.381 190.892 li
154.365 190.668 mo
154.26 190.643 154.156 190.615 154.053 190.589 cv
154.156 190.614 154.261 190.643 154.365 190.668 cv
level3{
gsave
clp
[-125.575 -6.58107 6.58107 -125.575 261.004 112.769 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
np
147.618 186.698 mo
137.979 180.107 136.846 166.996 136.893 163.052 cv
136.846 166.995 137.984 180.105 147.617 186.696 cv
147.618 186.698 li
136.079 163.294 mo
136.077 163.251 136.076 163.208 136.074 163.165 cv
136.065 162.874 136.059 162.601 136.055 162.346 cv
136.055 162.346 li
136.06 162.639 136.067 162.955 136.079 163.294 cv
136.894 162.974 mo
136.894 162.974 li
136.894 162.974 li
136.894 162.974 li
136.894 162.904 mo
136.894 162.216 137.04 161.818 137.04 161.581 cv
137.04 161.818 136.894 162.216 136.894 162.904 cv
level3{
gsave
clp
[-90.9482 214.261 -214.261 -90.9482 188.976 4.28467 ]ct
/18 /Gradient get_res clonedict shfill grestore
}if
np
161.391 190.55 mo
161.391 190.55 li
161.391 190.55 li
161.391 190.55 li
161.39 190.55 mo
158.682 190.55 156.27 190.228 154.122 189.652 cv
154.122 189.651 li
156.271 190.228 158.681 190.55 161.39 190.55 cv
162.593 190.529 mo
162.614 190.529 162.636 190.528 162.657 190.527 cv
162.636 190.528 162.614 190.529 162.593 190.529 cv
162.669 190.527 mo
162.686 190.526 162.705 190.526 162.722 190.525 cv
162.705 190.526 162.686 190.526 162.669 190.527 cv
162.746 190.524 mo
162.759 190.524 162.773 190.523 162.786 190.523 cv
162.773 190.523 162.759 190.524 162.746 190.524 cv
162.825 190.521 mo
162.833 190.521 162.84 190.521 162.848 190.521 cv
162.84 190.521 162.833 190.521 162.825 190.521 cv
level3{
gsave
clp
[-125.575 -6.58107 6.58107 -125.575 261.004 112.769 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
np
150.952 188.544 mo
149.741 188.013 148.632 187.391 147.618 186.698 cv
147.617 186.696 li
148.632 187.391 149.74 188.012 150.952 188.543 cv
150.952 188.544 li
level3{
gsave
clp
[-90.9482 214.261 -214.261 -90.9482 188.976 4.28467 ]ct
/19 /Gradient get_res clonedict shfill grestore
}if
np
154.122 189.652 mo
152.994 189.349 151.939 188.977 150.952 188.544 cv
150.952 188.543 li
151.938 188.976 152.995 189.349 154.122 189.651 cv
154.122 189.652 li
level3{
gsave
clp
[-125.575 -6.58107 6.58107 -125.575 261.004 112.769 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
np
258.371 190.147 mo
254.472 190.12 249.015 190.088 242.624 190.062 cv
242.624 190.062 li
249.018 190.088 254.472 190.12 258.372 190.147 cv
258.371 190.147 li
240.521 190.054 mo
233.425 190.027 225.323 190.008 216.98 190.008 cv
216.98 190.008 li
225.324 190.008 233.425 190.027 240.521 190.054 cv
240.521 190.054 li
level3{
gsave
clp
[-125.575 -6.58107 6.58107 -125.575 261.004 112.769 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
np
240.828 190.055 mo
240.727 190.055 240.622 190.054 240.521 190.054 cv
240.521 190.054 li
240.622 190.054 240.727 190.055 240.828 190.055 cv
240.828 190.055 li
level3{
gsave
clp
[-125.575 -6.58107 6.58107 -125.575 261.004 112.769 ]ct
/29 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.6 .572549 .501961 ]
/C1 [.6 .572549 .501961 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.6 .572549 .501961 ]
/C1 [.619608 .607843 .592157 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.619608 .607843 .592157 ]
/C1 [.623529 .588235 .501961 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.623529 .588235 .501961 ]
/C1 [.623529 .588235 .501961 ]
/N 1 
>>
]
/Bounds [.03 .735 .97 ]
/Encode [0 1 0 1 0 1 0 1 ]
>>
>>/Gradient add_res /29 /Gradient get_res clonedict shfill grestore
}if
np
242.624 190.062 mo
242.032 190.06 241.436 190.057 240.828 190.055 cv
240.828 190.055 li
241.436 190.057 242.032 190.06 242.624 190.062 cv
242.624 190.062 li
level3{
gsave
clp
[-125.575 -6.58107 6.58107 -125.575 261.004 112.769 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
np
152.427 190.114 mo
152.334 190.084 152.241 190.054 152.15 190.022 cv
152.241 190.054 152.335 190.084 152.427 190.114 cv
level3{
gsave
clp
[-125.575 -6.58107 6.58107 -125.575 261.004 112.769 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
np
5.54747 85.8562 mo
6.30227 82.2298 7.15897 79.107 8.10056 76.6172 cv
31.5369 52.9911 60.4208 30.8543 101.443 16.3856 cv
98.6015 29.4248 li
64.1453 42.953 33.1519 61.5116 5.54747 85.8562 cv
101.13 28.4433 mo
103.948 15.517 li
111.471 12.952 119.399 10.6419 127.768 8.62546 cv
128.729 8.42626 129.69 8.24367 130.652 8.07373 cv
131.029 10.9204 131.311 13.5855 131.311 15.2104 cv
131.311 20.1548 124.067 22.77 124.067 22.77 cv
124.021 22.7843 123.973 22.7986 123.925 22.8133 cv
124.096 20.5161 li
116.279 22.9287 108.622 25.5691 101.13 28.4433 cv
level3{
gsave
clp
[-90.9482 214.261 -214.261 -90.9482 188.976 4.28467 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
np
101.443 16.3856 mo
101.569 15.8081 li
102.399 15.519 103.233 15.2319 104.072 14.9487 cv
103.948 15.517 li
103.108 15.8035 102.274 16.0928 101.443 16.3856 cv
level3{
gsave
clp
[-90.9482 214.261 -214.261 -90.9482 188.976 4.28467 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
np
98.6015 29.4248 mo
101.443 16.3856 li
102.274 16.0928 103.108 15.8035 103.948 15.517 cv
101.13 28.4433 li
100.285 28.7674 99.4424 29.0946 98.6015 29.4248 cv
level3{
gsave
clp
[-90.9482 214.261 -214.261 -90.9482 188.976 4.28467 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
np
123.455 207.657 mo
122.133 207.657 li
119.03 173.81 li
114.654 156.2 103.25 144.215 93.563 147.046 cv
83.876 149.876 79.5693 166.452 83.9453 184.062 cv
91.2822 207.657 li
90.9966 207.657 li
82.3047 182.506 li
82.3047 182.506 75.5869 158.007 87.2437 147.337 cv
98.9009 136.668 108.582 146.35 111.743 149.906 cv
114.904 153.462 121.819 165.909 122.61 186.654 cv
122.977 196.292 123.258 203.113 123.455 207.657 cv
cp
level3{
gsave
[-53.8495 22.8578 -22.8578 -53.8495 129.995 166.353 ]ct
<<
/PatternType 2
/Shading
/30 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [0 0 0 ]
/C1 [0 0 0 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [0 0 0 ]
/C1 [.670588 .670588 .670588 ]
/N 1 
>>
]
/Bounds [.21 ]
/Encode [0 1 0 1 ]
>>
>> /Gradient add_res /30 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
115.955 159.402 mo
117.148 162.36 118.185 165.762 119.079 169.604 cv
117.835 166.111 116.473 162.919 114.97 160.082 cv
115.19 160.103 115.391 160.064 115.558 159.96 cv
115.748 159.841 115.878 159.649 115.955 159.402 cv
cp
92.5977 145.571 mo
101.929 143.22 108.64 146.138 113.404 154.169 cv
112.762 153.724 112.148 153.576 111.731 153.837 cv
111.558 153.945 111.433 154.114 111.354 154.332 cv
106.491 147.898 100.393 144.59 92.5977 145.571 cv
cp
level3{
gsave
[25.8501 23.2871 -23.2871 25.8501 95.3481 142.309 ]ct
<<
/PatternType 2
/Shading
/31 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.470588 .470588 .470588 ]
/C1 [.470588 .470588 .470588 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.470588 .470588 .470588 ]
/C1 [1 1 1 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 1 1 ]
/C1 [.290196 .290196 .290196 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.290196 .290196 .290196 ]
/C1 [.290196 .290196 .290196 ]
/N 1 
>>
]
/Bounds [.278788 .593939 .909091 ]
/Encode [0 1 0 1 0 1 0 1 ]
>>
>> /Gradient add_res /31 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
17.3545 177.993 mo
18.2407 177.745 19.1475 177.492 20.0996 177.23 cv
20.0815 176.885 20.0669 176.543 20.0562 176.207 cv
19.0522 176.482 18.0977 176.748 17.167 177.009 cv
17.228 177.339 17.2925 177.665 17.3545 177.993 cv
cp
.121569 .101961 .0901961 rgb
f
13.31 178.106 mo
10.6035 178.888 8.30861 179.575 6.50586 180.129 cv
6.57569 180.457 6.64796 180.782 6.71873 181.108 cv
8.5122 180.559 10.8022 179.872 13.5083 179.089 cv
13.4414 178.763 13.376 178.435 13.31 178.106 cv
f
49.5059 168.954 mo
44.1265 170.134 39.0595 171.321 34.3989 172.472 cv
34.5561 172.77 34.7124 173.075 34.8677 173.386 cv
39.4619 172.253 44.4482 171.086 49.7373 169.926 cv
49.6606 169.603 49.581 169.278 49.5059 168.954 cv
f
69.2441 164.968 mo
69.3154 165.294 69.3862 165.619 69.458 165.945 cv
74.4097 165.019 78.833 164.236 82.748 163.581 cv
82.8022 163.23 82.8608 162.883 82.9233 162.539 cv
78.9087 163.208 74.3564 164.012 69.2441 164.968 cv
cp
f
62.8413 207.657 mo
61.0478 207.657 li
56.1082 194.868 52.3006 182.372 49.3803 170.004 cv
49.4991 169.978 49.6182 169.952 49.7373 169.926 cv
49.6606 169.603 49.581 169.278 49.5059 168.954 cv
49.388 168.98 49.27 169.006 49.1524 169.032 cv
41.2822 135.179 40.0207 102.26 40.3559 66.9233 cv
60.9331 56.6352 li
60.8823 57.4438 60.8344 58.2524 60.7886 59.0581 cv
42.1499 68.2866 li
41.6889 116.394 44.2456 159.978 62.8413 207.657 cv
level3{
gsave
clp
[-90.9482 214.261 -214.261 -90.9482 188.976 4.28467 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
np
49.3803 170.004 mo
49.3038 169.68 49.2277 169.355 49.1524 169.032 cv
49.27 169.006 49.388 168.98 49.5059 168.954 cv
49.581 169.278 49.6606 169.603 49.7373 169.926 cv
49.6182 169.952 49.4991 169.978 49.3803 170.004 cv
.0588235 .0509804 .0431373 rgb
f
22.1289 207.657 mo
20.707 207.657 li
17.7827 198.934 15.167 189.479 13.0568 179.22 cv
13.206 179.176 13.3565 179.133 13.5083 179.089 cv
13.4414 178.763 13.376 178.435 13.31 178.106 cv
13.1577 178.15 13.0065 178.194 12.8569 178.237 cv
7.80863 153.185 5.78091 123.36 9.59379 87.6836 cv
15.98 83.419 li
15.8462 84.3408 15.7183 85.2607 15.5918 86.1777 cv
11.0156 89.1953 li
5.58349 139.384 12.0059 177.841 22.1289 207.657 cv
level3{
gsave
clp
[-90.9482 214.261 -214.261 -90.9482 188.976 4.28467 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
np
13.0568 179.22 mo
12.9895 178.892 12.9231 178.566 12.8569 178.237 cv
13.0065 178.194 13.1577 178.15 13.31 178.106 cv
13.376 178.435 13.4414 178.763 13.5083 179.089 cv
13.3565 179.133 13.206 179.176 13.0568 179.22 cv
.0588235 .0509804 .0431373 rgb
f
53.9824 206.917 mo
44.0127 172.383 li
49.1362 170.897 li
46.0054 172.993 li
53.9824 206.917 li
level3{
gsave
clp
[-90.9482 214.261 -214.261 -90.9482 188.976 4.28467 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
np
81.3784 206.468 mo
70.9087 167.059 li
79.8491 165.765 li
73.0263 168 li
81.3784 206.468 li
level3{
gsave
clp
[-90.9482 214.261 -214.261 -90.9482 188.976 4.28467 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
np
79.6465 169.738 mo
74.4434 170.728 li
75.2354 174.035 li
75.4634 171.754 li
79.6465 169.738 li
cp
0 0 0 rgb
ef
80.3506 173.431 mo
75.1475 174.42 li
75.9395 177.728 li
76.1675 175.446 li
80.3506 173.431 li
cp
ef
81.2178 177.178 mo
76.0146 178.167 li
76.8066 181.475 li
77.0347 179.193 li
81.2178 177.178 li
cp
ef
40.4834 139.789 mo
39.9424 139.789 39.5591 140.657 39.6279 141.727 cv
39.6968 142.797 40.1919 143.665 40.7329 143.665 cv
41.2744 143.665 41.6577 142.797 41.5889 141.727 cv
41.52 140.657 41.0249 139.789 40.4834 139.789 cv
cp
.647059 .670588 .721569 rgb
ef
39.873 139.726 mo
39.3315 139.726 38.9482 140.594 39.0171 141.664 cv
39.0864 142.733 39.5815 143.602 40.1226 143.602 cv
40.6641 143.602 41.0474 142.733 40.9785 141.664 cv
40.9092 140.594 40.4146 139.726 39.873 139.726 cv
cp
.741176 .741176 .741176 rgb
ef
7.65186 154.178 mo
7.31689 154.178 7.08057 154.714 7.12305 155.375 cv
7.16553 156.037 7.47168 156.572 7.80615 156.572 cv
8.14063 156.572 8.37744 156.037 8.33496 155.375 cv
8.29199 154.714 7.98633 154.178 7.65186 154.178 cv
cp
.647059 .670588 .721569 rgb
ef
7.27393 154.139 mo
6.93945 154.139 6.70264 154.675 6.74512 155.336 cv
6.7876 155.998 7.09375 156.533 7.42822 156.533 cv
7.7627 156.533 7.99951 155.998 7.95703 155.336 cv
7.91406 154.675 7.6084 154.139 7.27393 154.139 cv
cp
.741176 .741176 .741176 rgb
ef
5.39858 86.9468 mo
5.15709 86.9468 5.29247 86.3578 5.14596 86.211 cv
5.28012 86.0922 5.41315 85.9747 5.54747 85.8562 cv
5.48073 86.1769 5.41476 86.5016 5.34963 86.8301 cv
16.0615 78.2754 44.0737 56.7046 68.3565 44.9214 cv
98.8667 30.1171 117.786 24.6773 123.925 22.8133 cv
123.867 23.5971 li
82.6836 35.5874 43.3975 55.8609 5.70999 86.7812 cv
5.56584 86.8995 5.46707 86.9468 5.39858 86.9468 cv
level3{
gsave
clp
[-90.9482 214.261 -214.261 -90.9482 188.976 4.28467 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
np
5.34963 86.8301 mo
5.41476 86.5016 5.48073 86.1769 5.54747 85.8562 cv
33.1519 61.5116 64.1453 42.953 98.6015 29.4248 cv
98.2251 31.1519 li
99.0888 30.812 99.9307 30.4849 100.754 30.1684 cv
101.13 28.4433 li
108.622 25.5691 116.279 22.9287 124.096 20.5161 cv
123.925 22.8133 li
117.786 24.6773 98.8667 30.1171 68.3565 44.9214 cv
44.0737 56.7046 16.0615 78.2754 5.34963 86.8301 cv
level3{
gsave
clp
[-90.9482 214.261 -214.261 -90.9482 188.976 4.28467 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
np
98.2251 31.1519 mo
98.6015 29.4248 li
99.4424 29.0946 100.285 28.7674 101.13 28.4433 cv
100.754 30.1684 li
99.9307 30.4849 99.0888 30.812 98.2251 31.1519 cv
level3{
gsave
clp
[-90.9482 214.261 -214.261 -90.9482 188.976 4.28467 ]ct
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.247059 .211765 .12549 ]
/C1 [.247059 .211765 .12549 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.247059 .211765 .12549 ]
/C1 [.247059 .211765 .12549 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.247059 .211765 .12549 ]
/C1 [.223529 .196078 .12549 ]
/N 1 
>>
]
/Bounds [.31 .466667 ]
/Encode [0 1 0 1 0 1 ]
>>
>>shfill grestore
}if
np
46.7949 207.657 mo
46.019 207.657 li
39.2847 185.506 li
34.6548 173.211 29.0454 161.703 24.3711 163.542 cv
19.6973 165.381 18.835 178.532 22.7378 190.972 cv
27.9038 207.657 li
27.7363 207.657 li
22.3325 191.049 li
22.3325 191.049 15.2046 166.542 24.5015 162.794 cv
35.7109 158.275 40.5205 184.13 42.6782 192.782 cv
45.1123 202.543 45.9365 204.484 46.7949 207.657 cv
cp
level3{
gsave
[-26.3157 14.5092 -17.9311 -34.1815 46.0234 179.481 ]ct
<<
/PatternType 2
/Shading
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [0 0 0 ]
/C1 [0 0 0 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [0 0 0 ]
/C1 [.670588 .670588 .670588 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.670588 .670588 .670588 ]
/C1 [.670588 .670588 .670588 ]
/N 1 
>>
]
/Bounds [.27 .73 ]
/Encode [0 1 0 1 0 1 ]
>>
>>>> matrix makepattern grestore setpattern
}if
level3{
ef
}if
36.8076 173.834 mo
38.5386 178.167 40.1548 183.831 41.6479 190.918 cv
39.9146 184.854 38.0732 179.609 36.1104 175.297 cv
36.4194 175.664 36.6953 175.85 36.8755 175.771 cv
37.1689 175.643 37.1235 174.851 36.8076 173.834 cv
cp
26.9155 162.837 mo
30.2065 162.877 33.2471 165.799 36.0093 171.947 cv
35.4453 170.904 34.8384 170.238 34.5239 170.376 cv
34.2563 170.492 34.269 171.158 34.5117 172.044 cv
32.1567 167.623 29.6323 164.496 26.9155 162.837 cv
cp
level3{
gsave
[-14.4854 -27.6328 27.6328 -14.4854 43.1528 189.615 ]ct
<<
/PatternType 2
/Shading
/31 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
37.9399 69.5522 mo
38.1162 106.653 li
37.9014 110.97 36.1265 113.179 33.6421 114.449 cv
27.9917 117.146 li
25.4961 117.563 24.3237 115.956 24.4731 112.179 cv
25.1646 77.9121 li
25.3994 74.9258 26.3906 72.8857 28.1367 71.7905 cv
34.7295 67.4351 li
36.3667 66.2983 37.8618 67.2876 37.9399 69.5522 cv
cp
70.3384 46.1079 mo
74.0396 44.3345 77.8037 42.6294 81.6255 40.9937 cv
87.4194 38.5132 87.2651 37.355 87.2651 44.4478 cv
86.0957 88.9902 li
85.5391 97.7314 87.4438 97.4023 79.1582 99.4912 cv
76.4541 100.173 74.3433 100.396 70.8232 101.456 cv
64.7295 103.29 65.9341 102.683 65.4937 95.7256 cv
64.562 81.0293 64.9136 66.4126 66.7168 51.8862 cv
67.2168 47.8608 67.0063 47.7046 70.3384 46.1079 cv
cp
95.8682 34.6372 mo
102.994 32.0239 110.278 29.6177 117.684 27.4038 cv
124.811 25.2749 124.429 24.0991 124.985 32.3765 cv
129.661 101.98 li
129.729 107.539 127.394 109.006 123.414 107.672 cv
98.9126 99.4434 li
93.4165 98.0879 90.6089 94.4922 90.1265 88.6553 cv
90.5327 43.3794 li
90.416 36.4302 89.9277 36.8149 95.8682 34.6372 cv
cp
65.6191 155.514 mo
61.4619 127.15 58.8701 99.1016 59.0693 70.1909 cv
59.083 68.2153 57.0605 66.2847 55.1865 66.9106 cv
47.146 69.5972 li
45.2729 70.2222 44.3359 73.5488 44.2749 75.5225 cv
43.4111 103.368 45.6958 129.912 50.8242 157.212 cv
51.189 159.153 52.7505 160.772 54.7075 160.491 cv
62.3394 159.396 li
64.2959 159.115 65.9058 157.469 65.6191 155.514 cv
cp
15.3481 169.428 mo
12.3247 152.532 10.9502 117.786 14.0322 94.8467 cv
14.627 90.4199 10.6475 93.0879 10.001 98.2217 cv
7.4248 118.687 9.06543 150.507 12.2446 170.117 cv
12.937 174.387 15.7051 171.421 15.3481 169.428 cv
cp
8.41406 89.1152 mo
7.15039 101.702 6.3999 114.272 6.26904 126.848 cv
6.51758 128.281 6.04492 129.343 4.93115 130.143 cv
4.37256 130.515 3.81396 130.886 3.25488 131.257 cv
2.35986 131.319 1.83838 130.901 2.16504 128.587 cv
2.02539 116.228 2.7168 104.043 4.85449 92.1162 cv
4.76465 90.6387 5.13428 89.6406 5.96338 89.123 cv
6.45947 88.6807 6.95557 88.2373 7.45166 87.7949 cv
8.38135 87.1152 8.70215 87.5547 8.41406 89.1152 cv
cp
23.2773 77.7725 mo
22.7314 91.1924 22.1855 104.612 21.6396 118.033 cv
21.939 119.76 21.1069 121.064 19.1357 122.077 cv
18.1709 122.49 17.2061 122.904 16.2407 123.318 cv
14.8032 123.55 13.9507 123.074 14.4067 120.585 cv
15.4849 107.496 16.5625 94.4082 17.6396 81.3203 cv
17.8721 79.5732 18.0103 78.3945 19.3291 77.7822 cv
20.1138 77.2588 20.8989 76.7354 21.6836 76.2119 cv
23.1597 75.4092 23.6909 75.9287 23.2773 77.7725 cv
cp
level3{
gsave
[66.3044 164.109 -164.109 66.3044 34.9619 16.1128 ]ct
<<
/PatternType 2
/Shading
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.160784 .305882 .392157 ]
/C1 [.160784 .305882 .392157 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.160784 .305882 .392157 ]
/C1 [1 1 1 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 1 1 ]
/C1 [1 1 1 ]
/N 1 
>>
]
/Bounds [.33 .67 ]
/Encode [0 1 0 1 0 1 ]
>>
>>>> matrix makepattern grestore setpattern
}if
level3{
ef
}if
90.1279 88.4863 mo
101.735 86.9053 124.518 82.6074 128.739 88.8047 cv
129.661 101.98 li
129.729 107.539 127.394 109.006 123.414 107.672 cv
98.9126 99.4434 li
93.4165 98.0879 90.6089 94.4922 90.1265 88.6553 cv
90.1279 88.4863 li
cp
65.1968 90.0264 mo
68.5034 88.7832 72.0122 88.3281 75.21 89.2686 cv
79.0898 90.4102 82.627 90.5244 86.0503 89.7813 cv
85.6479 97.7129 87.1851 97.4678 79.1582 99.4912 cv
76.4541 100.173 74.3433 100.396 70.8232 101.456 cv
64.7295 103.29 65.9341 102.683 65.4937 95.7256 cv
65.373 93.8252 65.2739 91.9248 65.1968 90.0264 cv
cp
44.3037 99.293 mo
44.4136 99.2959 44.5239 99.3008 44.6323 99.3086 cv
54.9932 100.105 51.2554 98.7227 59.4775 93.0508 cv
60.356 114.013 62.5654 134.679 65.6191 155.514 cv
65.9058 157.469 64.2959 159.115 62.3394 159.396 cv
54.7075 160.491 li
52.7505 160.772 51.189 159.153 50.8242 157.212 cv
47.1724 137.771 44.9619 118.711 44.3037 99.293 cv
cp
24.5103 113.907 mo
24.8271 113.621 25.145 113.319 25.4644 113 cv
29.0747 109.391 33.6758 104.392 38.0923 101.535 cv
38.1162 106.653 li
37.9014 110.97 36.1265 113.179 33.6421 114.449 cv
27.9917 117.146 li
25.918 117.493 24.7568 116.44 24.5103 113.907 cv
cp
8.75098 118.929 mo
10.0195 118.919 11.2192 118.886 12.3657 118.805 cv
11.9663 137.688 13.2656 157.791 15.3481 169.428 cv
15.7051 171.421 12.937 174.387 12.2446 170.117 cv
10.0132 156.354 8.54053 136.574 8.75098 118.929 cv
cp
2.2002 120.48 mo
3.66309 119.769 5.1001 119.248 6.43018 119.037 cv
6.35107 121.641 6.2959 124.244 6.26904 126.848 cv
6.51758 128.281 6.04492 129.343 4.93115 130.143 cv
4.37256 130.515 3.81396 130.886 3.25488 131.257 cv
2.35986 131.319 1.83838 130.901 2.16504 128.587 cv
2.13428 125.876 2.14453 123.173 2.2002 120.48 cv
cp
21.7212 116.04 mo
21.6396 118.033 li
21.939 119.76 21.1069 121.064 19.1357 122.077 cv
18.1709 122.49 17.2061 122.904 16.2407 123.318 cv
14.8032 123.55 13.9507 123.074 14.4067 120.585 cv
14.5728 118.574 li
17.124 118.207 19.438 117.477 21.7212 116.04 cv
cp
level3{
gsave
[16.0144 101.111 -101.111 16.0144 60.4175 77.9697 ]ct
<<
/PatternType 2
/Shading
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.121569 .101961 .0901961 ]
/C1 [.121569 .101961 .0901961 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.121569 .101961 .0901961 ]
/C1 [.294118 .352941 .368627 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.294118 .352941 .368627 ]
/C1 [.294118 .352941 .368627 ]
/N 1 
>>
]
/Bounds [.36 .64 ]
/Encode [0 1 0 1 0 1 ]
>>
>>>> matrix makepattern grestore setpattern
}if
level3{
ef
}if
90.4043 57.6772 mo
106.938 52.3276 115.128 55.5757 124.735 64.4956 cv
125.583 65.2837 126.439 66.0522 127.298 66.8022 cv
124.985 32.3765 li
124.429 24.0991 124.811 25.2749 117.684 27.4038 cv
110.278 29.6177 102.994 32.0239 95.8682 34.6372 cv
89.9277 36.8149 90.416 36.4302 90.5327 43.3794 cv
90.4043 57.6772 li
cp
65.2671 68.7544 mo
73.7739 64.3726 80.8525 61.1255 86.8857 58.8989 cv
87.2651 44.4478 li
87.2651 37.355 87.4194 38.5132 81.6255 40.9937 cv
77.8037 42.6294 74.0396 44.3345 70.3384 46.1079 cv
67.0063 47.7046 67.2168 47.8608 66.7168 51.8862 cv
66.0205 57.4956 65.54 63.1187 65.2671 68.7544 cv
cp
44.1597 80.1738 mo
49.1719 77.3633 54.1777 74.6152 59.0605 72.0117 cv
59.0625 71.4058 59.0654 70.7983 59.0693 70.1909 cv
59.083 68.2153 57.0605 66.2847 55.1865 66.9106 cv
47.146 69.5972 li
45.2729 70.2222 44.3359 73.5488 44.2749 75.5225 cv
44.2266 77.0771 44.1885 78.627 44.1597 80.1738 cv
cp
24.8955 91.2383 mo
29.1812 88.7256 33.5781 86.1777 38.0068 83.6533 cv
37.9399 69.5522 li
37.8618 67.2876 36.3667 66.2983 34.7295 67.4351 cv
28.1367 71.7905 li
26.3906 72.8857 25.3994 74.9258 25.1646 77.9121 cv
24.8955 91.2383 li
cp
9.76611 100.23 mo
11.0415 99.4629 12.3389 98.6836 13.6572 97.8955 cv
13.7744 96.8584 13.8984 95.8418 14.0322 94.8467 cv
14.627 90.4199 10.6475 93.0879 10.001 98.2217 cv
9.91846 98.8799 9.84033 99.5498 9.76611 100.23 cv
cp
3.16699 104.223 mo
4.51904 103.401 5.90527 102.56 7.32568 101.702 cv
7.62891 97.5068 7.99219 93.3125 8.41406 89.1152 cv
8.70215 87.5547 8.38135 87.1152 7.45166 87.7949 cv
6.95557 88.2373 6.45947 88.6807 5.96338 89.123 cv
5.13428 89.6406 4.76465 90.6387 4.85449 92.1162 cv
4.13623 96.125 3.58203 100.16 3.16699 104.223 cv
cp
23.2773 77.7725 mo
22.6772 92.542 li
20.5532 93.792 18.4614 95.0313 16.4111 96.252 cv
17.6396 81.3203 li
17.8721 79.5732 18.0103 78.3945 19.3291 77.7822 cv
20.1138 77.2588 20.8989 76.7354 21.6836 76.2119 cv
23.1597 75.4092 23.6909 75.9287 23.2773 77.7725 cv
cp
level3{
gsave
[41.6704 108.555 -108.555 41.6704 42.9707 11.3071 ]ct
<<
/PatternType 2
/Shading
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.290196 .431373 .576471 ]
/C1 [.290196 .431373 .576471 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.290196 .431373 .576471 ]
/C1 [1 1 1 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 1 1 ]
/C1 [1 1 1 ]
/N 1 
>>
]
/Bounds [.34 .66 ]
/Encode [0 1 0 1 0 1 ]
>>
>>>> matrix makepattern grestore setpattern
}if
level3{
ef
}if
96.166 35.4321 mo
96.1606 35.4341 li
96.1577 35.4341 li
95.6621 35.6157 li
93.2627 36.4927 92.1074 36.9155 91.6792 37.6167 cv
91.2676 38.2915 91.2959 39.521 91.3496 41.8892 cv
91.3594 42.3345 91.3706 42.8188 91.3799 43.3657 cv
91.3799 43.3853 li
90.9741 88.5918 li
91.2021 91.3359 91.9639 93.5391 93.3003 95.1973 cv
94.6299 96.8467 96.5542 97.9873 99.1157 98.6191 cv
99.1816 98.6387 li
123.683 106.867 li
125.384 107.438 126.692 107.444 127.515 106.759 cv
128.38 106.037 128.839 104.512 128.814 102.036 cv
124.138 32.4321 li
124.138 32.4292 li
124.075 31.4751 li
123.874 28.4126 123.781 26.9966 123.397 26.7358 cv
123.121 26.5464 122.174 26.856 120.415 27.4312 cv
119.704 27.6626 118.877 27.9331 117.926 28.2173 cv
112.572 29.8179 107.314 31.5073 102.171 33.2886 cv
101.316 33.5845 100.308 33.9399 99.1582 34.3501 cv
98.189 34.6948 97.1904 35.0571 96.166 35.4321 cv
cp
70.0298 45.4731 mo
70.0381 45.4692 li
70.7026 45.1509 71.2158 44.9058 71.5986 44.7251 cv
72.1494 44.4653 72.6743 44.2192 73.1694 43.9897 cv
75.8574 42.7417 78.585 41.5259 81.3486 40.3423 cv
82.1846 39.9849 82.9116 39.646 83.5283 39.3599 cv
85.3013 38.5356 86.2754 38.0825 87.0659 38.5669 cv
87.9741 39.1235 87.9727 40.6108 87.9712 43.9087 cv
87.9707 44.4478 li
87.9707 44.4644 li
86.8018 89.0059 li
86.8018 89.0332 li
86.6973 90.6787 86.6792 91.9717 86.665 93.0264 cv
86.5942 98.2344 86.5918 98.3467 79.3296 100.177 cv
78.3179 100.433 77.3501 100.631 76.3584 100.833 cv
74.8086 101.15 73.1934 101.481 71.0254 102.134 cv
67.0264 103.338 65.7563 103.599 65.1787 101.68 cv
64.978 101.012 64.9502 100.061 64.9121 98.6992 cv
64.8896 97.8984 64.8618 96.9434 64.7881 95.7695 cv
64.3218 88.4102 64.1768 81.0605 64.374 73.7246 cv
64.5718 66.3794 65.1118 59.0698 66.0142 51.8003 cv
66.1074 51.0337 li
66.5439 47.3921 66.5762 47.1284 70.0298 45.4731 cv
cp
70.6577 46.7368 mo
70.6577 46.7368 li
70.6538 46.7388 li
70.6431 46.7446 li
67.8901 48.064 67.8643 48.2749 67.5132 51.1997 cv
67.4199 51.9692 li
67.4199 51.9722 li
66.5195 59.228 65.9814 66.4907 65.7856 73.7588 cv
65.5898 81.0361 65.7349 88.3447 66.1997 95.6807 cv
66.271 96.8135 66.2998 97.8184 66.3237 98.6611 cv
66.3589 99.9033 66.3838 100.771 66.5356 101.275 cv
66.7261 101.909 67.6548 101.67 70.6211 100.777 cv
72.813 100.117 74.478 99.7764 76.0762 99.4492 cv
77.0195 99.2568 77.9399 99.0684 78.9868 98.8037 cv
85.1953 97.2393 85.1968 97.1494 85.2534 93.0098 cv
85.2681 91.9141 85.2871 90.5703 85.3901 88.9453 cv
85.3911 88.9453 li
86.5591 44.4312 li
86.5596 43.9087 li
86.561 41.1577 86.5615 39.9165 86.3291 39.7739 cv
86.1841 39.6851 85.4521 40.0259 84.1206 40.644 cv
83.5049 40.9312 82.7783 41.269 81.9023 41.6431 cv
79.1655 42.8149 76.4507 44.0259 73.7617 45.2739 cv
73.2114 45.5298 72.6914 45.7739 72.2021 46.0044 cv
71.5513 46.311 71.0283 46.5591 70.6577 46.7368 cv
cp
61.2085 113.018 mo
62.3506 127.179 64.0366 141.271 66.1133 155.44 cv
66.1133 155.443 li
66.1152 155.455 li
66.2764 156.583 65.895 157.619 65.1934 158.412 cv
64.5083 159.188 63.5132 159.729 62.4233 159.889 cv
62.4214 159.889 li
62.4097 159.89 li
54.7778 160.985 li
53.1514 161.218 51.77 160.334 50.9727 158.997 cv
50.8203 158.741 50.6895 158.471 50.583 158.189 cv
50.4771 157.91 50.394 157.618 50.3374 157.318 cv
50.3364 157.318 li
50.334 157.307 li
50.334 157.303 li
47.7661 143.633 45.9102 130.154 44.8047 116.61 cv
43.6997 103.072 43.3442 89.457 43.7769 75.5088 cv
43.8228 74.0283 44.3403 71.8198 45.3525 70.4224 cv
45.5625 70.1323 45.7954 69.8735 46.0508 69.6597 cv
46.0518 69.6606 li
46.3193 69.436 46.6104 69.2603 46.9243 69.146 cv
46.9302 69.144 li
46.9819 69.1255 li
46.9878 69.1235 li
55.0283 66.437 li
55.3315 66.3364 55.6401 66.2896 55.9448 66.2925 cv
56.7139 66.2974 57.4546 66.6118 58.0615 67.1128 cv
58.6563 67.603 59.1289 68.2778 59.376 69.0171 cv
59.502 69.395 59.5703 69.7925 59.5679 70.1919 cv
59.4683 84.6201 60.0664 98.8486 61.2085 113.018 cv
cp
65.1255 155.586 mo
63.0449 141.392 61.356 127.276 60.2124 113.096 cv
59.0698 98.9229 58.4722 84.6689 58.5718 70.188 cv
58.5732 69.9009 58.5229 69.6118 58.4302 69.3335 cv
58.2417 68.77 57.8818 68.2554 57.4287 67.8813 cv
56.9893 67.519 56.4663 67.2915 55.939 67.2886 cv
55.937 67.2886 li
55.7422 67.2866 55.543 67.3169 55.3447 67.3833 cv
47.3101 70.0669 li
47.2583 70.0854 li
47.0571 70.1597 46.8677 70.2749 46.6914 70.4233 cv
46.6914 70.4253 li
46.502 70.5845 46.3247 70.7827 46.1611 71.0083 cv
45.2705 72.2373 44.814 74.208 44.7729 75.5361 cv
44.3418 89.4326 44.6973 103.013 45.8008 116.532 cv
46.9038 130.046 48.7544 143.488 51.314 157.115 cv
51.3149 157.115 li
51.3174 157.127 li
51.3174 157.131 li
51.3633 157.373 51.4307 157.61 51.5166 157.838 cv
51.603 158.065 51.7075 158.283 51.8281 158.484 cv
52.4307 159.495 53.4531 160.167 54.6372 159.997 cv
62.269 158.901 li
62.2788 158.9 li
63.1367 158.774 63.9155 158.354 64.4478 157.752 cv
64.9629 157.169 65.2437 156.413 65.127 155.596 cv
65.1255 155.586 li
cp
37.6187 106.631 mo
37.4419 69.5669 li
37.4189 68.895 37.2583 68.3608 37.0044 67.9946 cv
37.0034 67.9956 li
36.8755 67.811 36.7231 67.6704 36.5552 67.5815 cv
36.5557 67.5806 li
36.3931 67.4946 36.2104 67.4526 36.0151 67.4595 cv
35.7153 67.4702 35.3755 67.5933 35.0146 67.8442 cv
35.0054 67.8501 li
28.4126 72.2061 li
28.4023 72.2119 li
27.2603 72.9277 26.4678 74.1045 26.0269 75.7383 cv
25.937 76.0713 25.8618 76.417 25.8027 76.7744 cv
25.7437 77.1328 25.6973 77.5186 25.6641 77.9287 cv
25.6626 77.9502 li
25.6621 77.9502 li
24.9712 112.188 li
24.9712 112.198 li
24.9009 113.973 25.1265 115.217 25.647 115.945 cv
26.1011 116.582 26.8325 116.817 27.8408 116.664 cv
33.4272 113.997 li
33.4277 113.999 li
34.5869 113.404 35.5806 112.591 36.3062 111.429 cv
37.0439 110.248 37.5156 108.695 37.6187 106.631 cv
cp
38.438 69.5493 mo
38.6147 106.65 li
38.6147 106.676 li
38.5024 108.927 37.9775 110.638 37.1538 111.956 cv
36.3208 113.29 35.1875 114.217 33.8687 114.892 cv
33.8569 114.899 li
28.207 117.597 li
28.147 117.625 li
28.0737 117.638 li
26.6226 117.881 25.5425 117.517 24.8345 116.524 cv
24.1826 115.61 23.896 114.161 23.9751 112.159 cv
23.9756 112.159 li
24.6665 77.9014 li
24.6665 77.8721 li
24.668 77.8506 li
24.7017 77.4268 24.7524 77.0146 24.8184 76.6133 cv
24.8853 76.2119 24.9668 75.833 25.062 75.4805 cv
25.5693 73.5996 26.5034 72.2295 27.8618 71.3745 cv
27.8613 71.3745 li
34.4448 67.0239 li
34.4443 67.0239 li
34.9673 66.6606 35.4917 66.48 35.9839 66.4634 cv
36.3574 66.4507 36.7075 66.5317 37.022 66.6987 cv
37.0239 66.6987 li
37.3325 66.8628 37.604 67.1079 37.8237 67.4253 cv
37.8237 67.4272 li
38.1826 67.9438 38.4077 68.6606 38.438 69.5356 cv
38.438 69.5493 li
cp
21.1416 118.013 mo
22.7793 77.752 li
22.7813 77.7061 li
22.791 77.6621 li
22.957 76.9219 22.9731 76.4854 22.8398 76.3545 cv
22.7529 76.2695 22.459 76.3604 21.9609 76.6279 cv
19.6064 78.1973 li
19.5791 78.2158 li
19.5381 78.2344 li
18.4878 78.7217 18.3486 79.7656 18.1445 81.3057 cv
18.1445 81.3076 li
18.1372 81.3604 li
18.1377 81.3604 li
14.9048 120.626 li
14.9038 120.638 li
14.897 120.674 li
14.6997 121.755 14.7563 122.364 14.9971 122.651 cv
15.1895 122.881 15.584 122.912 16.103 122.835 cv
18.9312 121.621 li
19.8218 121.161 20.4502 120.645 20.8154 120.059 cv
21.1646 119.498 21.2754 118.854 21.1475 118.116 cv
21.1392 118.068 li
21.1416 118.013 li
cp
23.7739 77.835 mo
22.1396 118 li
22.2964 118.967 22.1382 119.823 21.6626 120.586 cv
21.1978 121.332 20.4307 121.971 19.3623 122.52 cv
19.3311 122.535 li
16.436 123.777 li
16.3828 123.8 li
16.3193 123.811 li
15.4302 123.953 14.7021 123.854 14.231 123.292 cv
13.8037 122.781 13.6606 121.917 13.9097 120.529 cv
17.1416 81.2783 li
17.146 81.2529 li
17.1563 81.1748 li
17.1567 81.1748 li
17.4019 79.3271 17.5698 78.0693 19.0776 77.3477 cv
21.4067 75.7959 li
21.4102 75.793 li
21.4453 75.7744 li
22.3989 75.2559 23.0972 75.2119 23.5386 75.6436 cv
23.9307 76.0273 24.0088 76.7578 23.7739 77.835 cv
cp
15.8369 169.32 mo
15.8403 169.339 li
16.0205 170.348 15.5352 171.559 14.855 172.225 cv
14.6055 172.469 14.3252 172.649 14.0337 172.738 cv
13.7002 172.839 13.3569 172.822 13.0249 172.653 cv
12.4668 172.368 11.9834 171.622 11.7524 170.197 cv
11.7524 170.195 li
9.46094 156.059 7.96729 135.587 8.27148 117.581 cv
8.33105 114.066 8.4585 110.654 8.66016 107.414 cv
8.86377 104.148 9.14209 101.048 9.50244 98.1826 cv
9.50293 98.1826 li
9.50488 98.1631 li
9.50684 98.1611 li
9.83398 95.5654 10.9893 93.5488 12.0342 92.668 cv
12.3862 92.3701 12.7437 92.1846 13.0767 92.127 cv
13.4956 92.0547 13.8677 92.168 14.1523 92.4893 cv
14.5186 92.9004 14.6899 93.6904 14.5264 94.9131 cv
12.3135 111.382 12.4038 133.965 13.7539 151.623 cv
14.0161 155.057 14.3267 158.304 14.6763 161.281 cv
15.0244 164.248 15.4146 166.955 15.8369 169.318 cv
15.8369 169.32 li
cp
14.8564 169.513 mo
14.853 169.494 li
14.8525 169.494 li
14.4287 167.124 14.0366 164.396 13.6841 161.395 cv
13.3325 158.401 13.021 155.142 12.7578 151.697 cv
11.4043 133.988 11.3149 111.326 13.5381 94.7803 cv
13.6592 93.8779 13.5898 93.3584 13.4063 93.1523 cv
13.2446 93.1113 li
13.0884 93.1387 12.894 93.248 12.6787 93.4297 cv
11.7837 94.1846 10.7881 95.9561 10.4956 98.2803 cv
10.4971 98.2803 li
10.4946 98.3018 li
10.4946 98.3037 li
10.1348 101.169 9.85742 104.247 9.65625 107.473 cv
9.45361 110.724 9.32617 114.12 9.26758 117.598 cv
8.96436 135.545 10.4526 155.947 12.7363 170.036 cv
12.7368 170.036 li
12.9097 171.103 13.1841 171.616 13.478 171.767 cv
13.5586 171.808 13.6504 171.81 13.7446 171.781 cv
13.8799 171.74 14.021 171.646 14.1558 171.514 cv
14.6353 171.045 14.9795 170.204 14.8564 169.515 cv
14.8564 169.513 li
cp
6.41846 107.958 mo
6.78076 101.668 7.28516 95.3701 7.91797 89.0654 cv
7.92334 89.0244 li
8.0415 88.3848 8.06299 88.0117 7.9873 87.9082 cv
7.9541 87.8623 7.94385 88.0283 7.7832 88.167 cv
7.78369 88.167 li
6.29541 89.4951 li
6.26514 89.5225 li
6.22705 89.5459 li
5.76709 89.834 5.48584 90.3311 5.38428 91.0371 cv
5.3623 91.1914 5.34814 91.3516 5.34277 91.5146 cv
5.3374 91.6826 5.33984 91.8652 5.35059 92.0586 cv
5.35254 92.0869 li
5.35547 92.1426 li
5.34473 92.2041 li
4.28076 98.1426 3.57568 104.153 3.15381 110.222 cv
2.73145 116.3 2.59375 122.423 2.66309 128.582 cv
2.66309 128.623 li
2.65918 128.654 li
2.51172 129.698 2.54053 130.286 2.69482 130.582 cv
2.69336 130.583 li
2.7627 130.715 2.90625 130.76 3.09766 130.762 cv
4.65527 129.726 li
5.12744 129.384 5.46289 128.992 5.65039 128.541 cv
5.83936 128.085 5.88477 127.552 5.77734 126.931 cv
5.77051 126.894 li
5.771 126.843 li
5.83691 120.537 6.05713 114.242 6.41846 107.958 cv
cp
8.9082 89.1826 mo
8.27832 95.458 7.77637 101.734 7.41455 108.013 cv
7.05371 114.287 6.8335 120.551 6.76807 126.803 cv
6.8999 127.599 6.83057 128.301 6.57178 128.924 cv
6.30957 129.557 5.85498 130.092 5.22217 130.546 cv
5.20654 130.559 li
3.53076 131.673 li
3.42139 131.745 li
3.28857 131.755 li
2.64697 131.799 2.12988 131.655 1.81055 131.043 cv
1.80859 131.043 li
1.5625 130.571 1.49268 129.801 1.6665 128.549 cv
1.59766 122.363 1.73584 116.228 2.15771 110.155 cv
2.58008 104.083 3.28613 98.0586 4.35254 92.0918 cv
4.3418 91.8838 4.33984 91.6807 4.34668 91.4834 cv
4.35352 91.2734 4.37012 91.0771 4.396 90.8965 cv
4.53906 89.9004 4.96143 89.1758 5.66211 88.7217 cv
7.12012 87.4209 li
7.13281 87.4102 li
7.15723 87.3926 li
7.89063 86.8564 8.43604 86.833 8.79199 87.3213 cv
9.03467 87.6543 9.07324 88.2754 8.9082 89.1826 cv
cp
95.5762 33.8394 mo
95.5815 33.8374 li
96.5518 33.4819 97.5552 33.1187 98.5933 32.7485 cv
99.4497 32.4438 100.457 32.0903 101.62 31.688 cv
106.857 29.8735 112.135 28.1753 117.441 26.5894 cv
118.389 26.3071 119.196 26.0425 119.89 25.8159 cv
122.163 25.0728 123.386 24.6743 124.354 25.3335 cv
125.421 26.0591 125.531 27.7378 125.769 31.3687 cv
125.832 32.3188 li
125.832 32.3188 li
130.508 101.924 li
130.508 101.97 li
130.546 105.025 129.871 106.999 128.597 108.062 cv
127.274 109.165 125.423 109.238 123.145 108.475 cv
98.6807 100.259 li
95.7607 99.5342 93.542 98.2002 91.9785 96.2607 cv
90.4185 94.3252 89.5347 91.8125 89.2798 88.7246 cv
89.2788 88.7168 li
89.2798 88.6475 li
89.6855 43.3882 li
89.6768 42.8706 89.6655 42.3774 89.6553 41.9224 cv
89.5942 39.2271 89.5625 37.8276 90.231 36.7329 cv
90.9678 35.5259 92.3052 35.0366 95.084 34.02 cv
95.5767 33.8403 li
95.5762 33.8394 li
cp
.376471 .364706 .360784 rgb
f
96.166 35.311 mo
96.1606 35.313 li
96.1577 35.313 li
95.6621 35.4946 li
93.2627 36.3716 92.1074 36.7944 91.6792 37.4956 cv
91.2676 38.1704 91.2959 39.3999 91.3496 41.7681 cv
91.3594 42.2134 91.3706 42.6978 91.3799 43.2446 cv
91.3799 43.2642 li
90.9741 88.4707 li
91.2021 91.2148 91.9639 93.418 93.3003 95.0762 cv
93.3848 95.1807 93.4717 95.2832 93.5605 95.3828 cv
93.2012 95.0645 92.8716 94.7197 92.5728 94.3486 cv
91.2358 92.6904 90.4741 90.4873 90.2461 87.7432 cv
90.6519 42.5366 li
90.6519 42.5161 li
90.6426 41.9702 90.6313 41.4858 90.6216 41.0405 cv
90.5679 38.6724 90.5396 37.4419 90.9517 36.7671 cv
91.3794 36.0659 92.5347 35.6431 94.9346 34.7661 cv
95.4297 34.5854 li
95.4326 34.5854 li
95.438 34.5835 li
96.4624 34.2075 97.4614 33.8462 98.4302 33.5005 cv
99.5806 33.0913 100.588 32.7358 101.443 32.4399 cv
106.586 30.6577 111.844 28.9692 117.198 27.3687 cv
118.149 27.0845 118.976 26.814 119.687 26.5815 cv
121.446 26.0073 122.393 25.6978 122.67 25.8862 cv
122.8 25.9751 122.896 26.1978 122.975 26.5728 cv
122.492 26.6313 121.656 26.9038 120.415 27.3101 cv
119.704 27.5415 118.877 27.812 117.926 28.0962 cv
112.572 29.6968 107.314 31.3862 102.171 33.1675 cv
101.316 33.4634 100.308 33.8188 99.1582 34.229 cv
98.189 34.5737 97.1904 34.936 96.166 35.311 cv
cp
86.874 38.3472 mo
87.0659 38.4458 li
87.9741 39.0024 87.9727 40.4897 87.9712 43.7876 cv
87.9707 44.3267 li
87.9707 44.3433 li
86.8018 88.8848 li
86.8018 88.9121 li
86.6973 90.5576 86.6792 91.8506 86.665 92.9053 cv
86.5942 98.1133 86.5918 98.2256 79.3296 100.056 cv
78.3179 100.312 77.3501 100.51 76.3584 100.712 cv
74.8086 101.029 73.1934 101.36 71.0254 102.013 cv
67.4453 103.091 66.0537 103.412 65.3862 102.091 cv
66.2373 102.454 67.6841 102.071 70.2974 101.285 cv
72.4658 100.632 74.0806 100.302 75.6304 99.9844 cv
76.6226 99.7813 77.5898 99.583 78.6016 99.3281 cv
85.8638 97.498 85.8662 97.3857 85.937 92.1768 cv
85.9512 91.123 85.9692 89.8291 86.0737 88.1846 cv
86.0737 88.1572 li
87.2427 43.6147 li
87.2427 43.5981 li
87.2432 43.0601 li
87.2441 40.6108 87.2456 39.1597 86.874 38.3472 cv
cp
70.6577 46.6157 mo
70.6577 46.6157 li
70.6538 46.6177 li
70.6431 46.6235 li
67.8901 47.9429 67.8643 48.1538 67.5132 51.0786 cv
67.4199 51.8481 li
67.4199 51.8511 li
66.5195 59.1069 65.9814 66.3696 65.7856 73.6377 cv
65.5898 80.915 65.7349 88.2236 66.1997 95.5596 cv
66.271 96.6924 66.2998 97.6973 66.3237 98.54 cv
66.3516 99.5176 66.3735 100.263 66.4556 100.782 cv
66.0728 100.79 65.8828 100.676 65.8076 100.427 cv
65.6558 99.9219 65.6309 99.0537 65.5957 97.8115 cv
65.5718 96.9688 65.543 95.9639 65.4717 94.832 cv
65.0068 87.4961 64.8618 80.1875 65.0576 72.9092 cv
65.2534 65.6421 65.7915 58.3784 66.6919 51.1226 cv
66.6919 51.1196 li
66.7852 50.3511 li
67.1362 47.4253 67.1621 47.2144 69.915 45.895 cv
69.9263 45.8901 li
69.9302 45.8882 li
69.9297 45.8872 li
70.3003 45.7104 70.8232 45.4624 71.4741 45.1548 cv
71.9634 44.9243 72.4834 44.6812 73.0337 44.4253 cv
75.7227 43.1763 78.4375 41.9663 81.1743 40.7944 cv
82.0503 40.4194 82.7769 40.0815 83.3926 39.7954 cv
84.7241 39.1763 85.4561 38.8364 85.6016 38.9253 cv
85.7026 38.9868 85.7603 39.2583 85.792 39.7729 cv
85.4204 39.9194 84.8633 40.1782 84.1206 40.5229 cv
83.5049 40.8101 82.7783 41.1479 81.9023 41.522 cv
79.1655 42.6938 76.4507 43.9048 73.7617 45.1528 cv
73.2114 45.4087 72.6914 45.6528 72.2021 45.8833 cv
71.5513 46.1899 71.0283 46.438 70.6577 46.6157 cv
cp
63.5127 158.368 mo
63.8706 158.174 64.188 157.924 64.4478 157.631 cv
64.5996 157.459 64.7314 157.271 64.8384 157.072 cv
65.2954 156.361 65.5166 155.514 65.3872 154.605 cv
65.3853 154.594 li
65.3853 154.592 li
63.3086 140.423 61.6226 126.33 60.4805 112.169 cv
59.3384 97.999 58.7407 83.7715 58.8398 69.3433 cv
58.8423 68.9429 58.7739 68.5454 58.6479 68.1685 cv
58.498 67.7192 58.2651 67.2935 57.9722 66.9185 cv
58.0615 66.9917 li
58.6563 67.4819 59.1289 68.1567 59.376 68.896 cv
59.502 69.2739 59.5703 69.6714 59.5679 70.0708 cv
59.4683 84.499 60.0664 98.7275 61.2085 112.896 cv
62.3506 127.058 64.0366 141.15 66.1133 155.319 cv
66.1133 155.322 li
66.1152 155.334 li
66.2764 156.462 65.895 157.498 65.1934 158.291 cv
64.5083 159.066 63.5132 159.607 62.4233 159.768 cv
62.4214 159.768 li
62.4097 159.769 li
54.7778 160.864 li
53.3721 161.065 52.1499 160.432 51.3286 159.393 cv
52.0781 159.979 53.0142 160.285 54.0498 160.136 cv
61.6816 159.041 li
61.6938 159.039 li
61.6958 159.039 li
62.3511 158.943 62.9727 158.708 63.5127 158.368 cv
cp
57.2627 67.6323 mo
56.8604 67.3452 56.4009 67.1704 55.939 67.1675 cv
55.937 67.1675 li
55.7422 67.1655 55.543 67.1958 55.3447 67.2622 cv
47.3101 69.9458 li
47.2583 69.9644 li
47.0571 70.0386 46.8677 70.1538 46.6914 70.3022 cv
46.6914 70.3042 li
46.502 70.4634 46.3247 70.6616 46.1611 70.8872 cv
45.2705 72.1162 44.814 74.0869 44.7729 75.415 cv
44.3418 89.3115 44.6973 102.892 45.8008 116.411 cv
46.9038 129.925 48.7544 143.367 51.314 156.994 cv
51.3149 156.994 li
51.3174 157.006 li
51.3174 157.01 li
51.3633 157.252 51.4307 157.489 51.5166 157.717 cv
51.603 157.944 51.7075 158.162 51.8281 158.363 cv
51.8911 158.47 51.9604 158.571 52.0322 158.669 cv
51.6641 158.404 51.3462 158.049 51.1001 157.636 cv
50.9795 157.434 50.875 157.217 50.7886 156.989 cv
50.7026 156.762 50.6353 156.524 50.5894 156.282 cv
50.5894 156.278 li
50.5869 156.267 li
50.5859 156.267 li
48.0264 142.639 46.1758 129.196 45.0728 115.684 cv
43.9692 102.164 43.6138 88.583 44.0449 74.6865 cv
44.0811 73.5176 44.4395 71.8511 45.1323 70.6304 cv
45.2036 70.5161 45.2764 70.4067 45.3525 70.3013 cv
45.5625 70.0112 45.7954 69.7524 46.0508 69.5386 cv
46.0518 69.5396 li
46.1514 69.4556 46.2549 69.3784 46.3608 69.3091 cv
46.5303 69.2368 li
46.582 69.2183 li
54.6172 66.5337 li
54.8149 66.4683 55.0142 66.438 55.209 66.439 cv
55.2109 66.439 li
55.7383 66.4429 56.2612 66.6694 56.7012 67.0327 cv
56.9106 67.2056 57.1006 67.4077 57.2627 67.6323 cv
cp
26.0161 73.1152 mo
26.5044 72.3408 27.1191 71.7212 27.8618 71.2534 cv
27.8613 71.2534 li
34.4448 66.9028 li
34.4443 66.9028 li
34.5479 66.8335 li
34.8115 66.6909 35.0605 66.6187 35.2871 66.6108 cv
35.4824 66.604 35.665 66.646 35.8276 66.7319 cv
35.8271 66.7329 li
35.9951 66.8218 36.1475 66.9614 36.2759 67.146 cv
36.2764 67.146 li
36.3306 67.2231 36.3813 67.3081 36.4263 67.4019 cv
36.2983 67.355 36.1602 67.3335 36.0151 67.3384 cv
35.7153 67.3491 35.3755 67.4722 35.0146 67.7231 cv
35.0054 67.729 li
28.4126 72.085 li
28.4023 72.0908 li
27.2603 72.8066 26.4678 73.9834 26.0269 75.6172 cv
25.937 75.9502 25.8618 76.2959 25.8027 76.6533 cv
25.7437 77.0117 25.6973 77.3975 25.6641 77.8076 cv
25.6626 77.8291 li
25.6621 77.8291 li
24.9712 112.067 li
24.9712 112.077 li
24.9072 113.704 25.0918 114.884 25.5239 115.631 cv
25.2861 115.505 25.084 115.328 24.9189 115.097 cv
24.3984 114.367 24.1733 113.124 24.2437 111.349 cv
24.2437 111.339 li
24.9341 77.1016 li
24.9346 77.1016 li
24.936 77.0801 li
24.9692 76.6699 25.0156 76.2842 25.0747 75.9248 cv
25.1338 75.5684 25.209 75.2217 25.2988 74.8887 cv
25.479 74.2217 25.7183 73.6299 26.0161 73.1152 cv
cp
38.438 69.4282 mo
38.6147 106.529 li
38.6147 106.555 li
38.5024 108.806 37.9775 110.517 37.1538 111.835 cv
36.3208 113.169 35.1875 114.096 33.8687 114.771 cv
33.8569 114.778 li
28.207 117.476 li
28.147 117.504 li
28.0737 117.517 li
26.6226 117.76 25.5425 117.396 24.8345 116.403 cv
24.8193 116.381 li
25.4751 116.827 26.3169 116.961 27.3462 116.789 cv
27.4189 116.776 li
27.479 116.748 li
33.1289 114.051 li
33.1406 114.043 li
33.3511 113.936 33.5576 113.82 33.7583 113.699 cv
34.7764 113.123 35.6504 112.358 36.3062 111.308 cv
36.4473 111.072 li
37.2588 109.758 37.7754 108.058 37.8867 105.827 cv
37.8867 105.802 li
37.71 68.7007 li
37.71 68.687 li
37.6812 67.8491 37.4746 67.1558 37.1421 66.645 cv
37.4023 66.8062 37.6323 67.0278 37.8237 67.3042 cv
37.8237 67.3062 li
38.1826 67.8228 38.4077 68.5396 38.438 69.4146 cv
38.438 69.4282 li
cp
18.0854 77.9717 mo
18.2427 77.7842 18.4307 77.6143 18.6582 77.4629 cv
18.8101 77.3857 li
18.8516 77.3662 li
18.8784 77.3486 li
19.0146 77.2578 li
19.0776 77.2266 li
21.3159 75.7354 li
21.7642 75.501 22.0298 75.4258 22.1118 75.5059 cv
22.2188 75.6104 22.2305 75.9131 22.1445 76.4111 cv
21.9609 76.5068 li
19.6064 78.0762 li
19.5791 78.0947 li
19.5381 78.1133 li
18.4878 78.6006 18.3486 79.6445 18.1445 81.1846 cv
18.1445 81.1865 li
18.1372 81.2393 li
18.1377 81.2393 li
14.9048 120.505 li
14.9038 120.517 li
14.897 120.553 li
14.7788 121.2 14.7524 121.677 14.8018 122.019 cv
14.5654 122.002 14.3818 121.938 14.269 121.802 cv
14.0283 121.515 13.9717 120.905 14.1689 119.825 cv
14.1758 119.789 li
14.1768 119.776 li
17.4102 80.5117 li
17.4092 80.5117 li
17.4165 80.459 li
17.4165 80.457 li
17.5596 79.3789 17.6709 78.543 18.0854 77.9717 cv
cp
23.7739 77.7139 mo
22.1396 117.879 li
22.2964 118.846 22.1382 119.702 21.6626 120.465 cv
21.1978 121.211 20.4307 121.85 19.3623 122.398 cv
19.3311 122.414 li
16.436 123.656 li
16.3828 123.679 li
16.3193 123.689 li
15.4302 123.832 14.7021 123.733 14.231 123.171 cv
14.1499 123.074 14.0801 122.965 14.0205 122.842 cv
14.4482 123.043 14.9814 123.06 15.5913 122.961 cv
15.6548 122.951 li
15.7085 122.928 li
18.603 121.687 li
18.6343 121.671 li
18.8271 121.571 19.0112 121.469 19.1846 121.363 cv
19.9424 120.938 20.4854 120.467 20.8154 119.938 cv
20.9004 119.791 li
20.9351 119.736 li
21.4102 118.975 21.5684 118.118 21.4116 117.151 cv
23.0459 76.9863 li
23.2061 76.252 23.2212 75.6777 23.0898 75.2656 cv
23.2617 75.3115 23.4106 75.3975 23.5386 75.5225 cv
23.9307 75.9063 24.0088 76.6367 23.7739 77.7139 cv
cp
13.8198 171.632 mo
13.9316 171.583 14.0459 171.5 14.1558 171.393 cv
14.3296 171.223 14.4858 171.003 14.6084 170.76 cv
15.0142 170.095 15.2456 169.236 15.1123 168.49 cv
15.1089 168.471 li
15.1089 168.469 li
14.6865 166.105 14.2969 163.399 13.9482 160.432 cv
13.5986 157.455 13.2886 154.208 13.0259 150.773 cv
11.6763 133.116 11.5854 110.533 13.7983 94.0635 cv
13.9194 93.1611 13.8579 92.4932 13.6694 92.041 cv
13.8486 92.1006 14.0112 92.209 14.1523 92.3682 cv
14.5186 92.7793 14.6899 93.5693 14.5264 94.792 cv
12.3135 111.261 12.4038 133.844 13.7539 151.502 cv
14.0161 154.936 14.3267 158.183 14.6763 161.16 cv
15.0244 164.127 15.4146 166.834 15.8369 169.197 cv
15.8369 169.199 li
15.8403 169.218 li
16.0205 170.227 15.5352 171.438 14.855 172.104 cv
14.6055 172.348 14.3252 172.528 14.0337 172.617 cv
13.7002 172.718 13.3569 172.701 13.0249 172.532 cv
12.7651 172.399 12.522 172.166 12.3125 171.812 cv
12.6396 171.974 12.9775 171.988 13.3057 171.889 cv
13.4824 171.835 13.6558 171.747 13.8198 171.632 cv
cp
12.8716 93.1611 mo
12.6787 93.3086 li
11.7837 94.0635 10.7881 95.835 10.4956 98.1592 cv
10.4971 98.1592 li
10.4946 98.1807 li
10.4946 98.1826 li
10.1348 101.048 9.85742 104.126 9.65625 107.352 cv
9.45361 110.603 9.32617 113.999 9.26758 117.477 cv
8.96436 135.424 10.4526 155.826 12.7363 169.915 cv
12.7368 169.915 li
12.8062 170.341 12.8921 170.678 12.9883 170.939 cv
12.75 170.917 li
12.4561 170.768 12.1816 170.253 12.0088 169.188 cv
9.72461 155.099 8.23633 134.695 8.53955 116.748 cv
8.59863 113.271 8.72559 109.874 8.92822 106.623 cv
9.12939 103.397 9.40674 100.319 9.7666 97.4541 cv
9.7666 97.4521 li
9.76904 97.4316 li
9.76758 97.4307 li
9.93262 96.1191 10.3228 94.9834 10.791 94.1074 cv
11.1836 93.4297 11.6172 92.8984 12.0342 92.5469 cv
12.1309 92.4648 12.2285 92.3906 12.3257 92.3262 cv
12.5166 92.2627 li
12.6782 92.3037 li
12.8013 92.4424 12.874 92.7197 12.8716 93.1611 cv
cp
4.92627 89.3164 mo
5.12256 89.0293 5.36719 88.792 5.66211 88.6006 cv
7.12012 87.2998 li
7.13281 87.2891 li
7.15723 87.2715 li
7.29688 87.1738 li
7.3208 87.3486 7.28613 87.6836 7.1958 88.1758 cv
7.18994 88.2168 li
7.15088 88.6104 li
6.29541 89.374 li
6.26514 89.4014 li
6.22705 89.4248 li
5.76709 89.7129 5.48584 90.21 5.38428 90.916 cv
5.3623 91.0703 5.34814 91.2305 5.34277 91.3936 cv
5.3374 91.5615 5.33984 91.7441 5.35059 91.9375 cv
5.35254 91.9658 li
5.35547 92.0215 li
5.34473 92.083 li
4.28076 98.0215 3.57568 104.032 3.15381 110.101 cv
2.73145 116.179 2.59375 122.302 2.66309 128.461 cv
2.66309 128.502 li
2.65918 128.533 li
2.58496 129.059 2.55615 129.468 2.56445 129.783 cv
2.36963 129.913 li
2.17822 129.911 2.03467 129.866 1.96533 129.734 cv
1.96729 129.733 li
1.8125 129.437 1.78418 128.849 1.93115 127.806 cv
1.93555 127.773 li
1.93506 127.733 li
1.86572 121.574 2.00391 115.451 2.42627 109.373 cv
2.84766 103.304 3.55273 97.2939 4.6167 91.3545 cv
4.62793 91.293 li
4.62451 91.2383 li
4.62305 91.21 li
4.62256 91.21 li
4.61182 91.0156 4.60938 90.834 4.61475 90.665 cv
4.62012 90.5029 4.63428 90.3428 4.65625 90.1875 cv
4.70459 89.8496 4.79541 89.5586 4.92627 89.3164 cv
cp
8.9082 89.0615 mo
8.27832 95.3369 7.77637 101.613 7.41455 107.892 cv
7.05371 114.166 6.8335 120.43 6.76807 126.682 cv
6.8999 127.478 6.83057 128.18 6.57178 128.803 cv
6.30957 129.436 5.85498 129.971 5.22217 130.425 cv
5.20654 130.438 li
3.53076 131.552 li
3.42139 131.624 li
3.28857 131.634 li
2.64697 131.678 2.12988 131.534 1.81055 130.922 cv
1.80859 130.922 li
1.76025 130.818 li
1.99609 130.906 2.26465 130.926 2.56055 130.905 cv
2.69336 130.896 li
2.80273 130.823 li
3.0791 130.64 li
3.09766 130.641 li
4.65527 129.604 li
5.05664 129.313 5.36035 128.986 5.55713 128.618 cv
5.66992 128.445 5.76514 128.265 5.84424 128.074 cv
6.10254 127.452 6.17188 126.749 6.04004 125.954 cv
6.10547 119.702 6.32617 113.438 6.68701 107.163 cv
7.04834 100.886 7.55029 94.6084 8.18018 88.333 cv
8.29541 87.7012 8.31201 87.207 8.229 86.8535 cv
8.45166 86.874 8.63916 86.9902 8.79199 87.2002 cv
9.03467 87.5332 9.07324 88.1543 8.9082 89.0615 cv
cp
124.208 25.1226 mo
124.354 25.2124 li
125.421 25.938 125.531 27.6167 125.769 31.2476 cv
125.832 32.1978 li
125.832 32.1978 li
130.508 101.803 li
130.508 101.849 li
130.546 104.904 129.871 106.878 128.597 107.94 cv
127.274 109.044 125.423 109.117 123.145 108.354 cv
98.6807 100.138 li
95.9937 99.4707 93.9009 98.2881 92.3657 96.5918 cv
93.814 97.9023 95.6685 98.8428 97.9526 99.4102 cv
122.417 107.626 li
124.695 108.389 126.546 108.315 127.869 107.212 cv
129.143 106.149 129.818 104.176 129.78 101.121 cv
129.78 101.074 li
125.104 31.4702 li
125.041 30.52 li
124.856 27.6968 124.747 26.0552 124.208 25.1226 cv
cp
0 0 0 rgb
f
49.6675 194.7 mo
50.1963 198.764 li
50.2285 199.014 50.0186 199.132 49.5669 199.119 cv
45.519 198.999 li
45.0796 198.971 44.8735 198.854 44.8999 198.65 cv
44.5293 194.623 li
44.5313 194.482 44.6782 194.404 44.9707 194.389 cv
48.9907 194.411 li
49.3442 194.406 49.5698 194.503 49.6675 194.7 cv
cp
.121569 .101961 .0901961 rgb
ef
49.1987 194.709 mo
49.7637 198.651 li
44.1685 198.475 li
43.8892 194.777 li
49.1987 194.709 li
cp
.972549 .764706 0 rgb
ef
49.5215 198.579 mo
47.3105 198.422 li
47.0142 194.704 li
49.0083 194.731 li
49.5215 198.579 li
cp
.905882 .470588 .0901961 rgb
ef
47.2231 198.43 mo
44.3179 198.372 li
44.124 198.482 li
49.5254 198.597 li
47.2231 198.43 li
cp
.537255 .129412 .105882 rgb
ef
47.3652 195.744 mo
47.334 195.21 47.1836 194.761 47.0293 194.741 cv
46.875 194.722 46.7754 195.14 46.8066 195.674 cv
46.8384 196.208 46.9888 196.656 47.1431 196.676 cv
47.2974 196.695 47.3965 196.278 47.3652 195.744 cv
cp
1 1 1 rgb
ef
13.4194 191.934 mo
13.7344 195.25 li
13.7539 195.454 13.6284 195.551 13.3594 195.54 cv
10.9463 195.441 li
10.6841 195.419 10.561 195.324 10.5771 195.157 cv
10.356 191.87 li
10.3569 191.756 10.4448 191.692 10.6191 191.68 cv
13.0156 191.697 li
13.2266 191.694 13.3608 191.772 13.4194 191.934 cv
cp
.121569 .101961 .0901961 rgb
ef
13.1396 191.941 mo
13.4766 195.158 li
10.1406 195.014 li
9.97412 191.996 li
13.1396 191.941 li
cp
.972549 .764706 0 rgb
ef
13.332 195.1 mo
12.0142 194.971 li
11.8374 191.937 li
13.0264 191.96 li
13.332 195.1 li
cp
.905882 .470588 .0901961 rgb
ef
11.9619 194.978 mo
10.23 194.93 li
10.1143 195.021 li
13.3345 195.114 li
11.9619 194.978 li
cp
.537255 .129412 .105882 rgb
ef
12.0464 192.786 mo
12.0278 192.351 11.938 191.983 11.8462 191.968 cv
11.7539 191.952 11.6948 192.292 11.7134 192.729 cv
11.7324 193.164 11.8218 193.53 11.9141 193.547 cv
12.0059 193.563 12.0649 193.222 12.0464 192.786 cv
cp
1 1 1 rgb
ef
83.1191 103.18 mo
82.9673 108.955 li
82.958 109.31 82.6348 109.537 81.999 109.639 cv
76.3027 110.533 li
75.687 110.609 75.4214 110.494 75.5044 110.189 cv
75.8716 104.425 li
75.9048 104.22 76.1304 104.067 76.5474 103.968 cv
82.2261 102.938 li
82.7266 102.838 83.0244 102.918 83.1191 103.18 cv
cp
.121569 .101961 .0901961 rgb
ef
82.4536 103.316 mo
82.3804 108.906 li
76.2876 109.852 li
74.5083 109.48 li
74.9321 104.172 li
79.9531 103.08 li
82.4536 103.316 li
cp
.972549 .764706 0 rgb
ef
82.0537 108.865 mo
78.9629 109.22 li
79.3672 103.886 li
82.1797 103.399 li
82.0537 108.865 li
cp
.905882 .470588 .0901961 rgb
ef
79.1143 108.607 mo
74.6201 109.445 li
76.2583 109.872 li
82.0557 108.89 li
79.1143 108.607 li
cp
.537255 .129412 .105882 rgb
ef
79.6328 105.308 mo
79.7065 104.538 79.5933 103.925 79.3794 103.937 cv
79.166 103.949 78.9326 104.583 78.8589 105.353 cv
78.7852 106.121 78.8984 106.735 79.1123 106.723 cv
79.3257 106.711 79.5591 106.076 79.6328 105.308 cv
cp
1 1 1 rgb
ef
83.5151 194.349 mo
84.2944 200.341 li
84.3423 200.709 84.0322 200.883 83.3662 200.864 cv
77.3979 200.688 li
76.7495 200.646 76.4453 200.475 76.4849 200.174 cv
75.9385 194.235 li
75.9409 194.027 76.1577 193.913 76.5894 193.891 cv
82.5166 193.922 li
83.0376 193.916 83.3706 194.059 83.5151 194.349 cv
cp
.121569 .101961 .0901961 rgb
ef
82.8232 194.362 mo
83.6567 200.176 li
75.4063 199.914 li
74.9941 194.463 li
82.8232 194.362 li
cp
.972549 .764706 0 rgb
ef
83.2993 200.069 mo
80.0391 199.837 li
79.6025 194.354 li
82.5425 194.396 li
83.2993 200.069 li
cp
.905882 .470588 .0901961 rgb
ef
79.9102 199.848 mo
75.626 199.763 li
75.3403 199.926 li
83.3047 200.095 li
79.9102 199.848 li
cp
.537255 .129412 .105882 rgb
ef
80.1196 195.889 mo
80.0732 195.102 79.8516 194.439 79.624 194.41 cv
79.397 194.382 79.25 194.997 79.2964 195.784 cv
79.3423 196.572 79.5645 197.234 79.7915 197.263 cv
80.019 197.292 80.166 196.676 80.1196 195.889 cv
cp
1 1 1 rgb
ef
262.567 114.748 mo
151.801 113.315 li
151.791 113.316 151.782 113.317 151.772 113.318 cv
151.705 113.317 151.638 113.316 151.57 113.315 cv
151.082 113.361 150.6 113.385 150.125 113.389 cv
149.73 113.386 149.34 113.369 148.955 113.337 cv
148.748 113.32 148.542 113.299 148.337 113.273 cv
144.831 112.838 141.817 111.182 139.599 108.456 cv
139.601 108.459 139.604 108.461 139.606 108.464 cv
149.559 106.986 167.616 99.0794 185.504 99.0794 cv
197.056 99.0794 208.539 102.38 217.715 112.841 cv
226.344 105.826 232.707 101.62 242.002 101.62 cv
246.222 101.62 251.048 102.487 256.963 104.352 cv
257.563 107.155 258.095 109.571 258.567 111.44 cv
258.567 111.44 li
258.567 111.44 li
258.364 109.397 258.184 107.134 257.985 104.681 cv
259.068 105.036 260.187 105.423 261.345 105.843 cv
261.452 102.468 255.245 71.1284 254.533 70.2251 cv
254.457 70.1682 254.381 70.1117 254.303 70.0552 cv
254.237 69.8469 254.184 69.7142 254.146 69.6665 cv
253.515 69.2434 252.841 68.8298 252.13 68.4267 cv
249.844 60.408 246.605 51.9277 241.921 43.2739 cv
236.99 34.1655 229.397 32.1607 229.397 32.1607 cv
228.913 32.0316 228.467 31.971 228.063 31.971 cv
223.959 31.971 224.134 38.2151 232.661 42.7573 cv
238.702 45.9749 243.458 55.197 247.224 66.0464 cv
240.714 63.3154 232.461 61.2486 224.204 60.0932 cv
219.433 59.3605 215.129 58.9888 212.054 58.9888 cv
211.333 58.9888 210.68 59.0092 210.105 59.0503 cv
210.105 59.0503 208.48 50.8503 208.388 50.8503 cv
208.388 50.8503 208.388 50.8503 208.388 50.8503 cv
208.381 50.8504 208.383 50.8975 208.395 50.9985 cv
208.395 50.9985 li
208.449 51.6043 207.503 53.255 206.116 55.0011 cv
204.025 57.2429 200.544 59.6715 198.683 59.7466 cv
190.277 60.0845 161.31 61.7983 151.661 64.8579 cv
144.705 67.0641 138.213 71.5275 136.408 75.4157 cv
135.186 77.6196 134.751 79.9746 134.602 82.4861 cv
130.883 34.2222 li
130.261 28.6372 135.708 25.2602 147.226 24.0903 cv
155.167 23.3982 163.162 23.0076 171.227 23.0076 cv
193.586 23.0076 216.451 26.0126 239.962 33.9273 cv
239.974 33.9313 239.987 33.9359 239.999 33.9398 cv
240.064 33.9616 240.126 33.9826 240.19 34.0044 cv
240.205 34.0295 240.22 34.0539 240.234 34.079 cv
240.239 34.0865 240.246 34.0979 240.25 34.1054 cv
240.26 34.1216 240.27 34.1384 240.279 34.1546 cv
240.284 34.1636 240.289 34.172 240.295 34.181 cv
240.297 34.1851 240.3 34.1904 240.303 34.1944 cv
240.207 34.1626 240.111 34.1308 240.016 34.0991 cv
247.815 47.3081 253.492 61.7808 257.177 76.5557 cv
257.177 76.5557 li
257.177 76.5557 li
255.613 70.0813 253.69 63.6605 251.398 57.37 cv
253.792 63.653 255.791 70.0754 257.407 76.5557 cv
257.388 76.4781 257.37 76.4005 257.351 76.323 cv
260.46 88.717 262.163 101.325 262.536 113.583 cv
262.536 113.584 li
262.548 113.973 262.558 114.36 262.567 114.748 cv
137.659 105.383 mo
137.222 104.48 136.848 103.507 136.542 102.466 cv
136.296 101.631 136.094 100.751 135.938 99.8301 cv
135.938 99.8301 li
135.203 90.2852 li
135.865 98.8711 li
136.245 101.439 136.845 103.605 137.659 105.383 cv
level3{
gsave
clp
[-136.771 9.56395 -9.56395 -136.771 265.163 65.1831 ]ct
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.811765 .564706 0 ]
/C1 [.811765 .564706 0 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.811765 .564706 0 ]
/C1 [.811765 .564706 0 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.811765 .564706 0 ]
/C1 [.941176 .87451 .721569 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.941176 .87451 .721569 ]
/C1 [1 .701961 0 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 .701961 0 ]
/C1 [1 .701961 0 ]
/N 1 
>>
]
/Bounds [.1 .228 .628 .9 ]
/Encode [0 1 0 1 0 1 0 1 0 1 ]
>>
>>shfill grestore
}if
np
258.567 111.44 mo
258.095 109.571 257.563 107.155 256.963 104.352 cv
257.3 104.458 257.641 104.568 257.985 104.681 cv
258.184 107.134 258.364 109.397 258.567 111.44 cv
252.13 68.4267 mo
250.648 67.5872 249.001 66.7919 247.224 66.0464 cv
243.458 55.197 238.702 45.9749 232.661 42.7573 cv
224.134 38.2151 223.959 31.971 228.063 31.971 cv
228.467 31.971 228.913 32.0316 229.397 32.1607 cv
229.397 32.1607 236.99 34.1655 241.921 43.2739 cv
246.605 51.9277 249.844 60.408 252.13 68.4267 cv
level3{
gsave
clp
[-136.771 9.56395 -9.56395 -136.771 265.163 65.1831 ]ct
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.905882 .784314 .501961 ]
/C1 [.905882 .784314 .501961 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.905882 .784314 .501961 ]
/C1 [.905882 .784314 .501961 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.905882 .784314 .501961 ]
/C1 [.972549 .937255 .862745 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.972549 .937255 .862745 ]
/C1 [1 .85098 .501961 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 .85098 .501961 ]
/C1 [1 .85098 .501961 ]
/N 1 
>>
]
/Bounds [.1 .228 .628 .9 ]
/Encode [0 1 0 1 0 1 0 1 0 1 ]
>>
>>shfill grestore
}if
np
239.875 32.0288 mo
247.865 45.8745 253.664 61.0581 257.407 76.5557 cv
253.714 61.7456 248.019 47.2388 240.19 34.0044 cv
208.117 23.1655 177.254 21.4731 147.226 24.0903 cv
135.708 25.2602 130.261 28.6372 130.883 34.2222 cv
135.938 99.8301 li
137.501 109.085 143.754 114.063 151.801 113.315 cv
188.713 113.793 225.624 114.271 262.535 114.748 cv
265.828 115.149 265.839 115.551 262.568 115.952 cv
150.236 114.463 li
142.076 115.239 135.735 110.065 134.15 100.446 cv
129.024 32.2554 li
128.393 26.4507 133.917 22.9409 145.597 21.7241 cv
176.049 19.0044 207.349 20.7632 239.875 32.0288 cv
.121569 .101961 .0901961 rgb
ef
145.284 112.623 mo
147.196 113.283 149.311 113.525 151.57 113.315 cv
188.481 113.793 225.394 114.271 262.305 114.748 cv
264.084 114.965 264.903 115.182 264.767 115.398 cv
264.411 115.335 263.976 115.272 263.458 115.21 cv
226.547 114.732 189.636 114.255 152.724 113.777 cv
150.001 114.03 147.484 113.625 145.284 112.623 cv
240.998 34.4273 mo
248.293 47.6186 253.648 61.9488 257.177 76.5557 cv
253.492 61.7808 247.815 47.3081 240.016 34.0991 cv
240.343 34.2075 240.67 34.3169 240.998 34.4273 cv
239.644 32.0288 mo
239.691 32.1118 li
207.561 21.187 176.627 19.4976 146.519 22.186 cv
134.839 23.4019 129.315 26.9116 129.946 32.7163 cv
135.073 100.908 li
136.13 107.322 139.303 111.759 143.719 113.773 cv
138.704 112.038 135.066 107.407 133.919 100.446 cv
128.793 32.2554 li
128.162 26.4507 133.686 22.9409 145.365 21.7241 cv
175.818 19.0044 207.118 20.7632 239.644 32.0288 cv
.760784 .756863 .756863 rgb
ef
160.266 172.153 mo
160.48 168.183 156.168 166.678 153.301 166.734 cv
150.434 166.792 148.207 169.311 148.328 172.359 cv
148.449 175.408 150.872 177.835 153.739 177.778 cv
156.606 177.721 160.052 176.124 160.266 172.153 cv
cp
level3{
gsave
[1.31719e-7 11.0458 -11.0458 1.31719e-7 154.299 166.733 ]ct
<<
/PatternType 2
/Shading
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.811765 .564706 0 ]
/C1 [.811765 .564706 0 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.811765 .564706 0 ]
/C1 [.811765 .564706 0 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.811765 .564706 0 ]
/C1 [.941176 .87451 .721569 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.941176 .87451 .721569 ]
/C1 [1 .701961 0 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 .701961 0 ]
/C1 [1 .701961 0 ]
/N 1 
>>
]
/Bounds [.06 .3856 .808 .94 ]
/Encode [0 1 0 1 0 1 0 1 0 1 ]
>>
>>>> matrix makepattern grestore setpattern
}if
level3{
ef
}if
152.236 167.25 mo
149.985 167.375 148.274 169.654 148.418 172.339 cv
148.561 175.024 150.502 177.101 152.754 176.976 cv
155.005 176.851 156.715 174.571 156.572 171.887 cv
156.43 169.201 154.488 167.125 152.236 167.25 cv
cp
0 0 0 rgb
ef
152.039 167.693 mo
149.903 167.808 148.282 169.881 148.417 172.323 cv
148.553 174.766 150.394 176.655 152.529 176.541 cv
154.664 176.427 156.286 174.354 156.151 171.911 cv
156.016 169.469 154.174 167.58 152.039 167.693 cv
cp
.905882 .470588 .0901961 rgb
ef
152.058 176.275 mo
152.667 176.135 153.342 175.412 153.251 176.124 cv
154.278 176.067 155.026 174.492 155.403 173.819 cv
155.427 173.626 155.442 173.472 155.422 173.277 cv
155.1 172.115 152.1 172.003 151.194 172.765 cv
149.624 173.065 150.763 170.477 151.468 172.034 cv
151.619 172.188 152.986 172.101 153.21 172.028 cv
154.346 171.497 156.542 172.889 155.318 170.604 cv
154.445 170.487 155.152 169.914 154.907 169.587 cv
154.764 168.76 153.884 168.646 153.123 168.369 cv
152.021 167.668 150.5 168.528 149.939 169.496 cv
148.463 171.218 149.046 176.191 152.058 176.275 cv
cp
ef
151.967 175.824 mo
152.851 175.732 154.069 175.337 154.472 174.612 cv
154.964 174.3 155.405 173.142 154.612 172.875 cv
154.12 172.895 152.271 173.125 151.474 173.309 cv
151.325 173.343 151.024 173.101 150.979 173.153 cv
150.318 173.463 149.979 173.97 149.959 174.674 cv
149.952 174.909 150.218 174.974 150.26 175.057 cv
150.352 175.24 150.339 175.256 150.878 175.554 cv
151.229 175.748 151.574 175.865 151.967 175.824 cv
cp
.972549 .764706 0 rgb
ef
154.877 171.872 mo
155.187 171.612 155.411 170.747 154.813 170.648 cv
153.543 170.719 153.429 170.931 152.026 170.688 cv
150.593 170.44 152.022 170.034 152.146 169.875 cv
152.372 169.58 152.936 169.519 153.318 169.352 cv
154.623 168.78 152.405 168.716 152.496 168.549 cv
152.996 167.637 151.014 168.31 149.944 169.854 cv
149.526 170.46 149.475 171.345 149.425 172.101 cv
149.413 172.279 149.821 172.329 149.913 172.265 cv
150.256 172.023 151.294 170.887 151.894 171.403 cv
152.242 171.704 152.771 171.646 153.078 171.75 cv
153.818 171.824 154.134 171.828 154.877 171.872 cv
cp
ef
153.512 168.86 mo
153.098 169.016 152.438 168.921 152.027 169.116 cv
151.617 169.312 151.01 169.66 150.706 169.843 cv
150.523 169.953 150.811 170.923 151.261 170.897 cv
151.592 170.88 152.049 170.568 152.371 170.479 cv
152.897 170.333 153.452 170.239 154.009 170.196 cv
154.431 170.164 154.938 170.273 154.628 169.75 cv
154.525 169.577 154.312 169.342 154.115 169.312 cv
153.987 169.293 153.548 168.968 153.512 168.86 cv
cp
.560784 .329412 .266667 rgb
ef
153.497 169.712 mo
154.378 169.19 153.604 168.732 152.913 168.771 cv
151.805 168.832 151.078 169.391 150.509 169.995 cv
150.093 170.438 149.81 171.097 149.659 171.605 cv
149.618 171.747 149.665 171.782 149.802 171.774 cv
149.914 171.769 150.21 170.815 150.345 170.683 cv
150.749 170.284 151.339 169.562 151.842 169.331 cv
153.104 168.754 152.772 170.009 153.497 169.712 cv
cp
.933333 .603922 .411765 rgb
ef
152.074 175.864 mo
151.515 175.224 150.923 174.425 150.559 173.83 cv
150.449 173.651 150.317 173.069 150.67 173.286 cv
150.93 173.445 151.192 173.925 151.42 174.145 cv
151.794 174.505 152.207 174.828 152.639 175.107 cv
152.966 175.318 153.41 175.438 152.985 175.779 cv
152.846 175.893 152.595 176.016 152.427 175.958 cv
152.318 175.92 152.141 175.781 152.074 175.864 cv
cp
ef
149.957 172.893 mo
149.766 172.579 149.813 172.119 149.793 171.747 cv
149.783 171.564 149.83 171.53 149.652 171.54 cv
149.395 171.555 li
149.17 171.659 149.217 172.356 149.245 172.637 cv
149.272 172.896 149.267 173.038 149.551 173.021 cv
149.689 173.015 149.893 173.132 149.957 172.893 cv
cp
.560784 .329412 .266667 rgb
ef
178.227 193.947 mo
167.923 193.947 li
166.397 193.947 164.941 195.195 164.688 196.722 cv
164.127 200.09 li
163.872 201.615 164.913 202.863 166.438 202.863 cv
176.742 202.863 li
178.268 202.863 179.724 201.615 179.979 200.09 cv
180.539 196.722 li
180.793 195.195 179.752 193.947 178.227 193.947 cv
cp
level3{
gsave
[2.11649 8.91602 -8.91602 1.06322e-7 171.274 193.948 ]ct
<<
/PatternType 2
/Shading
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.811765 .564706 0 ]
/C1 [.811765 .564706 0 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.811765 .564706 0 ]
/C1 [.811765 .564706 0 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.811765 .564706 0 ]
/C1 [.941176 .87451 .721569 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.941176 .87451 .721569 ]
/C1 [1 .701961 0 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 .701961 0 ]
/C1 [1 .701961 0 ]
/N 1 
>>
]
/Bounds [.06 .3856 .808 .94 ]
/Encode [0 1 0 1 0 1 0 1 0 1 ]
>>
>>>> matrix makepattern grestore setpattern
}if
level3{
ef
}if
165.854 194.74 mo
165.255 195.244 164.816 195.947 164.688 196.722 cv
164.127 200.09 li
163.998 200.864 164.202 201.566 164.635 202.071 cv
174.375 202.071 li
175.9 202.071 177.067 201.045 176.968 199.79 cv
176.748 197.021 li
176.649 195.767 175.319 194.74 173.794 194.74 cv
165.854 194.74 li
cp
0 0 0 rgb
ef
250.821 193.947 mo
246.47 193.947 li
245.825 193.947 244.96 195.195 244.546 196.722 cv
243.634 200.09 li
243.22 201.615 243.409 202.863 244.054 202.863 cv
248.405 202.863 li
249.05 202.863 249.915 201.615 250.328 200.09 cv
251.241 196.722 li
251.655 195.195 251.466 193.947 250.821 193.947 cv
cp
level3{
gsave
[-.895199 8.91602 -3.7658 1.06322e-7 247.886 193.948 ]ct
<<
/PatternType 2
/Shading
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.811765 .564706 0 ]
/C1 [.811765 .564706 0 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.811765 .564706 0 ]
/C1 [.811765 .564706 0 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.811765 .564706 0 ]
/C1 [.941176 .87451 .721569 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.941176 .87451 .721569 ]
/C1 [1 .701961 0 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 .701961 0 ]
/C1 [1 .701961 0 ]
/N 1 
>>
]
/Bounds [.06 .3856 .808 .94 ]
/Encode [0 1 0 1 0 1 0 1 0 1 ]
>>
>>>> matrix makepattern grestore setpattern
}if
level3{
ef
}if
245.438 194.74 mo
245.083 195.244 244.756 195.947 244.546 196.722 cv
243.634 200.09 li
243.424 200.864 243.369 201.566 243.45 202.071 cv
245.247 202.071 li
245.892 202.071 246.485 201.045 246.565 199.79 cv
246.743 197.021 li
246.824 195.766 246.362 194.74 245.719 194.74 cv
245.438 194.74 li
cp
0 0 0 rgb
ef
179.515 174.733 mo
179.521 170.325 176.381 166.815 172.5 166.897 cv
168.62 166.979 165.467 170.622 165.46 175.032 cv
165.453 179.44 168.595 182.95 172.475 182.868 cv
176.355 182.784 179.508 179.144 179.515 174.733 cv
cp
.121569 .101961 .0901961 rgb
ef
179.523 174.538 mo
179.531 170.628 176.777 167.516 173.373 167.589 cv
169.97 167.662 167.203 170.893 167.195 174.803 cv
167.188 178.712 169.941 181.824 173.346 181.751 cv
176.749 181.679 179.516 178.448 179.523 174.538 cv
cp
ef
171.903 167.565 mo
168.449 167.748 165.703 171.073 165.771 174.991 cv
165.837 178.908 168.692 181.938 172.146 181.756 cv
175.599 181.573 178.345 178.247 178.278 174.33 cv
178.211 170.412 175.356 167.383 171.903 167.565 cv
cp
ef
171.642 181.328 mo
172.675 181.104 173.853 179.943 173.656 181.086 cv
175.387 180.994 176.739 178.468 177.415 177.39 cv
177.466 177.08 177.502 176.832 177.48 176.52 cv
177.01 174.656 171.977 174.477 170.41 175.698 cv
167.753 176.18 169.826 172.028 170.915 174.527 cv
171.158 174.773 173.461 174.633 173.842 174.517 cv
175.782 173.664 179.385 175.896 177.471 172.231 cv
176.013 172.045 177.236 171.127 176.845 170.602 cv
176.654 169.275 175.184 169.094 173.923 168.649 cv
172.116 167.524 169.506 168.903 168.503 170.456 cv
165.917 173.218 166.588 181.193 171.642 181.328 cv
cp
.694118 .694118 .698039 rgb
ef
171.518 180.605 mo
173.008 180.457 175.079 179.824 175.802 178.661 cv
176.646 178.159 177.461 176.303 176.145 175.875 cv
175.317 175.907 172.197 176.275 170.844 176.57 cv
170.594 176.625 170.103 176.237 170.023 176.321 cv
168.895 176.818 168.291 177.631 168.215 178.76 cv
168.189 179.138 168.632 179.241 168.697 179.375 cv
168.84 179.669 168.817 179.693 169.705 180.172 cv
170.282 180.483 170.855 180.672 171.518 180.605 cv
cp
1 1 1 rgb
ef
176.652 174.266 mo
177.188 173.849 177.619 172.463 176.618 172.305 cv
174.481 172.417 174.276 172.756 171.936 172.367 cv
169.542 171.971 171.97 171.318 172.187 171.063 cv
172.585 170.591 173.536 170.492 174.188 170.224 cv
176.416 169.308 172.694 169.204 172.858 168.938 cv
173.754 167.475 170.382 168.553 168.49 171.031 cv
167.75 172.001 167.608 173.421 167.479 174.633 cv
167.448 174.92 168.13 175 168.289 174.896 cv
168.88 174.509 170.693 172.687 171.669 173.515 cv
172.235 173.997 173.126 173.904 173.637 174.071 cv
174.875 174.189 175.406 174.195 176.652 174.266 cv
cp
.839216 .835294 .854902 rgb
ef
174.545 169.436 mo
173.839 169.686 172.736 169.534 172.035 169.847 cv
171.334 170.16 170.292 170.719 169.771 171.012 cv
169.457 171.188 169.879 172.744 170.636 172.704 cv
171.194 172.675 171.981 172.176 172.527 172.033 cv
173.422 171.799 174.359 171.648 175.297 171.579 cv
176.007 171.526 176.854 171.702 176.365 170.863 cv
176.203 170.586 175.859 170.208 175.53 170.16 cv
175.317 170.13 174.6 169.608 174.545 169.436 cv
cp
.447059 .439216 .435294 rgb
ef
174.468 170.801 mo
175.98 169.966 174.708 169.23 173.545 169.292 cv
171.678 169.391 170.423 170.287 169.429 171.257 cv
168.703 171.965 168.188 173.022 167.903 173.839 cv
167.824 174.065 167.901 174.123 168.132 174.11 cv
168.32 174.101 168.876 172.572 169.111 172.358 cv
169.814 171.72 170.851 170.561 171.71 170.191 cv
173.868 169.265 173.231 171.277 174.468 170.801 cv
cp
1 1 1 rgb
ef
171.696 180.669 mo
170.794 179.643 169.85 178.36 169.275 177.407 cv
169.103 177.121 168.918 176.188 169.496 176.534 cv
169.923 176.789 170.334 177.559 170.703 177.911 cv
171.309 178.488 171.982 179.008 172.691 179.455 cv
173.228 179.793 173.967 179.984 173.231 180.533 cv
172.989 180.715 172.561 180.912 172.282 180.819 cv
172.102 180.759 171.812 180.536 171.696 180.669 cv
cp
.447059 .439216 .435294 rgb
ef
168.323 175.902 mo
168.021 175.4 168.128 174.663 168.118 174.066 cv
168.113 173.773 168.194 173.719 167.896 173.734 cv
167.797 173.74 167.543 173.722 167.461 173.758 cv
167.077 173.925 167.112 175.044 167.144 175.492 cv
167.172 175.909 167.154 176.136 167.632 176.11 cv
167.866 176.099 168.199 176.286 168.323 175.902 cv
cp
.376471 .364706 .360784 rgb
ef
194.015 174.733 mo
194.021 170.325 190.881 166.815 187 166.897 cv
183.12 166.979 179.967 170.622 179.96 175.032 cv
179.953 179.44 183.095 182.95 186.975 182.868 cv
190.855 182.784 194.008 179.144 194.015 174.733 cv
cp
.121569 .101961 .0901961 rgb
ef
194.023 174.538 mo
194.031 170.628 191.277 167.516 187.873 167.589 cv
184.47 167.662 181.703 170.893 181.695 174.803 cv
181.688 178.712 184.441 181.824 187.846 181.751 cv
191.249 181.679 194.016 178.448 194.023 174.538 cv
cp
ef
186.403 167.565 mo
182.949 167.748 180.203 171.073 180.271 174.991 cv
180.337 178.908 183.192 181.938 186.646 181.756 cv
190.099 181.573 192.845 178.247 192.778 174.33 cv
192.711 170.412 189.856 167.383 186.403 167.565 cv
cp
ef
186.142 181.328 mo
187.175 181.104 188.352 179.943 188.156 181.086 cv
189.886 180.994 191.239 178.468 191.915 177.39 cv
191.966 177.08 192.002 176.832 191.98 176.52 cv
191.51 174.656 186.477 174.477 184.909 175.698 cv
182.252 176.18 184.326 172.028 185.414 174.527 cv
185.658 174.773 187.96 174.633 188.341 174.517 cv
190.282 173.664 193.885 175.896 191.971 172.231 cv
190.512 172.045 191.735 171.127 191.345 170.602 cv
191.154 169.275 189.683 169.094 188.423 168.649 cv
186.616 167.524 184.006 168.903 183.003 170.456 cv
180.417 173.218 181.088 181.193 186.142 181.328 cv
cp
.694118 .694118 .698039 rgb
ef
186.018 180.605 mo
187.508 180.457 189.579 179.824 190.301 178.661 cv
191.146 178.159 191.961 176.303 190.645 175.875 cv
189.817 175.907 186.697 176.275 185.344 176.57 cv
185.093 176.625 184.602 176.237 184.523 176.321 cv
183.395 176.818 182.791 177.631 182.715 178.76 cv
182.689 179.138 183.132 179.241 183.196 179.375 cv
183.34 179.669 183.317 179.693 184.204 180.172 cv
184.781 180.483 185.355 180.672 186.018 180.605 cv
cp
1 1 1 rgb
ef
191.151 174.266 mo
191.688 173.849 192.118 172.463 191.118 172.305 cv
188.981 172.417 188.776 172.756 186.436 172.367 cv
184.042 171.971 186.469 171.318 186.686 171.063 cv
187.085 170.591 188.036 170.492 188.688 170.224 cv
190.916 169.308 187.194 169.204 187.358 168.938 cv
188.254 167.475 184.882 168.553 182.99 171.031 cv
182.25 172.001 182.107 173.421 181.979 174.633 cv
181.947 174.92 182.629 175 182.788 174.896 cv
183.379 174.509 185.193 172.687 186.168 173.515 cv
186.735 173.997 187.626 173.904 188.137 174.071 cv
189.375 174.189 189.905 174.195 191.151 174.266 cv
cp
.839216 .835294 .854902 rgb
ef
189.045 169.436 mo
188.339 169.686 187.236 169.534 186.535 169.847 cv
185.834 170.16 184.792 170.719 184.271 171.012 cv
183.957 171.188 184.379 172.744 185.136 172.704 cv
185.694 172.675 186.481 172.176 187.027 172.033 cv
187.922 171.799 188.859 171.648 189.797 171.579 cv
190.507 171.526 191.354 171.702 190.864 170.863 cv
190.703 170.586 190.359 170.208 190.029 170.16 cv
189.817 170.13 189.1 169.608 189.045 169.436 cv
cp
.447059 .439216 .435294 rgb
ef
188.968 170.801 mo
190.479 169.966 189.208 169.23 188.045 169.292 cv
186.178 169.391 184.923 170.287 183.929 171.257 cv
183.202 171.965 182.687 173.022 182.402 173.839 cv
182.324 174.065 182.4 174.123 182.632 174.11 cv
182.82 174.101 183.376 172.572 183.611 172.358 cv
184.314 171.72 185.35 170.561 186.21 170.191 cv
188.367 169.265 187.731 171.277 188.968 170.801 cv
cp
1 1 1 rgb
ef
186.195 180.669 mo
185.294 179.643 184.35 178.36 183.774 177.407 cv
183.603 177.121 183.418 176.188 183.996 176.534 cv
184.422 176.789 184.833 177.559 185.203 177.911 cv
185.809 178.488 186.482 179.008 187.19 179.455 cv
187.727 179.793 188.467 179.984 187.731 180.533 cv
187.488 180.715 187.061 180.912 186.782 180.819 cv
186.602 180.759 186.311 180.536 186.195 180.669 cv
cp
.447059 .439216 .435294 rgb
ef
182.823 175.902 mo
182.52 175.4 182.628 174.663 182.618 174.066 cv
182.612 173.773 182.694 173.719 182.396 173.734 cv
182.296 173.74 182.043 173.722 181.961 173.758 cv
181.576 173.925 181.612 175.044 181.644 175.492 cv
181.672 175.909 181.654 176.136 182.132 176.11 cv
182.366 176.099 182.699 176.286 182.823 175.902 cv
cp
.376471 .364706 .360784 rgb
ef
262.177 174.733 mo
262.339 170.325 260.935 166.815 259.041 166.897 cv
257.146 166.979 255.479 170.622 255.318 175.032 cv
255.156 179.44 256.561 182.95 258.454 182.868 cv
260.348 182.784 262.015 179.144 262.177 174.733 cv
cp
.121569 .101961 .0901961 rgb
ef
262.188 174.538 mo
262.332 170.628 261.103 167.516 259.441 167.589 cv
257.78 167.662 256.316 170.893 256.172 174.803 cv
256.027 178.712 257.258 181.824 258.919 181.751 cv
260.579 181.679 262.044 178.448 262.188 174.538 cv
cp
ef
258.726 167.565 mo
257.036 167.748 255.579 171.073 255.471 174.991 cv
255.362 178.908 256.645 181.938 258.334 181.756 cv
260.022 181.573 261.48 178.247 261.589 174.33 cv
261.697 170.412 260.415 167.383 258.726 167.565 cv
cp
ef
258.104 181.328 mo
258.615 181.104 259.23 179.943 259.094 181.086 cv
259.94 180.994 260.69 178.468 261.059 177.39 cv
261.378 174.832 258.879 175.291 256.587 174.84 cv
259.013 174.498 261.888 175.635 261.271 172.231 cv
260.566 172.045 261.196 171.127 261.024 170.602 cv
260.979 169.275 260.269 169.094 259.671 168.649 cv
258.831 167.524 257.51 168.903 256.965 170.456 cv
255.605 173.218 255.646 181.193 258.104 181.328 cv
cp
.694118 .694118 .698039 rgb
ef
258.068 180.605 mo
258.801 180.457 259.832 179.824 260.227 178.661 cv
260.656 178.159 261.119 176.303 260.494 175.875 cv
259.494 176.988 256.979 177.412 256.281 176.887 cv
256.004 177.346 256.845 179.762 257.201 180.172 cv
257.471 180.483 257.744 180.672 258.068 180.605 cv
cp
1 1 1 rgb
ef
260.799 174.266 mo
261.074 173.849 261.335 172.463 260.853 172.305 cv
259.808 172.417 259.695 172.756 258.568 172.367 cv
257.417 171.971 258.623 171.318 258.738 171.063 cv
258.949 170.591 259.416 170.492 259.744 170.224 cv
260.862 169.308 259.053 169.204 259.142 168.938 cv
259.631 167.475 257.949 168.553 256.938 171.031 cv
256.542 172.001 256.422 173.421 256.315 174.633 cv
256.29 174.92 256.619 175 256.701 174.896 cv
257.003 174.509 257.952 172.687 258.397 173.515 cv
258.656 173.997 259.094 173.904 259.336 174.071 cv
259.936 174.189 260.194 174.195 260.799 174.266 cv
cp
.839216 .835294 .854902 rgb
ef
259.945 169.436 mo
259.492 169.686 259.021 169.534 258.543 169.847 cv
258.064 170.16 257.313 170.719 256.93 171.012 cv
256.7 171.188 256.226 172.744 256.611 172.704 cv
256.896 172.675 257.498 172.176 257.827 172.033 cv
258.365 171.799 258.888 171.648 259.375 171.579 cv
259.744 171.526 260.08 171.702 260.208 170.863 cv
260.251 170.586 260.248 170.208 260.108 170.16 cv
260.019 170.13 259.896 169.608 259.945 169.436 cv
cp
.447059 .439216 .435294 rgb
ef
258.125 180.736 mo
257.553 180.109 256.927 179.325 256.523 178.743 cv
256.402 178.568 256.191 177.998 256.519 178.21 cv
256.759 178.365 257.059 178.836 257.284 179.051 cv
257.654 179.404 258.05 179.722 258.452 179.994 cv
258.758 180.201 259.143 180.318 258.855 180.653 cv
258.761 180.765 258.577 180.885 258.43 180.828 cv
258.334 180.792 258.164 180.655 258.125 180.736 cv
cp
ef
256.682 175.902 mo
256.552 175.4 256.631 174.663 256.647 174.066 cv
256.655 173.773 256.697 173.719 256.551 173.734 cv
256.339 173.758 li
256.146 173.925 256.122 175.044 256.121 175.492 cv
256.12 175.909 256.104 176.136 256.337 176.11 cv
256.452 176.099 256.607 176.286 256.682 175.902 cv
cp
.376471 .364706 .360784 rgb
ef
255.037 174.604 mo
255.21 170.195 253.715 166.687 251.698 166.769 cv
249.683 166.851 247.908 170.493 247.736 174.902 cv
247.563 179.312 249.059 182.82 251.074 182.738 cv
253.09 182.655 254.865 179.014 255.037 174.604 cv
cp
.121569 .101961 .0901961 rgb
ef
255.049 174.408 mo
255.203 170.498 253.894 167.386 252.125 167.459 cv
250.357 167.532 248.799 170.763 248.645 174.673 cv
248.491 178.582 249.801 181.694 251.568 181.621 cv
253.337 181.549 254.896 178.318 255.049 174.408 cv
cp
ef
251.363 167.437 mo
249.565 167.619 248.014 170.944 247.898 174.862 cv
247.783 178.779 249.147 181.809 250.946 181.627 cv
252.744 181.444 254.296 178.118 254.411 174.201 cv
254.526 170.283 253.161 167.254 251.363 167.437 cv
cp
ef
250.701 181.199 mo
251.246 180.974 251.9 179.814 251.755 180.956 cv
252.656 180.865 253.455 178.339 253.847 177.26 cv
254.187 174.703 251.526 175.161 249.087 174.711 cv
251.669 174.369 254.729 175.506 254.073 172.103 cv
253.323 171.916 253.993 170.998 253.811 170.472 cv
253.763 169.146 253.006 168.965 252.369 168.52 cv
251.476 167.395 250.069 168.773 249.489 170.327 cv
248.042 173.088 248.085 181.064 250.701 181.199 cv
cp
.694118 .694118 .698039 rgb
ef
250.664 180.477 mo
251.443 180.328 252.542 179.694 252.961 178.531 cv
253.418 178.03 253.912 176.174 253.245 175.745 cv
252.181 176.858 249.505 177.283 248.761 176.757 cv
248.467 177.217 249.361 179.632 249.74 180.043 cv
250.028 180.354 250.318 180.542 250.664 180.477 cv
cp
1 1 1 rgb
ef
253.57 174.137 mo
253.864 173.72 254.141 172.333 253.628 172.175 cv
252.516 172.288 252.396 172.627 251.196 172.238 cv
249.971 171.842 251.254 171.189 251.376 170.934 cv
251.602 170.462 252.099 170.362 252.447 170.095 cv
253.638 169.178 251.711 169.075 251.807 168.808 cv
252.327 167.345 250.537 168.423 249.461 170.902 cv
249.039 171.872 248.912 173.291 248.798 174.504 cv
248.771 174.79 249.122 174.87 249.208 174.767 cv
249.529 174.38 250.54 172.557 251.014 173.386 cv
251.29 173.867 251.755 173.774 252.014 173.941 cv
252.651 174.061 252.927 174.066 253.57 174.137 cv
cp
.839216 .835294 .854902 rgb
ef
252.662 169.307 mo
252.18 169.556 251.679 169.404 251.169 169.718 cv
250.659 170.03 249.858 170.59 249.452 170.883 cv
249.207 171.059 248.702 172.615 249.113 172.575 cv
249.416 172.545 250.057 172.047 250.406 171.903 cv
250.979 171.669 251.536 171.52 252.055 171.45 cv
252.447 171.397 252.805 171.573 252.941 170.734 cv
252.986 170.457 252.984 170.078 252.836 170.031 cv
252.739 170.001 252.61 169.479 252.662 169.307 cv
cp
.447059 .439216 .435294 rgb
ef
250.724 180.607 mo
250.115 179.979 249.448 179.196 249.02 178.614 cv
248.891 178.439 248.666 177.868 249.014 178.08 cv
249.27 178.236 249.589 178.707 249.829 178.922 cv
250.223 179.274 250.644 179.592 251.073 179.865 cv
251.397 180.072 251.808 180.188 251.502 180.524 cv
251.4 180.636 251.206 180.756 251.049 180.699 cv
250.947 180.662 250.766 180.526 250.724 180.607 cv
cp
ef
249.188 175.773 mo
249.05 175.271 249.134 174.533 249.151 173.938 cv
249.16 173.644 249.204 173.59 249.049 173.605 cv
248.822 173.628 li
248.617 173.796 248.592 174.914 248.591 175.363 cv
248.59 175.78 248.572 176.007 248.821 175.981 cv
248.943 175.969 249.108 176.157 249.188 175.773 cv
cp
.376471 .364706 .360784 rgb
ef
200.211 174.805 mo
200.211 174.805 199.982 174.537 198.776 175.172 cv
197.57 175.808 198.177 173.814 200.18 173.26 cv
202.184 172.705 204.424 173.025 204.424 173.025 cv
204.424 173.025 199.708 173.93 200.881 174.366 cv
202.054 174.802 202.852 176.819 206.66 177.043 cv
210.468 177.266 225.899 178.223 232.306 177.962 cv
238.712 177.701 240.109 178.571 241.98 177.719 cv
243.852 176.867 244.09 175.722 244.697 176.206 cv
245.304 176.69 242.501 178.301 241.272 178.995 cv
240.043 179.689 235.327 184.096 231.883 185.836 cv
228.438 187.576 222.667 189.01 217.752 187.261 cv
212.837 185.512 210.443 183.914 207.844 181.422 cv
205.246 178.93 203.249 177.172 201.907 176.167 cv
200.608 175.156 200.211 174.805 200.211 174.805 cv
cp
.121569 .101961 .0862745 rgb
ef
207.788 180.046 mo
207.788 180.046 210.366 180.521 213.574 180.397 cv
216.783 180.272 229.733 179.756 231.29 179.618 cv
232.849 179.48 234.103 179.114 233.117 178.885 cv
232.132 178.654 221.979 178.336 218.222 178.216 cv
214.465 178.095 208.952 178.394 207.573 178.143 cv
206.194 177.893 205.405 177.907 206.238 178.826 cv
207.049 179.749 207.788 180.046 207.788 180.046 cv
cp
level3{
gsave
[27.0046 -.561695 -.736117 -20.6059 206.198 179.282 ]ct
<<
/PatternType 2
/Shading
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.513726 .509804 .501961 ]
/C1 [.513726 .509804 .501961 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.513726 .509804 .501961 ]
/C1 [.513726 .509804 .501961 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.513726 .509804 .501961 ]
/C1 [1 1 1 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 1 1 ]
/C1 [.866667 .866667 .866667 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.866667 .866667 .866667 ]
/C1 [.866667 .866667 .866667 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.866667 .866667 .866667 ]
/C1 [.866667 .866667 .866667 ]
/N 1 
>>
]
/Bounds [.03 .1616 .5282 .8384 .97 ]
/Encode [0 1 0 1 0 1 0 1 0 1 0 1 ]
>>
>>>> matrix makepattern grestore setpattern
}if
level3{
ef
}if
214.961 185.297 mo
214.961 185.297 220.48 185.635 223.587 185.333 cv
226.691 185.03 230.12 184.581 231.238 184.085 cv
232.356 183.588 233.068 183.64 232.898 184.124 cv
232.729 184.607 231.212 185.819 229.379 186.402 cv
227.545 186.985 223.809 187.872 220.798 187.272 cv
217.785 186.701 214.961 185.297 214.961 185.297 cv
cp
level3{
gsave
[17.9957 -.374309 -.490543 -13.7316 215.096 185.869 ]ct
<<
/PatternType 2
/Shading
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.513726 .509804 .501961 ]
/C1 [.513726 .509804 .501961 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.513726 .509804 .501961 ]
/C1 [.513726 .509804 .501961 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.513726 .509804 .501961 ]
/C1 [1 1 1 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 1 1 ]
/C1 [.866667 .866667 .866667 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.866667 .866667 .866667 ]
/C1 [.866667 .866667 .866667 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.866667 .866667 .866667 ]
/C1 [.866667 .866667 .866667 ]
/N 1 
>>
]
/Bounds [.06 .2272 .5264 .7728 .94 ]
/Encode [0 1 0 1 0 1 0 1 0 1 0 1 ]
>>
>>>> matrix makepattern grestore setpattern
}if
level3{
ef
}if
217.715 112.841 mo
208.539 102.38 197.056 99.0794 185.504 99.0794 cv
167.616 99.0794 149.559 106.986 139.606 108.464 cv
139.604 108.461 139.601 108.459 139.599 108.456 cv
138.856 107.607 138.209 106.583 137.659 105.383 cv
136.845 103.605 136.245 101.439 135.865 98.8711 cv
135.203 90.2852 li
134.602 82.4873 li
134.602 82.4869 134.602 82.4865 134.602 82.4861 cv
134.751 79.9746 135.186 77.6196 136.408 75.4157 cv
136.404 75.424 136.4 75.4321 136.396 75.4404 cv
138.045 73.707 li
140.125 71.3574 144.573 70.1509 149.168 68.6939 cv
158.816 65.6343 187.785 63.9204 196.19 63.5825 cv
199.488 63.4497 205.83 56.6714 206.658 54.3853 cv
206.491 54.5875 206.309 54.7936 206.116 55.0011 cv
207.503 53.255 208.449 51.6043 208.395 50.9985 cv
208.451 51.6206 207.614 52.8813 206.877 54.1177 cv
207.388 56.3247 207.654 62.1636 207.654 62.1636 cv
207.809 62.162 207.962 62.1612 208.119 62.1612 cv
221.072 62.1612 242.382 67.4961 251.653 73.5029 cv
252.223 74.2256 256.311 94.4336 257.865 104.211 cv
258.865 104.541 259.895 104.898 260.957 105.284 cv
261.059 102.087 255.495 73.7986 254.303 70.0552 cv
254.381 70.1117 254.457 70.1682 254.533 70.2251 cv
255.245 71.1284 261.452 102.468 261.345 105.843 cv
260.187 105.423 259.068 105.036 257.985 104.681 cv
257.641 104.568 257.3 104.458 256.963 104.352 cv
251.048 102.487 246.222 101.62 242.002 101.62 cv
232.707 101.62 226.344 105.826 217.715 112.841 cv
224.204 60.0932 mo
219.39 59.4195 214.575 59.0558 210.105 59.0513 cv
210.105 59.0513 208.479 50.8503 208.388 50.8503 cv
208.388 50.8503 li
208.388 50.8503 208.388 50.8503 208.388 50.8503 cv
208.48 50.8503 210.105 59.0503 210.105 59.0503 cv
210.68 59.0092 211.333 58.9888 212.054 58.9888 cv
215.129 58.9888 219.433 59.3605 224.204 60.0932 cv
level3{
gsave
clp
[-121.195 25.4242 33.177 122.8 257.007 73.7021 ]ct
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.639216 .713726 .776471 ]
/C1 [.639216 .713726 .776471 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.639216 .713726 .776471 ]
/C1 [1 1 1 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 1 1 ]
/C1 [1 1 1 ]
/N 1 
>>
]
/Bounds [.12 .88 ]
/Encode [0 1 0 1 0 1 ]
>>
>>shfill grestore
}if
np
236.22 94.8945 mo
237.684 96.9922 238.336 99.4414 238.246 101.866 cv
231.59 102.762 226.26 106.074 219.825 111.149 cv
218.942 110.477 218.147 109.656 217.475 108.692 cv
213.885 103.549 215.17 96.2871 220.345 92.4766 cv
225.52 88.668 232.629 89.75 236.22 94.8945 cv
cp
.156863 .0862745 .427451 rgb
ef
235.402 94.9658 mo
236.967 97.0625 237.737 99.5244 237.755 101.938 cv
231.769 102.858 226.825 105.761 221.106 110.151 cv
220.357 109.552 219.667 108.845 219.059 108.029 cv
215.395 103.12 216.082 96.2139 220.595 92.6074 cv
225.107 89 231.738 90.0566 235.402 94.9658 cv
cp
level3{
gsave
[6.0695 19.8524 19.5484 -4.81614 223.572 89.5361 ]ct
<<
/PatternType 2
/Shading
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.286275 .337255 .466667 ]
/C1 [.286275 .337255 .466667 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.286275 .337255 .466667 ]
/C1 [.458824 .768627 .937255 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.458824 .768627 .937255 ]
/C1 [.458824 .768627 .937255 ]
/N 1 
>>
]
/Bounds [.04 .96 ]
/Encode [0 1 0 1 0 1 ]
>>
>>>> matrix makepattern grestore setpattern
}if
level3{
ef
}if
224.297 107.811 mo
224.34 107.677 224.353 107.587 224.325 107.561 cv
224.159 107.488 223.815 107.893 223.429 108.425 cv
223.123 108.644 222.816 108.866 222.507 109.095 cv
223.067 108.21 223.715 107.224 223.619 107.108 cv
223.196 106.859 221.064 109.841 220.693 109.7 cv
220.458 109.547 223.117 106.801 222.969 106.571 cv
222.577 106.271 220.081 108.932 219.728 108.746 cv
219.512 108.563 222.505 106.204 222.384 105.958 cv
222.029 105.613 219.209 107.91 218.878 107.682 cv
218.685 107.474 221.965 105.538 221.875 105.28 cv
221.562 104.895 218.462 106.792 218.16 106.523 cv
217.991 106.295 221.507 104.812 221.448 104.546 cv
221.183 104.125 217.853 105.594 217.583 105.291 cv
217.442 105.043 221.138 104.037 221.111 103.769 cv
220.896 103.32 217.39 104.336 217.156 104.003 cv
217.046 103.741 220.863 103.227 220.87 102.959 cv
220.71 102.49 217.079 103.037 216.888 102.68 cv
216.81 102.407 220.688 102.394 220.727 102.132 cv
220.624 101.648 216.928 101.719 216.78 101.341 cv
216.734 101.063 220.613 101.552 220.685 101.299 cv
220.642 100.81 216.938 100.401 216.836 100.011 cv
216.825 99.7305 220.643 100.713 220.745 100.472 cv
220.761 99.9854 217.108 99.1045 217.055 98.707 cv
217.077 98.4307 220.773 99.8906 220.905 99.666 cv
220.981 99.1895 217.438 97.8506 217.432 97.4521 cv
217.488 97.1826 221.006 99.0967 221.164 98.8936 cv
221.298 98.4336 217.92 96.6582 217.963 96.2646 cv
218.052 96.0078 221.334 98.3467 221.518 98.166 cv
221.708 97.7305 218.548 95.5469 218.639 95.165 cv
218.759 94.9229 221.755 97.6494 221.96 97.4961 cv
222.202 97.0918 219.31 94.5342 219.447 94.1689 cv
219.598 93.9453 222.26 97.0176 222.483 96.8936 cv
222.775 96.5273 220.196 93.6338 220.379 93.2939 cv
220.556 93.0928 222.842 96.4609 223.08 96.3672 cv
223.417 96.0449 221.191 92.8623 221.415 92.5508 cv
221.617 92.376 223.491 95.9873 223.74 95.9268 cv
224.117 95.6523 222.281 92.2314 222.543 91.9531 cv
222.767 91.8086 224.198 95.6064 224.455 95.5781 cv
224.865 95.3564 223.447 91.752 223.743 91.5117 cv
223.983 91.3975 224.951 95.3213 225.212 95.3271 cv
225.649 95.1621 224.672 91.4297 224.996 91.2305 cv
225.251 91.1494 225.739 95.1387 225.999 95.1777 cv
226.456 95.0713 225.936 91.2705 226.283 91.1172 cv
226.548 91.0693 226.55 95.0596 226.805 95.1318 cv
227.274 95.0859 227.217 91.2764 227.585 91.1709 cv
227.854 91.1582 227.369 95.0869 227.615 95.1914 cv
228.091 95.2061 228.498 91.4492 228.878 91.3916 cv
229.149 91.4141 228.185 95.2197 228.418 95.3545 cv
228.892 95.4307 229.758 91.7842 230.145 91.7764 cv
230.413 91.834 228.984 95.4561 229.2 95.6182 cv
229.664 95.7559 230.976 92.2764 231.363 92.3193 cv
231.624 92.4102 229.754 95.793 229.951 95.9795 cv
230.397 96.1748 232.133 92.918 232.516 93.0107 cv
232.766 93.1338 230.482 96.2217 230.657 96.4316 cv
231.079 96.6826 233.212 93.6992 233.583 93.8398 cv
233.817 93.9932 231.159 96.7393 231.307 96.9697 cv
231.699 97.2695 234.195 94.6084 234.549 94.7949 cv
234.765 94.9766 231.771 97.3359 231.892 97.582 cv
232.247 97.9268 235.066 95.6299 235.397 95.8584 cv
235.591 96.0664 232.312 98.0029 232.401 98.2598 cv
232.714 98.6465 235.813 96.748 236.116 97.0166 cv
236.285 97.2451 232.769 98.7295 232.828 98.9941 cv
233.094 99.415 236.424 97.9463 236.693 98.25 cv
236.834 98.4971 233.139 99.5029 233.165 99.7715 cv
233.379 100.221 236.887 99.2051 237.12 99.5381 cv
237.229 99.7998 233.412 100.313 233.406 100.581 cv
233.565 101.051 237.196 100.503 237.388 100.861 cv
237.467 101.133 233.588 101.146 233.55 101.408 cv
233.634 101.809 236.186 101.829 237.143 102.039 cv
236.778 102.104 236.419 102.176 236.062 102.256 cv
234.965 102.198 233.633 102.095 233.592 102.242 cv
233.604 102.392 233.96 102.533 234.449 102.67 cv
230.94 103.696 227.702 105.448 224.297 107.811 cv
cp
level3{
gsave
[9.75033 -14.5198 -15.1933 -10.667 222.017 107.349 ]ct
<<
/PatternType 2
/Shading
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.192157 .282353 .439216 ]
/C1 [.647059 .894118 .937255 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>>> matrix makepattern grestore setpattern
}if
level3{
ef
}if
231.976 97.7041 mo
233.172 99.3057 233.569 101.273 233.224 103.063 cv
230.412 104.036 227.746 105.482 224.99 107.338 cv
224.041 106.9 223.173 106.213 222.484 105.291 cv
220.357 102.439 220.757 98.4287 223.377 96.335 cv
225.997 94.2412 229.848 94.8535 231.976 97.7041 cv
cp
.0392157 .0392157 .0470588 rgb
ef
222.675 97.6787 mo
223.277 97.0264 224.091 96.9453 224.492 97.4971 cv
224.894 98.0479 224.73 99.0234 224.127 99.6748 cv
223.524 100.327 222.71 100.409 222.31 99.8574 cv
221.907 99.3066 222.071 98.3311 222.675 97.6787 cv
cp
.976471 .984314 .811765 rgb
ef
222.904 97.9932 mo
223.316 97.5469 223.874 97.4912 224.147 97.8682 cv
224.422 98.2471 224.311 98.9141 223.897 99.3604 cv
223.485 99.8066 222.928 99.8623 222.654 99.4854 cv
222.38 99.1074 222.491 98.4404 222.904 97.9932 cv
cp
1 1 1 rgb
ef
180.626 90.4434 mo
182.494 93.1211 183.183 96.3105 182.802 99.3867 cv
174.28 99.5088 165.747 101.166 158.307 103.416 cv
156.102 97.9844 157.855 91.4199 162.859 87.7373 cv
168.65 83.4736 176.606 84.6855 180.626 90.4434 cv
cp
.156863 .0862745 .427451 rgb
ef
179.711 90.5225 mo
181.694 93.1797 182.537 96.3604 182.31 99.3916 cv
174.616 99.5557 166.933 100.958 160.067 102.902 cv
157.591 97.7031 158.744 91.3965 163.139 87.8838 cv
168.189 83.8457 175.609 85.0283 179.711 90.5225 cv
cp
level3{
gsave
[-14.599 -16.7943 -15.9395 13.5388 175.597 103.25 ]ct
<<
/PatternType 2
/Shading
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.458824 .768627 .937255 ]
/C1 [.458824 .768627 .937255 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.458824 .768627 .937255 ]
/C1 [.286275 .337255 .466667 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.286275 .337255 .466667 ]
/C1 [.286275 .337255 .466667 ]
/N 1 
>>
]
/Bounds [.321212 .854545 ]
/Encode [0 1 0 1 0 1 ]
>>
>>>> matrix makepattern grestore setpattern
}if
level3{
ef
}if
162.399 102.27 mo
163.284 101.818 164.125 101.383 164.094 101.245 cv
163.796 100.774 160.069 102.418 159.768 102.079 cv
159.61 101.802 163.746 100.675 163.717 100.375 cv
163.477 99.873 159.551 101.01 159.29 100.637 cv
159.167 100.344 163.438 99.7686 163.446 99.4688 cv
163.268 98.9443 159.204 99.5566 158.989 99.1553 cv
158.901 98.8516 163.242 98.8369 163.286 98.5439 cv
163.172 98.002 159.035 98.0811 158.869 97.6572 cv
158.818 97.3477 163.16 97.8936 163.239 97.6104 cv
163.19 97.0635 159.047 96.6055 158.933 96.1689 cv
158.919 95.8555 163.192 96.9541 163.307 96.6846 cv
163.324 96.1396 159.237 95.1553 159.177 94.71 cv
159.202 94.4004 163.339 96.0342 163.486 95.7832 cv
163.571 95.25 159.605 93.751 159.6 93.3057 cv
159.662 93.0049 163.599 95.1465 163.776 94.9189 cv
163.926 94.4043 160.145 92.417 160.193 91.9775 cv
160.293 91.6895 163.967 94.3066 164.172 94.1055 cv
164.385 93.6182 160.847 91.1729 160.949 90.7461 cv
161.084 90.4746 164.437 93.5264 164.666 93.3555 cv
164.938 92.9023 161.7 90.0391 161.854 89.6309 cv
162.022 89.3809 165.002 92.8193 165.252 92.6797 cv
165.579 92.2705 162.692 89.0313 162.896 88.6504 cv
163.095 88.4268 165.653 92.1963 165.92 92.0918 cv
166.297 91.7295 163.807 88.168 164.057 87.8203 cv
164.283 87.625 166.38 91.666 166.659 91.5977 cv
167.081 91.291 165.026 87.4629 165.318 87.1514 cv
165.568 86.9893 167.171 91.2402 167.459 91.208 cv
167.919 90.96 166.332 86.9258 166.662 86.6572 cv
166.932 86.5293 168.015 90.9209 168.307 90.9277 cv
168.795 90.7422 167.702 86.5645 168.065 86.3428 cv
168.35 86.251 168.896 90.7158 169.188 90.7598 cv
169.699 90.6406 169.115 86.3867 169.506 86.2158 cv
169.802 86.1621 169.803 90.6289 170.089 90.709 cv
170.614 90.6582 170.551 86.3936 170.961 86.2754 cv
171.264 86.2617 170.721 90.6582 170.996 90.7744 cv
171.527 90.792 171.983 86.5869 172.409 86.5225 cv
172.713 86.5479 171.633 90.8076 171.895 90.957 cv
172.424 91.043 173.394 86.9619 173.826 86.9531 cv
174.127 87.0176 172.528 91.0713 172.771 91.2529 cv
173.289 91.4063 174.757 87.5117 175.19 87.5605 cv
175.483 87.6621 173.39 91.4482 173.61 91.6582 cv
174.109 91.875 176.053 88.2305 176.48 88.333 cv
176.761 88.4717 174.205 91.9287 174.4 92.1641 cv
174.873 92.4434 177.26 89.1055 177.675 89.2627 cv
177.938 89.4346 174.962 92.5088 175.128 92.7646 cv
175.566 93.1006 178.359 90.1221 178.756 90.3311 cv
178.998 90.5342 175.647 93.1758 175.782 93.4502 cv
176.18 93.8379 179.335 91.2656 179.706 91.5225 cv
179.923 91.7539 176.252 93.9219 176.353 94.209 cv
176.703 94.6416 180.172 92.5176 180.51 92.8184 cv
180.699 93.0742 176.765 94.7344 176.83 95.0313 cv
177.127 95.502 180.854 93.8584 181.155 94.1973 cv
181.313 94.4746 177.177 95.6006 177.207 95.9014 cv
177.446 96.4033 181.373 95.2676 181.633 95.6396 cv
181.757 95.9316 177.484 96.5088 177.478 96.8076 cv
177.656 97.333 181.719 96.7207 181.934 97.1201 cv
182.021 97.4248 177.681 97.4404 177.638 97.7334 cv
177.752 98.2744 181.889 98.1953 182.055 98.6182 cv
182.104 98.9287 177.764 98.3828 177.685 98.667 cv
177.71 98.96 178.91 99.2266 180.037 99.4785 cv
179.448 99.5098 178.859 99.5469 178.271 99.5908 cv
177.898 99.54 177.644 99.5283 177.617 99.5908 cv
177.626 99.6396 li
172.382 100.075 167.22 101.027 162.399 102.27 cv
cp
level3{
gsave
[11.1373 -16.5853 -17.3545 -12.1844 165.759 103.242 ]ct
<<
/PatternType 2
/Shading
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.192157 .282353 .439216 ]
/C1 [.647059 .894118 .937255 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>>> matrix makepattern grestore setpattern
}if
level3{
ef
}if
175.876 93.5879 mo
177.234 95.4063 177.672 97.6465 177.254 99.6719 cv
173.053 100.042 168.909 100.739 164.954 101.647 cv
162.917 98.4941 163.449 94.2949 166.252 92.0547 cv
169.186 89.7109 173.494 90.3975 175.876 93.5879 cv
cp
.0392157 .0392157 .0470588 rgb
ef
165.254 93.4229 mo
165.959 92.6602 166.911 92.5645 167.38 93.209 cv
167.849 93.8535 167.657 94.9961 166.952 95.7578 cv
166.247 96.5205 165.295 96.6162 164.827 95.9707 cv
164.357 95.3271 164.549 94.1855 165.254 93.4229 cv
cp
.976471 .984314 .811765 rgb
ef
165.522 93.791 mo
166.005 93.2686 166.656 93.2031 166.977 93.6455 cv
167.297 94.0869 167.166 94.8672 166.684 95.3887 cv
166.201 95.9111 165.551 95.9766 165.229 95.5352 cv
164.909 95.0938 165.04 94.3135 165.522 93.791 cv
cp
1 1 1 rgb
ef
136.408 75.4157 mo
138.213 71.5275 144.705 67.0641 151.661 64.8579 cv
161.31 61.7983 190.277 60.0845 198.683 59.7466 cv
200.544 59.6715 204.025 57.2429 206.116 55.0011 cv
204.122 57.5108 201.218 60.2178 199.07 60.3042 cv
190.665 60.6431 161.697 62.3569 152.049 65.4165 cv
142.879 68.3247 138.496 71.6495 136.408 75.4157 cv
254.303 70.0552 mo
253.654 69.5817 252.951 69.1227 252.201 68.6786 cv
252.178 68.5943 252.154 68.5111 252.13 68.4267 cv
252.841 68.8298 253.515 69.2434 254.146 69.6665 cv
254.184 69.7142 254.237 69.8469 254.303 70.0552 cv
247.285 66.2253 mo
240.444 63.3097 231.743 61.2508 224.204 60.0932 cv
232.461 61.2486 240.714 63.3154 247.224 66.0464 cv
247.244 66.1064 247.265 66.1651 247.285 66.2253 cv
level3{
gsave
clp
[-136.771 9.56395 -9.56395 -136.771 265.163 65.1831 ]ct
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.403922 .282353 0 ]
/C1 [.403922 .282353 0 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.403922 .282353 0 ]
/C1 [.403922 .282353 0 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.403922 .282353 0 ]
/C1 [.470588 .435294 .360784 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.470588 .435294 .360784 ]
/C1 [.498039 .34902 0 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.498039 .34902 0 ]
/C1 [.498039 .34902 0 ]
/N 1 
>>
]
/Bounds [.1 .228 .628 .9 ]
/Encode [0 1 0 1 0 1 0 1 0 1 ]
>>
>>shfill grestore
}if
np
252.201 68.6786 mo
250.725 67.8031 249.068 66.9852 247.285 66.2253 cv
247.265 66.1651 247.244 66.1064 247.224 66.0464 cv
249.001 66.7919 250.648 67.5872 252.13 68.4267 cv
252.154 68.5111 252.178 68.5943 252.201 68.6786 cv
level3{
gsave
clp
[-136.771 9.56395 -9.56395 -136.771 265.163 65.1831 ]ct
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.45098 .392157 .25098 ]
/C1 [.45098 .392157 .25098 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.45098 .392157 .25098 ]
/C1 [.45098 .392157 .25098 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.45098 .392157 .25098 ]
/C1 [.486274 .466667 .431373 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.486274 .466667 .431373 ]
/C1 [.498039 .423529 .25098 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.498039 .423529 .25098 ]
/C1 [.498039 .423529 .25098 ]
/N 1 
>>
]
/Bounds [.1 .228 .628 .9 ]
/Encode [0 1 0 1 0 1 0 1 0 1 ]
>>
>>shfill grestore
}if
np
208.395 50.9985 mo
208.395 50.9985 li
208.383 50.8975 208.381 50.8504 208.388 50.8503 cv
208.381 50.8512 208.383 50.8983 208.395 50.9985 cv
208.395 50.9985 li
level3{
gsave
clp
[-136.771 9.56395 -9.56395 -136.771 265.163 65.1831 ]ct
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.403922 .282353 0 ]
/C1 [.403922 .282353 0 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.403922 .282353 0 ]
/C1 [.403922 .282353 0 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.403922 .282353 0 ]
/C1 [.470588 .435294 .360784 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.470588 .435294 .360784 ]
/C1 [.498039 .34902 0 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.498039 .34902 0 ]
/C1 [.498039 .34902 0 ]
/N 1 
>>
]
/Bounds [.1 .228 .628 .9 ]
/Encode [0 1 0 1 0 1 0 1 0 1 ]
>>
>>shfill grestore
}if
np
260.957 105.284 mo
259.895 104.898 258.865 104.541 257.865 104.211 cv
256.311 94.4336 252.223 74.2256 251.653 73.5029 cv
242.382 67.4961 221.072 62.1612 208.119 62.1612 cv
207.962 62.1612 207.809 62.162 207.654 62.1636 cv
207.654 62.1636 207.388 56.3247 206.877 54.1177 cv
207.614 52.8813 208.451 51.6206 208.395 50.9985 cv
208.395 50.9985 li
208.383 50.8983 208.381 50.8512 208.388 50.8503 cv
208.388 50.8503 li
208.479 50.8503 210.105 59.0513 210.105 59.0513 cv
214.575 59.0558 219.39 59.4195 224.204 60.0932 cv
231.743 61.2508 240.444 63.3097 247.285 66.2253 cv
249.068 66.9852 250.725 67.8031 252.201 68.6786 cv
252.951 69.1227 253.654 69.5817 254.303 70.0552 cv
255.495 73.7986 261.059 102.087 260.957 105.284 cv
136.396 75.4404 mo
136.4 75.4321 136.404 75.424 136.408 75.4157 cv
138.496 71.6495 142.879 68.3247 152.049 65.4165 cv
161.697 62.3569 190.665 60.6431 199.07 60.3042 cv
201.218 60.2178 204.122 57.5108 206.116 55.0011 cv
206.309 54.7936 206.491 54.5875 206.658 54.3853 cv
205.83 56.6714 199.488 63.4497 196.19 63.5825 cv
187.785 63.9204 158.816 65.6343 149.168 68.6939 cv
144.573 70.1509 140.125 71.3574 138.045 73.707 cv
136.396 75.4404 li
level3{
gsave
clp
[-121.195 25.4242 33.177 122.8 257.007 73.7021 ]ct
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.317647 .356863 .388235 ]
/C1 [.317647 .356863 .388235 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.317647 .356863 .388235 ]
/C1 [.498039 .498039 .498039 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.498039 .498039 .498039 ]
/C1 [.498039 .498039 .498039 ]
/N 1 
>>
]
/Bounds [.12 .88 ]
/Encode [0 1 0 1 0 1 ]
>>
>>shfill grestore
}if
np
153.244 50.6509 mo
153.244 50.6509 149.509 48.8159 143.958 49.4829 cv
138.408 50.1499 136.229 50.3169 136.27 56.1548 cv
136.31 61.9927 136.456 70.4155 137.641 75.001 cv
138.826 79.5879 138.494 83.7578 145.022 83.9238 cv
151.551 84.0908 155.61 82.4238 155.61 82.4238 cv
155.61 82.4238 158.691 79.9219 158.242 76.5029 cv
157.793 73.083 155.651 58.5728 155.035 55.8208 cv
154.419 53.0698 153.244 50.6509 153.244 50.6509 cv
cp
.301961 .286275 .282353 rgb
ef
148.812 49.4878 mo
147.439 49.3169 145.799 49.2622 143.958 49.4829 cv
138.408 50.1499 136.229 50.3169 136.27 56.1548 cv
136.31 61.9927 136.456 70.4155 137.641 75.001 cv
138.826 79.5879 138.494 83.7578 145.022 83.9238 cv
146.081 83.9521 147.075 83.9297 147.997 83.875 cv
147.364 83.6836 146.646 83.499 145.842 83.3398 cv
142.032 82.5898 142.572 82.1738 141.435 79.9219 cv
140.296 77.6689 138.76 62.3267 138.432 58.7397 cv
138.103 55.1538 139.219 51.6519 141.984 50.5679 cv
143.382 50.02 146.283 49.6851 148.812 49.4878 cv
cp
.121569 .101961 .0901961 rgb
ef
153.297 61.4917 mo
153.297 61.4917 148.314 61.1587 148.204 63.4937 cv
148.094 65.8286 149.244 73.084 149.244 73.084 cv
149.244 73.084 151.89 73.584 153.816 73 cv
155.744 72.416 155.65 70.5815 155.705 69.4136 cv
155.761 68.2476 153.297 61.4917 153.297 61.4917 cv
cp
.219608 .203922 .192157 rgb
ef
115.75 16.4604 mo
113.432 17.7749 li
113.432 20.0776 li
126.245 22.5444 li
126.245 22.5444 129.418 23.5317 130.639 24.5181 cv
131.859 25.5044 135.032 27.6421 135.032 27.6421 cv
149.602 46.1958 li
149.602 46.1958 152.116 49.1831 152.238 52.6362 cv
152.36 56.0894 151.483 67.7524 151.75 69.5737 cv
152.018 71.395 154.934 71.7261 155.036 69.5737 cv
155.659 52.1431 li
155.659 52.1431 155.101 47.8892 153.075 44.5796 cv
151.05 41.27 140.632 27.4312 137.969 24.9839 cv
135.306 22.5366 132.644 21.0015 129.981 20.3794 cv
121.62 18.1606 li
120.266 16.9536 li
115.75 16.4604 li
cp
.121569 .101961 .0901961 rgb
ef
138.984 56.5581 mo
147.742 63.4272 li
147.742 63.4272 147.468 62.2007 148.522 61.7095 cv
149.577 61.2192 142.611 50.9146 142.611 50.9146 cv
139.333 51.6138 138.44 53.5688 138.984 56.5581 cv
cp
.666667 .662745 .662745 rgb
ef
201.449 111.196 mo
201.033 111.778 li
205.791 112.514 li
224.761 113.485 li
224.449 114.09 li
225.704 114.357 li
226.905 113.998 li
235.735 114.036 li
243.121 119.022 li
249.448 120.428 li
249.448 120.428 248.771 120.898 250.497 121.322 cv
252.223 121.747 253.843 121.578 253.843 121.578 cv
253.843 121.578 255.643 121.696 255.853 120.857 cv
256.063 120.018 255.508 120.044 255.508 120.044 cv
244.475 117.746 li
239.025 113.788 li
244.037 112.733 li
244.192 112.375 li
243.198 111.994 li
201.449 111.196 li
cp
194.207 116.641 mo
183.032 118.058 li
164.852 118.653 li
149.179 115.267 160.56 124.403 166.224 121.964 cv
167.483 121.422 167.891 120.867 167.891 120.867 cv
185.756 119.981 li
187.528 118.793 li
197.606 117.421 li
212.237 117.635 li
212.862 117.097 li
226.654 116.796 li
226.913 116.236 li
225.972 115.812 li
181.609 115.016 li
181.612 115.799 li
183.966 116.244 li
194.207 116.641 li
cp
0 0 0 rgb
ef
161.16 119.716 mo
159.514 120.003 158.192 120.318 158.207 120.42 cv
158.223 120.522 159.57 120.372 161.216 120.085 cv
162.861 119.799 164.184 119.483 164.168 119.381 cv
164.152 119.278 162.806 119.429 161.16 119.716 cv
cp
1 1 1 rgb
ef
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 /2 /3 /4 /5 /6 /7 /8 /9 
/10 /11 /12 /13 /14 /15 /16 /17 /18 /19 
/20 /21 /22 /23 /24 /25 /26 /27 /28 /29 
/30 /31 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 14.0.0
%%For: (eraprint) ()
%%Title: (bus10.eps)
%%CreationDate: 3/31/2016 8:17 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6Bj9=_ZS;<+c?8553'.6sC+V"D8:k[2KS1TRaIZ(7C]b0e-FT>QkBqN'qcd(68sU7pkJ$,LK6rc$jAmqae[9VoK*R\@7Bb8+
%*EW+;=t?kn/%M?\npOR0A+0,n#7mDMp=dE3V/dP2(Mf<]Qb-)MJM/a5GMKLM!dlZg2_WJ1^!Z8@heWgYeUFtl(p9.(IlD\M=,g_b
%V,@*=mWSJWPq(TZo+^%Q[Y+&A::FNt&'c)g&hc?=d/-Qk^Dk$ociAN]caS8GmR=1i$h(Q/gLp$QOF@MNdm*Q\UCdnQH=](1]rd/T
%(jK5)b+Z^^%UVg9BtN+@[9KK0DZ?rg(&a@6$Pr9g-)cB+iQGR)\2,*6)P^'BpPjVp[^d76If$c$IXn#pGue+!+%p>FW,^3*aX0_6
%pc;S0M<<]cj-(Y"`M"NC??]pgU."j/.Otr-1Y'L[iHMclQ$h!*mV[o1\=s%K8q$b)]CH+`ecC>V#)N=EBV1i>)l#=MJ`f"(mR>KI
%bfZGG@h7'^Yb^p.$?Mq^'YuV,(t;rukEeL_0!cZ/95tf5,DU@9P!P`6T:P[_CSg4]7]S\6=HX(^qjm`gD"&I[jMl1"FPTdm[Wg,9
%&)Qt?,64TS/JcP$Wo%Q8"YRkSlJ2YRLCH$8>LkcI%$''e5lZ<-!`s$:'KPHff,&']NPF5(d]Vrtc$?pFd!nid%>$?V_RL<T;4.Y4
%J>DN7+`&/'>r]R%ee7ZoF6thcm:0YYPj0O4krmZ&XF;th*-Z^EC7*uSX[/jr:jq=&m&(Qrhjus(DE5$&`:.ce^IX"]oH0(H4gcT'
%qn;jK+;/MQ=8Req[9fof5Jta%eFc*2#[e/KBt&RCIl78!hk5gaF,@p/i;;h(][5nO_maQt(;E;qGIn[\j49lQEPC6jlJK=`OL4k>
%mF&hDd=dsb2hsWP9d#N*nq$VFJ'f.AbDjgCif'aBL4aY@r!KXV5N2W4q#>Wr#KdLga>>$2ep;hS]DZfO@K!"LCR%(?#3YS7%W&2t
%(mO4hh=aV,:\^ae^bW$]B6,rb(nCY"D>.4$h5^6_Y!ql"SgO435!/+T42Wl1T`%9.T6#+Lp7V/W-\aXk(nQs%qYdR7=]UVK)9<=X
%igkQm-b==q#Opb<\++4.g[,sk)WrK=Al8F/^[$n,]K6oF2$rP:4_B2lSW1DScfbT7IFRM44AmA$A0BJg4%E/Y["$L`a2_;gDUgT2
%#2auPg6?Sgjn:8;"Y)[)FD_O+XU\06i9RT$J!JMJ6&'nj`ZCg=;6%!@hthBjf#I)]:/.'9P]T6k(7*ILaAQ%<LDIk<A7CBCPc2)W
%MrB?+-^J.,nZb?;r[!F`TeKE<7JoB!eGj01DVob4.fa$2Q3p9`<+SX4WDQ6\]=KD:!)+/((1.ckO?f+.(@FYt`3LYo<8@nH<0s%)
%F\t9AK9:HgMX!`\!mcWd=L]oE(K-*$WDH1!W\18!csg8p%;$rBn&Z2-&K`Vu,YK[]i`E'XZ/!&^s0'OB(F<Ip.$2LN#P:kDi2;#5
%OFtsLp^)R$8:jH1%;J0Ld"ub/L;8)U@pX_Lnf"\6$8S!O++eAC7UZp1_DJ>_!&)]+grPD*Ldtkf77gI8W_k@J".Fj3"+q+n*i#6*
%M5tV7f3qmf`(U"R89bao;%b6J;G!l[RadLH"n2m8ab._+8m$p"E@%S`.TIm2V,jPt]!q`F^D^'s2699t\=13oeS5Gf%bhfH#Cmkk
%4:TafNRK/TgqEqVVJ.Wa_q&J)i#VnOW::d"Tbc7C>,>9%V)A2#CNUa0%+,*BX<'WXl.7.00RP:q@NC2$:SH::bjhAAE6>[24@X*`
%G;=kH..2cJjU8FD&T(t`-59ckTZ(k:M'eO56:&[=cseb2.MGHt6:jn&(9N).ob]@BCB5q.?`M5B5#k`8Z6[$"Z:)!OZ>`[6`BY2G
%(I\TDfhpg*Yo>L$ROi1Rn@<rTs/oC58S![#M.?p(iN`Tlpps#%">.3j-itr&S-F=7(Bjjt!;/ooM6XjV`W&H6KX,Q"!a-cT'808c
%!7g9)WsANn!Agh[*CsV%'qbphd"`1r6ickr"!Z$@V:OZF/3t#^9Rs-2E<u1_!'9-@Z%n;Bbd@rQ-O$/BJ/ZBlP<tp:!K^4j-l%X[
%5i3J2=qq70KJ?<00]YLNI%YC1:cSal^BTU!Ku#,VB#c-hKq&B5'g84M$s7BfW+?=oXT7aIJV&UW#?pBp9m)#q3j@.LYk1q_D?A<L
%nj=P!8E2k+qCkCrJSeQmUo4pPLl%U?i\DQo*TfAd_/"QPaKlN;@1dLf!18N(]"eQ56NX0=`C!r=@q6/Z)$fa$"8d*V"3+RN3@?+e
%,pA*i,Zt/Z-@RRlZ<qqI]eZ7G&00&96Q/88qGpQ(03-f866h3d/LE;t;[d$Qq'\GOWJ#;HU2\*1WCUV0/`Q,&rAPs'\Fd6Z[b,'1
%B[&"FnH!MBX!C`&F:#&^!/s?48;e*7:DXgN1db+^r%<XM-<I()J&<@k7b(ff!=&?N/ldm'8pFGA4KK)P-@h#1N?M^U#E0(e5_=C<
%+j@#$Fom-L^-t"b,s8:0SuND9^2bA7!7(Ed-OAtQ+mc=(fch^nY0*jSGXg=*"$VKndp1'K6B]1H!r5;@U`/3:.LD/tNtNlp77)S-
%kt"JJLYtH36KUUB3j]8/p/NDn<Ade`9G2R`9"a]MJ?VFLLo^#2aHAm$Ug8U.Vc`Hr8u-2*k2G?eq</T0^h,(3l!iS3*#?VNBee85
%2./LGO?[396UFm3+$eu*[]L3%WY!3:mLg*2!+#]U]1/<a,&+fbogmo$Sg+\?M,#:4<g6V2<CKmk9iVlBkQ"IZ78F(E-!De_BSC,u
%U7b1Y:I@2U)1Za"\d?dsdS7MU5r3M-$]9e.W9C(TQ@`/;(!(&5hOJ/7c6BZ]bEjZhb^;Itr1AI.MeWEkJ7Ye">!Ye5K!48S/4S>"
%XJ05L:=?X$OY3n='!#]^6d&q=P2YX-/Z)]`_d\9`9?"@H^;[B?X(W75p8qM+'lK:5QcLY]/r<SehuoRHVStQBW&=1OKi?D"e-_:o
%!6Gid3'f0Fd\BX&_?(Yej;tU4_Zr(VM.&^n6r;mYKZK-B#hT6pcid;@8Fo1(.j4cu2)*Or,1=A*'2,-7=!`hWPuC$n*DIQ+;7]Xq
%o;"d0m"LY;(.oGu-G;!nd\>+F;@+<WlVZLQ/D)7s%]*&HV$<aKE@K.%UuB9jlE-/F=-`!"TJ`+:YZ'SWPf:2Q5(db\_[KR;/CIK'
%D&Y*((*D0P#Bh*'OsFT88^ViPSD48pjc`(DJs6f[0<(*LUJ;R4Qg>D7b5dkRDNte56G!?R)Ar!*T54iXE5NM.Va>QZ)VGH7=U9E5
%Y8dga,cq&HeDP`lWRg'WTV\1NpfM;%WMRdb,U8s?*s(Z"*)X+#H<9D(*;sS:c"#2gX/Od*MW[OdhUgJ0/G8m>C\Y'`nO(177-aSu
%JUhqS@GYO3+#-B$qgm,g1K(2NAl7K@!IjW+pi_4U0N+V_Nu1$?(^i?P"',M5'7;V)Ik_:SaXMjQmI64Mh""UfiU)p4V\IU\kiV\i
%q)9fkl7_(G4]iGliJ73>ir]-N<eIZ<_aaZ)kQfV'b5r`CQ6LEO=eiKmp;GSd3(jUI@R^LDOof2d5uLG$Mr9.DT&4JHpW%7'r^G_0
%e6&0)R<U@EZ8ZZ+p25i42oaquj781Lq8Tpl@pCWgM]:^INH+d6\9qdk^+h7t(mf0"b;[H&)rpLKEV[VaHt-Eq0eWJJ2D.)+D-V7e
%bIGdPlSU:nHbXLOFgK!]m3[:3"O+Dcs3/$BEB+jp/dI<a\1oV"&;J-I+U-R8_SVghRoaL6WiZuRJ.4oT@S:I<;JMIhCD9sGcJ$FB
%;Ird)+(@@e7S8<8`26FhSZK]j'j+:>NUdFn]2;ma;g$>7Y->[!<*,p/)YKBK+q)3h8JDK0<*b?Z$75e1WLd(lUnF_16f_*1#%.Op
%E_+$MBbfM2XTCtj-o%jd.n)\0+=38#7jp\(.9(p49AR&lIKMM23s36bP[m[01_]sgTO69X66fkei2K[VUSJ6\J2%EKpf=6g!n\H.
%:LtkLV?/&s)hE</>f7MsT:/aRlGUD7qR\4W^QdB>0TIXh,fK0r%?$>I&$-<b'bFn<JrNRKTI^!I'0X13VP,:YKeP<[r_OLM\5W_;
%jFlIls#?eidN=(7plc?f(91f;Q,?/l$)QA%)2K'HqXKVuX"+p2U"$"2O+M=N]7Ua>h%L]?"73Sc[`Lejc)W*n9W;,h-I\u7(Zh/Q
%@k-"SAa.o4rs[H?3a:*YD[Bq*+c;EX7gihY+c6:*Z%TC*MdkE5+ri6YY`n=]f_JFOS1f?BrDMR$dB49^PDo+P3*q""FG\+&:aO#n
%(=+;NMu[XdB&I8DB4,AFBAa"+":cV`BV9%sBS9Ok8HVTf9`n1A.#>SpXYRFb;)3)JOO^SC**WWYQ?.rm5BX*lGZ*'mE&Ne9YVsid
%XtJc$Jeg5f%FbjB%HK=LcR>Q^"X0^qC'@SRM<35^UN2O/$';/X//67(;)F8iBrdRi[5;Wp;(7&*!2M^bP!#X3)AU]!O%+9a[F/_&
%7Mqn$(U^9A+`,qjJM\02d]"W'!`cArf+#**hi\O00Fr"*A&c2acR;4bV.S^';1o"dMj0Yjh\9OH#i*br:p:.I*2BCiU0*5G2CPT!
%+6/R;&O6*,TgPh"Jf$,0o'ETOCME3/,!@"akrFXnYpIgklUjS]L"atX,"X95Fqp&@H/Cr1Ja+04!S'PSBe_L^@<G.4+]+eg[_g\j
%R&W!(l#0`*c8,UnGF#2\ABj?(Kj,AU?G)D[%E[(g3kqf9XK4!+[^l$MUh!0BP3"rlAMFQI%nW4(:ZUnOQ8K(?C<!D.?[BXMk59OY
%3QP8R_^"MN2,Y&N3CS1ci$rOu0%j`$ZGfdS,_\`c'Zfc4$j?`&+3<Z&'QuCS9a#!68Ur8?@+H/H&]-X\5[PLuP7MFPiZi1P)\Kk&
%@p&=:iurpU#!hrm,'YshEZPh$8@(\DRk4,*(+=B\*_Pgp"Bo<b]HT"?Oe8pMh9u_'*bjJ`3m3:>`J]W6UY)$7IajeNBMK`$,J@-=
%YE*ZlfBDZl'ef$jL%4<Db&JA-Tm4L,Z-o?k5ZNb^C"&//g7V$U'[W#;DR$F8'mP_ZX2[%]\dIeh.Ojk4&^D;omQ3(J)r]P3BsL5S
%`ZrKf)&8/>qDPTR[TI60:+K^AJb$lcm$#CJOQr1:)[ji/eoj/n4XSo<.$i#%XDGqoDN%V+@5HJs'@YtaVFEic`^%>PVaNh,(^Ssl
%ZlX]AncJ[]aSS,o?egLLn)']/KJ>aL;r^)]"So_XmIeJ.05U>U7eI(WI=]q?FE*#:Lp)W85i)O"EW=MpD:ItsCfRgeq@`iZVY_"E
%\.m93HP(dL_0!]I<n]LD8(kJ4N+>s2H(RNZHF#aNj5,]M@L"GdLr`")KB76derO]'n(VumY;;=R;p'`qI-<H2KUYeS;^c.DPTeXH
%.N*:[cpJhWA0R>\YcE+MhYW!(pYhM6hDQCTfVg6];:+?VfI5RNkpt@i6%A]DXRTWa3Jr9.chUk@Ts$Rm[P(@#du&Ne7@pjdSNhf'
%`I>20$cham8b8@Ec>!JjL,)gVAPP[)\/^PJ&`j4mEFlh2f(]UL[<j`Y)BY^@71:_2@/1D.hg,J2\Gs*o6+%i0<(*0SFf\._UJ3ig
%Dc2o6-P[YC_C=cg"]\SlSQ'1U8X+tj]+6<E&`XWIMG^bMf8?%Pr>,*3fXL/%bOc;i+GF$[6'&f"6Xdb*?Dl-%/"/9d)eJlibrUpE
%"Yk5]&U.:"SS^V;40('RVj82aZAe7p7&pd&qV?OP?TuJJd^pB5.?&cm-An3<\GsX^(?D<fD9LV(m@#4Z4"Fkm?(b$6-4Xgem(Ak%
%OjT#_bON"d?R3T`3?D3Uli,=7Uc$N@>0UT;JJW&Z31gOH4/tJ]b]UsGUVI.O9U1edn0aZUBh)g\PL;Fi,CsKrT*tLd@X<bM-Q&Iu
%O-BI02Tn[5SCOBg]ol#-.5iB@.Nloh/]j$rZF2m?PbSn&fZI;Ao42PrlN1)s?uF$G_/Mu<eJ9JX2lBP0'@O5OP@nH?MI<R0(tP^G
%?B(f<7@F>`TGj<=R#X>OEhRUB1!9`Z3'_=bO'#!N3,UJ-8nQQR3=`uP#uWPD2EP4[`<^c+Q_DP^kBYW"+C]&C>j-c7$!O1,(Xe;G
%/Pa0j.<`,Pe$P_p\BW&=^,7j3%c'[e"-"OE4DOGMZ&dU2Ef'RcH!FOWC<=-97IrOH@$_O$Z0XM?[Kn\;U9PJn<a&+'`*"Hmd?oh]
%>r6F;3QTf/p;.Ef[d-U*YAMlG[c,=>ScrU3b3HoGT#tb_F\UUlc1ek6gXs%'n&"cMD;`iBPj#$%[,EK]H78gU;?Kj$R&ApFPVu#-
%MUGUGV!8W8(.*n?(@R_.R.\^dD$Z+o;0,%LA*H(2a?_.$]<G-<g29i56fS?82`;&eDA)1S7kV*sJu9'S`.E[]]01XUNOpOW/T!M"
%#MEV[A`Thk7kDY/\<5c@Tf#k*>$JI*D:9`C[KaB%+mfoM=[k\R(%N!qp_\qpTncn"#I7Et;<JeGit@ERL'cP20WYS[FHoTfE/H8\
%7#Mcjo6!`P<JKQ;3Y4f7i.sW3hcS=6L1ORkZC5B+f<d+]fsjb^J&!C=noUdHGHn7lfq<n4fRO\rTWFK+Uf1_rVi5h/N2[l_KIG<+
%A"4CiTLV%!-MDHlYo%.2pK6T#Bu[-p_`0nG,NljI1!gR4cR@d.N'-;8^+^.#$"%64BA!l78eD/?4'Jh_2;roli^hQ04GS9N'AJQg
%Qj:>Ba$G5mi]ghW1@Yk[^:L&(0IV_MYcaZS0e2'h!,&AN">Mdp_1K9B3Kgr=i_S>5;$\Pj73h:*VWU@q]?JEXm1m@<(<-&R#4+&g
%-qD/-b`p^^kW-!_^;k3$5\/e'5(U^?fp\PXno.;4as^]]&oMr\Q_!>aIJDf5fkU_[!f,rXhkfTX(>lM=!3uuo/bgM.@q@k\P3ZgY
%Xr':A`HJeE[s>b*TETT+J-B9bl<o)]6_5NK&k%jM:DRIQlC&V*UZ3o"T^0C55U30[&YiB0*-iS/AujJV'lr#t-S>Y,9cpO74ZTsO
%dMi-H$.fnZ1W&\/N%c>j4a'f8pn4pQUT!B)Nm&YXI6a2/*nKjlH'20u$l'Pd3gmj#g?;ng$)4[?*k=,OkJbKCn7@N:O`k:bB9k:S
%BSR?P7rcPJ,t4t^%Q,'7[5'B&)Mq=ic>#7TT?4AAc>#gJ2oU/R/''#90ZcRKKod_!FA+O!i+%\D@2;T\^_3Fo=;?\A=XTkoQ[tNU
%)*eW6c)`]t_6#2Ji5T73_R%7?Yn2K@[m\/Z-:iY\QQ".ppaHIe-lPW[nB@gl(0mQPSBu2j[O-W<o$Asd<eTrQn<F7ElXL8p,Sbm3
%)SdoaMh&(L98/e<kAl<W@Q5l/cOLtH(39Ko)Ud@3bf:4H>4)l7oLG+[mH-[CR851lONphh9SZSWBSW6)K;U\6J2*YQLag-^,F,5X
%eJM)^0ejQ;4?>$O-P0aS+.C$51rY$7,LmWle<lKM(h#N>Atp9`e"]cB7*/A4]JaOqF;3Gqk%6@cA^%k+G=CqqKlS=RF-.ItDOHB`
%6a^D.U727,s,I2'2fQK^oD^j2B9[D^GJfO%JC3T@d?g5ITe3ouP19rS#\DPmK\C3U:<#U*N[q+3KCVD^Q_\\aJPhQ,,.*id%XPk=
%HWLiRj)GYl7M.[X+uDjY/.S2;Peu&RVBNYW.$>E;+R!QFfLh%8bnoZ=p;s[),/YE._C/)c?!rB9WL]s\SnV?9I>PE'Tm:NfN%iE3
%$F?*;E\LQ#_ge[<CLo<-Eo-%^,UFu.6HR8N=!PjH\HF#tB%Wf`RD@KimX47!YNSAAj3I?t-Mj,Qs(&u(XFLaP6W+K$Tk2\TVW!pW
%G[2"1N,uBaJ=&[_`^6,lKGV-B/WNM\PBZu+0EsUDfQJ'gg%ts$hg"pQ'gs6u>fT0-EbetiQ+U^n9FRLfF\##2TQ^E9r)nU"$5T&f
%Bc@_e!/N)_1ipILHG;@m;)>'5EQ@BpqMaJ'[&DgK^F^HsfcVX_OE9hfV\EbIDVVr`j-4#h3Q:6\'S5fj#!-$Y<[s8sIKL?ATE2:,
%oU3t]KZ+[;a#lI4%.t5\=D)-`^BkZ&\I$Uc&*)B716=L;OYGpEZ/Z*u/-MD.nlEPVbB!+W>-#V$1q_s]Ag,WgPXnl=&m`Kq:U43@
%Qgrkbf?p$\qJk&O_Q`Arf/Y\8i,?,7!k6A]'9LQ?Z?5BZig80KQdjHMeB4--_O&c`Qdi>,X=Bq2:q3YDYA8O`>/tfor8@"16KI97
%$C!h-bnpR..h:28q*AP)X\-L(3]eH>X0R-N5%R0rNpNY'\P4dc,C@!JlN5-g!6,Yf(]b(6>#oUJ/M!:A`WWW\=Jga,&6(*9m4p'C
%N(@PN_-4\m+Ce//02;R9;'`,oT7EK'bn0n'kR$jgJ7#)q87lWD_jZO`'Tg6t9&1(/O,+QNBk.i*rX.%sP5&7XF)h?%ECMZ:We"%Y
%&i/l'ALK60K,J+-P"EHa<!A[@744<SCQOMh[Z\b"kX#hmoBBdPRJ'#SbF[!r>*MWK$-l[b9!+LO.enZb15):!<$fK?Oi1<)gIV=g
%.<^s!#Z@@,q@_ZW2]B:.g(Zar,;mFYUs_DYJ&FppL^[i=)esObBN8$M.II<V'<>S'.rponY-?CSLeOb-[9@%Qn4t<.h;ES[CikgZ
%=%@B`A%l,(PrVq-a7[Q5kc,=TUup6-nerBGY'*cXAZM(6C>f\%a_E4m9rdY@0R";",Vjqralur@$J;j$Up3iDrB\()V4o<"pk\_B
%<(FDI>iaSE_CB#cg_Om)=]<JDbbD/gf;b)C-aM7)9Mun1ek\hc1Jdr7/1'NFT7;?KqRk^nR\Kt_i+28@bgCN1o30DdR/?UB8TD%.
%`U-l2:Pt?9.R8iX.k-KB?ck,O9W(8nRT$'dI2i0i!^Mmu)VD)uS^K,aYnL[!_HMqt:74h_kK't9G1)5%!4+HSg,PL!,PDJ426p<*
%<rOG9>KI]em.HfX+=Kja;mY"?\s:+5>r4"8%]r-J/bEd[-g(#_l=)p+^<eASDrrIjY[Q*OY)HU%[9$%:*tu=oV-%/k?,Na>IYBQ)
%iHb`?;]t<]5-TLeh&\S?Kj(Nn.\s)er0g32Ut:N"n<nAh3an)7&4u8sm(2:[:>Z$QlR2,@YZFWf^2$9b'E3/qSkuG%&]g+L=NB6b
%!Yg&Ai$,3s^a"`g_AG[ul4h'O3kSDPd]jg(f?i08'K'N.;fhN0>"2dH:;\e4CScu]YUo)_L=tk7m.;7eN6<!`PVY[4O[>]1A5(/D
%BT%::=O.8$inB!O/m!qOX(DhG.=lnJm`3tcG&p;]RZ[JEk+ksZ'g528<EU&8b6MOAMU4D9BQ@'uPZL^3([td;H>%'E`EX.[A7W"q
%Ad(@_B<eq"4F7PUYMODZ!D'BWke.Q1Y/.CLUhGJo+@eA>D3B=CZ%r^TEB6!TV$#X*'AB9=bSB6+K/q/s0UF$\3O58#r#*q$o!N1T
%9uJ,J4.9k&##LPdX_PjmNSJ&Z'5RZ9N&CTl]TD><QpLB!;;RG@ApPFT!!PMI5%[FiHL1r7ei([5@,mGIRG:+Z[2QB2MV$;3Po)i=
%l-?uae97%Tm3Ycd9r>@g9Pl_Vg28[Rh.194ajbKtWU2$2gJ+QRRnRZXRG)O6[G>A.]?/QGPH!pr;qk$D[[Ts-2jrB;1:>qKC:hU;
%G*Aom-<&YnVDaWB/\'A*D8A)@C<IU[\8kg*QDZ=(#ORru]XBA.m!<`[Z/<dPp=kq8dC\"qT?StBi4,BPXtMk@-Cs#$[!,6Tfbj.R
%CWt$mm9NY.[VI0h_:=,l]^]A<mj><X9k&sK`"G"c-#O>gga&3\DeSYfZ,B@GM4;Ers3hWSK\)Yp,.t(s&s67UXu5BrB^ka/9181_
%&kbXEQahV:1:uE(%ALi-)P;5UA%UH?V/_3FoHDNf:+,0U8t?+&i_h?ZWBB]Kd:Zgdd%WQ)1TA;+8lT&g`Ge0&'2($QR%r7((O&3N
%6l;>5(-cj^dFMck87F,F8gRAWYEB`lP0&nmrUS`ASID0caBSracm+-gW6iX6;*nDF*RTqh<%<drA5kuIEAI3adblWJ?&.cTd'3l2
%'1I=;!+/!'<`(&%<$-G7jtB*u&dmp)b0W=%'Q>X!0Ieb43IFVg5UJ&O.0L8V,YK[],#Y04FD-I5kpi+>CEb$c_?-,V$7'Z-'K2q]
%H"d!'B&A-Un0;Z<2$RD-!ghm@(!GP`S7h%H6cW=:r)"JPoeai.$t$8d`U"feXIi*C5M64>?"5l!Y=+srTbJip+N*&em>j'u@MWn-
%)p(IFotWUB/-9WqOMLS7Gq"&Np8>^Ii+*1a:tuArb834tm)_%]`?gmJG]A9M_[.WX=Q0X@de6%da]PN9/Cb%Q2$I0jr[$0+]Ss%J
%8i9SGK?5tg81,#\M4uUY0]#0BAqiY/7+dtW>SLj+ON#g?&HYCE'Y.0/`_<E[M])SCDVpUkN^QbDhH6+8Q;A>L9-B.rM^1sBU+;-G
%^llZrh;p?T2@";q"8Qja_32CU6/CatmW>++*N8c,]ad)rkW0>4nUf7a^Ca@N*6`m/esOS>MFUmt0fMU!ga*H>!,!l=IFSZk/%+%\
%D[$mqcu;?dKJMGBMW(Ch]2iU`:peWq'Z67^Eb:1Q,(r:2^,h?!H)=,E$nZeRjm:,gcE;7U1TT/;M]niQX(]GLn30b`X$jOP<XE:T
%+0JC4UD_b6`?eHF.dDZD*GNHX$$0Y:+-K+$_$ttRkYNrF==*BD:l1PPBn-l+0lV0W$@r?U[R6Eb-gV!6PiqY=nh,l'Q]U^%$d!qS
%^E23h_=U%&\s+dE_W%TN\hP3rLrb6"6HH[&>u\*U9Xhqc6`TC893%*$MbZMEGps@='M(`'!Wh,Ni(KJrl%<XVql1:HWZ%o@-4.<k
%-/SE75Zf3a`)ZRTA4[Y0RS&uHX>m%7ZHVXdqU$mhd9`7-Ku%)_lU@JS1=kW,`"2t*,.&9a#Oi)d3/!t'I-`hG3Ll`jX.ZMNWX>2p
%.&nMQ74EOt'"'Gc7n&"fI1WD$\XbC:gSm#G5V[*\!H)gA0bG)>;VML]WSKSC2WDtaVW]S^%2kK_F.5V%rqU36W.U2snnc&i>!Ye5
%K!48SFo(!^3<2`M16KWb?qR4fC_chn,;".R=fa)?Ti6&@a^d0,(u`e=nSNkrYq43N>(r[NHW.FS6<te9`4@3p0nL'XQC8TPm%N"S
%`thEA"45*]nqX\1a1$1`+E8+O5)`gUO._t0h(lO,3Jd+H5Wq;S"Pk&n=.t@XC*J4j,8m=.FYlldF<]h18gkCQUdClf<ODIc9&S3A
%\@=5!]2C-OAO_W/BNcg*:RLJ^$&P<TWU&5?-lee7_DV*:AT=lXcet;00S<@<Mf*DMq=iZ"1>/<b-#X#Z`XWMP)8ds/U57`b!qZ+s
%hiu.?JA^Z9_)[N)U&u6+&7nP](^1T4P:6&*C.lKkaSSQOG,34PZmX,b;;d00g/^KSEOhGKit91A&[m6tJE_XcW?u3rBn,UMX-dJs
%0sdsR:Eh(g\iJ()PLs0.k/feI7d6)UdQFL>7_.SQWf;n"=JjbJ\!Kg!jI3`N,Zp![:RU36oi%2i,c`t;P&1u+Fj?YiQ])78P5_O#
%hQ2#sk*[sMSnLj-QVTIQ:!MJUlh8j8[3T6G1M>L-=jA8qMK9)TC:T!_?9Obh.'h;&5qg5GGL_@31&G7C:or[M(l6'aL"0Tk>p+_!
%r?0D\Zp\l1mF/AY>OAP?%BWoI@uoM`'^%FK\GSV6=n!2&Q]e_c;MoG8q@dOF+s=RQCRIL['d6_<,'h6kdXU#;-i7,8ZUALH\/"WX
%l=1B1>+&@Z^Ub*-gt=*ms39L+I;^>N?)Zh%Dc?rCZH(FQAP*sMJ5>,i"oE7*C`Te%hUcHO.%%V-p#-#j=/_0,q"DN,(e^li-<0X-
%"JP#C)bg^$,maG^%jl8D/0-d=J038i4dl5[6CO]'[E'iBdoQbf.'69%Fu7%j^K;^D;&le2o[/>L4;+O?>"J[T3eecQ/TVULP.mOq
%fa^oFRR&<5&CQmuI6&L%h7dHsW%^dmC=71@[*Q`>Ws:!k80fK;ONiZC*)$e#T-Od[#4bFU;3=7+.@f:Y$*X/TJX00:HGEpY,_s/o
%.@N.+&f\E@"%Pg.7imL9XpRJ7^ig%gp&KACl1WHY$#qQA>uU6sGHFrpH^DI#iE`Y=3,>uqa#[Oo+U'NFS9LH\ca:dNig^^NfO'i;
%LRbf/Cu_HP!RV1tCa@2uQqQ'-AhpY7H=[e`,5#TkM*N1\7KF,OOKAXse=[+NHVH\8;U'b0kB!ce'ln3T]t6\.oZUEO]bYjah5nV-
%2ZH/kPtq-N?5lA2jo"hu.]GEcp%GNI/5s+0$?Q$/bo+fChCFV3YB!e:m!QudCNmlKobk$rAf&gR%Vd*<OH3q>_DJQ&BH@0+O$e@'
%,FFR6bf]H5(&#WBY-%W^)>K+1"%&><q\s*ITU&^]C$th9cYN1ABJG]0ai\a<0Z[e7Z$%h.351"QbY*!6q@rRrZ<AF&W2r0f;GR]a
%WCbe]:f'_M40q\od\g>RM9M^5\7[ffIP2p@@=FRXE,'E:QqQO_dOnukmsPoun[OLEnpt,`8NcDbVHZjYFqW]JrW`)rB45_N7EV4b
%f-fYB)-Lqp_G&TOND@/7R9Q<=>e#M/XAP(\SfH=4\k+7cVI;$C'/CdISPGn5dRcB58R<VD"H(N8<FojZphF>,<Q<UBjQ:j"b'[iC
%MDNtDP?J-ugkdD#Jm%9%F9;K1)8:,OI#=Vmi%mHq/k@TTS=LH['8(Q13Y`[J0I`d"N@j+j'28!bB+b^:D!<EKB]b^0bH_'(02_\W
%[A\*.+5m!aIa3eoE7]E2&I"iQFed=nFDdcC>L:LS$41/h_"/\9aZZ<G+!E*nBQB"TLCWpf_T"J47<gAR1'5c[Ug72o^N3:$/u,uP
%\'GE'fB$]d*uGf"o7Q<cSY#qRNKSQ@e._'ob.:F=7AP_FbD:!.R@J&.o;]f"YL(i[IR6PPMUUIWTd:Y)_$fV_)1tuP1-ICpkS363
%]P,_gJ$.!?b!;[p,g&679no6QF!CM_6*hnik/g`B6=J#E=1)YE,&77N;RS.arbq*V;`0r:CplBD>Ia,i^p_Z`FN3@"9?hLQ=miU'
%H+()tm.RPT/k=8gKX]]":+>lJ?*6KuI=eYJ9`GC[Yt6<mEq2.U+$d3D@djN/OJ=Au"Jbb)9Ffh7N+Gkis$k=@Tq?\W2m5n$-BJNe
%mo_!%od%\?+g"/c]\8@&G9Y@,fS[.B`Tmot;YdJS.Gsrb#qCg5`R1-MhSr2nThAE!M;0G?Saldh^T0s4-a#UU-`FPF'H<+m_c:Mt
%C*fm9V=-71W1p/S?$/5uV1e//>aK0e@e/^ACmjqZ<bWf=-MF9MTdIIrl7-UkNH:g<KL(1`p#XFF6<L1gb'9T!*QeuK8QCsJCp9[u
%Wb)u!Tlq1,+U@:u^1]Nj2FFNI<NQViQ1:iO-)R^RUa._]U6rNPU/.mNH4rq)/hKh/1qcN'RSD"@@d@$I^$n7uFR6fJ/tpQsD6+FK
%>8^F\p49l8^m"b9qg.Or4NCmS)6ms)8QH2!J>Z*@CalP7;7!Ce)cbH7jN(Y8%FDR::oNSs0[ZNVc(Xq2kpj!8dOM(/aI`gQ14`Nl
%QF_J-<Df4:Z++c=o]nA_Y#F`<BlQjp6SRXhas::=>S7N/hhl-P,7@Chon@Q>jW.!>VdA5^="#q'Wh%>DQYH]l-0kmh1*3GGYi^)O
%Rd7PP<k1K[d\gZ[QnU8`FI!a)>Va:e2!#>Eb\ng'SZFr*ZM6M\]F0upP=fM[l\dR*2tJs>cnKuQgM):u'*nR*"i^a!`MqW%Ci&;P
%pgfT8(b!Y?_Uoq<W76#6N[rR"Mo(F!$2U2`0W:S9*#aViJhk1hp-L\DMF?4bBMDfa)[AWQ:cO,^U"D_.#I9"h5i",Z-khEL7r^5s
%\@@XSZH%).X^,'X%?#qg0JA[=fp94'``U/>I\+1C\LNW\BC]DBmg5bY_T\"cepYkVF";p(/VL9)^1_TJ1XcRd!XsUD+dL_J)G0(I
%7\(%B,M.%fi=,$c7db5M[Os@Fke^OE>PHOp[C9=-r!7dpC;p(KqZ8;ErZr<4+FMbF9RDkY=<Hq@N_M>4OBn2j&/=lL+h9Ih"\F_8
%hOr=5^`(m?$Y!9Q,V=t^:L":4%_)RlX>1E@>tmlL$*ait2k/J4,Bh:e\^SR'j)lbH:\jo#NZp34*B0]d*/Qcj.8j=$G>9Tq:Q-@u
%JiEkmRLU`&=dR2#/h=Hd\X,`g$3*42V_NX.ccsF4pc8FJFq)I[QRe*P.1VW="/ack-gj>Eoh=Ki&X':A4](h,1#Aom';%gVPfTaM
%&+n:uKU`ae5ir+;A9LCCSiV&e&`9$Vn5>g:YTf@G6ltn&e-<l;e;&IkEF3)1\)>B7f(.1k<*8Eh>tJVaJ;R<+:g)1*TCZ2]p0(6R
%dVnr`a6r*eS\+GJ5%4jS2I>BW*ph"hq_LE%I88aaE<*>>!!&JZ`W=;O+Q3Ydr_;mh(PM(*@d$`SC$n$H]\.?nOfXoF?:604>R[D;
%aF6O_!jH8u6W\g#B`"aXosH5)DT@c1m5ZSPB9#IF00\MQ7StNI@D>s]`cEjGf1lQoI;N:n0St\kPHf0G<dkUD)8tS=&T"%6A83Vs
%.^OPj/0F.^"md/=l6qa^4Ns(7FV6g\oa6Pge@>!g5J>mRq?2M#SO3>8#@V8FB!,"HSL_W/f*W,+P+(]+V%"r:<\0T_-]j$W>-^-\
%`UnG"@EfE(_@s@/H"@P)#'KU8Z"GMDQ9+L&d:me<;P:0p:k9t9#,JE2O]MdO%7fMNLh6E]'k3>h<@!_.-@R<;D2!"1-u0UhIr.p-
%8SRd_""U)eB6'4214o[m5n,#fK,IT]k9ECO/![<3-t+]f21(n!I>sT7Z6='DFA8D7!HG1TX*0r_\DX$M$$F;q&CQ^U=E#`N7[O^d
%W/^J;l-mdK0[iL5c(`M=+)SEAV>\C>EE1-/FhTPt,gPHYo44N&YAH@k/0%IdPD#2KQBuG6;V\3Srj&!,I)D)t+*E:A-`oYJ'Q#g8
%AJIgq:dcLS/4Ca+*`Ze@E@SpTj]?N!Gi_P%Jg\Mj(o51IXArl<?"Vf)BZi.uf7_hcRE=$Jaj0j!mepiXR`SU!N0@TVUfXuOASk!e
%Pg*o:q@<cSj9:aJ1[(35/&.-F_Tf->2u^2l9E(2F&AM$C)*?e?Q<:4JX]V;jXG`WI9W&OK!Q7SW-M(!34ALKc.tL+!m-Hg+ZA0p?
%]G!8SF&hqj-i:?P8B]M6Fg*WB_"6G$bGp8e1fp]f;TTXE1%8#[9R.*tp7YDcF=WX\+8^5_0FK6N.BYd`>0lDRfpfX[pQ+)''*sCC
%QiY_9SPcX1c?]16#T>*086YN,gp1P.'jAg%kI"]%PPK4hcn2gVc'9Yj*17#W^(40,H:iFjD]iPP\bAt:=Q-+-TDtJP[9D&A@k"[!
%X]jr<W);=G1b(LL.Q#SE+.F5!BSW8H?9#>58p_;:456Obg8a]J2,E)%(6e@DUXW<n$2N_FZF]?gM>'[NpPBOL[?Fe(W4<P.XW)C-
%8mJ4r<>&71SWUKBl#-J`ELSn+^4GnU3]Ld.OhMc4J>nGu*Ba02F"cQQj=7r%s/!d[GqJDTYrco0;'/o)-`X_!;-<0=9Nb.[KY,sc
%DjPh>b+`utm$iJ<qfWYMFqaar'Dlqdq_kd_S(P3>fXI@&\!u$ZS(P3n`4gYLh='_@3k\CgGC9;=lZ;nS(;D/JdJi@uDB#$IIG*rd
%eY@VZej*.3P.$Di(Z!KJ`R=$eOBG6":hROaG2@*%8l"WqAId7=Cu?gjo?6JB'7>A1J,PB,H3)oP_R%!LId'ksb;Z?K\dcD?X4.</
%dAskgQu-R9p8uam9EMuUMuc,nHkj_=n>r_DJD4p_gS7Ub4*=0-L[u%'iQE:T59(+NUJASu%0_+rfmb/AZTm6Z[G-@!'f-cakN195
%#9(jgg%^e#Q.`Jrm#F*ca8Nd!%f9OJlMjf/Ts=OE8Nk-\Vu>bs)'EYI(c?7_XJuM];Y\R5'>`-7r%0"<I'rRWheGs^H+gTSYHr*W
%.]bHrUI")4@alGO,.^,&A2%]p>FW1#?EAItP>8SEB_Q$h\$W^UT[H'b?_bB^g[aN]LV;[@59#763pbULkb33jXnub+H_DtM&&S\g
%;,NVOjCj;$J,YK6<Nk:qcNC"]^NnONbloFoFnm+6_8B$O"TrB.9G2;V^HHm;Z^G<tG4k/hMQ6i59aAggT]e3B]C!.P`]PdM+%M"-
%'8<hYk9gX>pRd$+37$a+E7@,L#EZ_#<YSgY2Gb)T*X_d`ISB]all-eg5A`O_]=.;"kc]I9IfBqOjMPl5q7h]D].>K<;%-jcCH&h'
%VL?n\*1tH_#BeRH"T<Kg?:LF=bR+:!BoPmMR\-\WO-gsr]Q,!tg$AC9q=a/>A6Nm7QdMNjF'=(>26FXn+k)$SWq?2;k&]/sJY]R"
%4rV*PF?m+%CO5"orF:KfU6b]TMa=[Tl!O'drsYk.R,'u9*,"Y9UBTZ.2%1hGnmLmnUs3F&S?lsgf9ouhb)Z/_BsM$Zk]W4;k'_S1
%KZs_9au:<J\LZKZ]7no7hB't/=7'&OiiKN=*qm2^dd!YJ:UYi:Bd4-Z@i+=)H5Fr@h.mNn]7]g]4XsU7jOdf5\Ea(+d;#'mM>__N
%(nTmam-qYPb1CEN4).9>C@AXW4(\63Q]IU6m_F?*fe+QeUOHp\0c[S+Sc<Hf>>;QddWsjm-8OqX?$+2oQbthbdMRoQqi*nB"O6[@
%q[>8@lUhLNeOK#R`c0i-`UT7QM/AM[l-Lu82(em?>5-HZYMVJ0?]7UtKDrjcoXZ&F_oAVaXgZ?!TXgCY!Z].Zp@(I;Kk>2(^3g*4
%SC-DK];:(eQ-?=U4D='Zj#NO$]X\lM_pi9,`jJtl%2uq=Glr5#o5A<Qdt5Qfi1;qC$f!P)`ZFitap&h:ZS]$X#(O'S#OR##9!q]4
%e2Zf:4/9R86HVd<2qh$%GC7dtDO5PDkP!&&gNa;u5^P_.Im3(ggHUF)$Hsq>l$YZ:n?;cCDN8*[LQ-2Hf.=d2q]3JnDPu)=NF6&r
%1UjEV.i@pYC_+h=YWSHG7^Li0#LK36r%A';0qcCb=4DJLUI"oZoA;)Y.`B,>LofY*c2OBdDA<_edd$/t./UU[Nr?tim8k+[;$TRY
%8:2g(V-=!noL9=/5<lg?C'PWTW\kGinj(FIK%fYlN)jJ[Ho#ifS6B#P6I+lBra?[f!7IBB5P\L4<MS:hj-*sf!T@IF+4"\@GhP/B
%"@PCYS3FSO)^[U^j$X)mNj4^NbfPK;2=1FJl^a*>X;CiQmG:^TKYSVKNO[L(RpAnVoEa^Y_p2qEr_,j;N@3JmSgk+_]D>iMpI]&0
%O!/BU[pi?T`P(V=[+U>8X`#1poNIF(jGA/:",OF0&6WELd9B!ea537T:-l7Y"pd,q;5R'*ii^FAi@GO.brMG)08b!gg8\[l-L/nX
%[,9QbkN@K'Yes5h/Qetu*1!m2jL]!D=+e`K[8hLlN#<mJ04WF48D?Wga&_Homnu41r/(<[E$sY7QIP78[GK+<@re]q+GrEP[7Cdq
%8Kb=V)K2T:.%c(75BTYP<k1FS/l*S!XJF)9baDRMfPGZa]![q@s-tupWcd08r]LEd7&=L63#/5cB`rI=(0M#BoD%[Z4@G8*X@e8h
%m:TF6%f5?e`dQ>UQ!<)2l4d8;?6&7@Gt"85b?\LBh.bmeQ4H'e9rHV-[?!U?rc@AsLVT!u,BAi?X41_%Bc<ad!gBZE4D=fYCg1GT
%YSmjX^%QE4-Z=19J";o:o?=)1&k[XP7LqBQkKX"-)T-8#TGjqjq3XhC`>O"@U]CJ97B\_:3)H_HYGZO!.Fi$nj5ub(72C&BqP4&Z
%Ujl\X8i!KD<.4H(jb,)!gZO4g;+GOT\$ug-:thJsZs@L$W8V/tFOlhfMHEqZ)W]T&,YAB!%8:/_#(kfmW`l8$&[=>j6kk:fR<<#j
%#b^;l@-1%1n6\fDS5>1j\4gZO-oR$igGkgX[*+?ULb[;aFq;8uXf49+L`bT?[HLQS_GZ@S,=?UsDGWk-YV&HM-m[n6D=M"2eF.p,
%4KI>SMS,BLe57;PC^e;t^g\A45<8l*Ho.;,p8C3QM,19:a@[)OWXAp81-&%0J(>I,%W`keUUD'9*0ooRcVZh]nj80f1XV+h47+su
%-_Ii2"UdL9*;+YWG<@Un1F+6`)(5RaX?F_r.cPkF*+CTkR7Ps`Wd6cD&OYD%B\7!'1G>mZbSdb>9m58-nn>k*UinR7:?e;DJ[!c`
%ci0M.4AF*"kX=agR/k`'NmmH?gSC6J[Bm+JL81p"1PhLc/rJE&lE[##Uo2^*D^"$)p?!I9q/k>J<<[(o246Nth<CF1"giLDXK#k?
%8"MM*h\*?a4j7"F:Tp>B_GbP)fY>>t<2(_HW-l9F$)#fiG)gp/!aBT:>]D0?>I,Ue>Frr?A.hns[`Me.$p.+i0#AiLHoJ0WY9K%-
%)M7YUU1%2XVnMo+hs33s#5p>#T7?N%*7;r)Y;Q8Y(LIoCG5)q%[O]9ZgjHa4DF^aG'=<;c%J>/nIC)L_`k@@6QQ5`!*4&T*hOW7r
%?-&mBherc>lN"M,0`%h733Cis?G)]4TW@d5/X#D->6)Oc;9.<&Vp9U(d.lA>HJH!g:7-4@b@;[$N)06QS&`Wl3Jd(HO>\H"\7a9a
%.4?\?"nFh3()bW7KSlYH+\dOW].aE6i&*F6-Z75Q:&JD!JO-uH>XV/)cp)?*FrGk>#LiIS!gh]]gV%4n@LQQV?C^C;iKkZl(?m7`
%U8H>?0l3AoNMu='hFG,ca#9)FfAMRb4qI0#UV$+NdhH0A_O'XBX?ERQ5Ri35kUNl>)47+KW)Mo_/=Ph8@@K7CJSiGs]$kVIND]T2
%jPoO1fB@=SEH]$rJY[^-+273Ns-f^@gq$^jjp!Ur*@B4CI/1+)7U\7)3lt6f\HdoY?".WM$Qr&__"V6`3I?Hph&LS3g;iec-%K#O
%HMM*'#b,m^\m<+u:6P<j'F,rlB9Irm5K=<%=o,[T6c[Kr?$Ym:9cm'<.V.gFB'J%&6$IXQe*Hj4=/k5[l;Vf<IrU:'%^bdiPUtr6
%MY8sSZblt240ScLVS=uM/7BaIg)i1uXi=`i!BP'.7ie;'A2rsuno)57HBq/a6/J-t*I0^9n(6$Je#GG/p\\:"p;4WPL`e!oFU?Rm
%P14VIYf:njE*2u&UtmO1)h2>cNEupZc6Bs"=:]G[;IbMI-E[7jW(Lc07jXEn^_s@bpj4FGb;B-@s.XTFJp[kme2C&>HGO$G7ZSLZ
%?E)Ben!,GQ[p4NFFTXeBh9r6_%5ln:%f+NlV/AZ5pG^)f_2MgUKIAsqBV+.4[sKQ<TVaHkZg84ri<>1OIq/c5)3un$Vg...4B_Y_
%9A^_2c3pAhVFc?i$u5n]e],.U)<tlY%5_757u4QQc.CK\RO&M&d"'lKE=DH4"#'M+V)RD39Gh-5UGU_9^Uh*!"Y",o/NQK$^jl(?
%iKpC#%o47K2a/k/n/f;HWGE'Qc;)rNHZrfGmjp+SWcf<BiI1^nH&^]cgO-L'oTfGmD<L5[=.=i#Alu7IYG)9Gp[:,f0`@C\00Ane
%fDd6`hV;3s+)VQq\uX3&k5*AoJZABP<&oF,G%Ym6Dspah:S'JnEr",Q=C4.l:XEO;efUuIT=7;ScYjQuo?))of&%>lg\[b0V5O7J
%76U>4J#N;355G98Udr^g_nt!mL[e7:rp?&Ua[*?4IWDW8]sVdJ)lN@IRqoq4fi#EZi1drieN/;"#[[0GYd`)VD]chgGI.0dmAP%\
%Wh+m9=U$'7*i;Z?o4rF-fqT(P+W0jUqT&+JIJEO*=1[5A^/J0kIbmlo=75b"+?h\e(XPnSF()%NCBe\nW[If?oo8$`pMd,&HMPV0
%B(aQ`HF81kq!%YlpJ0;/c,M2]lR^SHG"tHWbZSe9K?jE;CRm[rZmsl:cQ91sQG-ZN48TP<i<0oTf3b%mcja?3s(sRV2'8A@4aFHL
%)P2A*dL!hAiK9H8RbMZCFH,N3S*>jiH[oArW#^?VSCUlA]%V['B!7dWX=Uh2h/N*^bi.$rK?`]T`k;njjZ(%shWa_MId^uQmJjGu
%n\4[-brr`6NS8g7HN6ujarfNYAbj2-n@(O`e^M\*,%$H<qS'AtY]'8BV5oT8L\3`%T*O!X`uk;R<i?@IiuHq3p?<Yl:[8tjgW#$&
%92WI8>l,[JF$I4iJAE=uV5I+)bAR1Cpk`hN_ip)Qf$Drtct_hX6[N`$Ja*GS<F4l4Ho",t$W$K#<njNb_4=3pS\P[KjI+=Yo:O:g
%+T8j8*j*0S<GOE4h66=cGAlNt#9VhLDlT)YoOu#2C\-/e[:AEtidX#a/cba9[m&EXZ_dC2s'tVsT)SZW^"W;(=4`MY*ZWe47unP'
%nEGufghZRWLXH+)Z^8e'S]<DLl!itTJ<#5hfE-j1U\"'2V.]69^VlA.nu/h(IPA@&*5!+oN))&2>RM0Z0g6*8W2B8s#JI+rU%d:(
%eq7K,a2YI8WINar#S/hBCt)D!OiPX<Q%&X$I_E&&[22mrL-VAD-c6=D'@+T%eVg!#jSK<SGdFYs^AanAE:gH+3#`*ph8T8@Cl"3a
%+i5o+ic]b/iV?sUK^YJ_Q?LDnK<MKi54scbm+5EsW11$'c5sj`mO_J#:MRdd^%lP!#sZ$Do'<OW]_anApt`(+b48tGZn1`]qdgMR
%8If(7Q@RUMNRQ%qVphC1;H9dSeu/!C2G_S?gb&QV3;SSWl\iC2om.O(G*ee<rP5c?Anj$'k#&gX#%<4h]Qm;[Vp(aI?`%/YeK<t8
%.mHP+ZV%_$^7QC8I(Tu,]R6e"33Oq.?b>ud/)ch*n*&gE]_;1FYd&llmMjPCj7RG@EO=FDMJa#"Gl?7FK<9'sJChW_nO[ilnBn;=
%Y7#&);t'2iC$Jq%bPCo:LA9fC@51:VFG7*PrUON@E:;i.ODnA=+KW82[5J7C0&g(+o[cG:YJ%u.ISTeU.<N&U5:W`gGl.D]Eo?AN
%!QZ?(a1Dj4T;k+NdnTAukiM#"rHl"99(jq+GA;m<[0;r[LMuG#m5t4Af2[gWURh5ke9X]f`j86Gnf_=cp0m3HE:<!fdp:bCZg$&R
%9$L)VS;R4(c:UF\f^_?dG15Ve:YkJPO#F+Q59>.dH3:a`X0s(-2r31.?57DXnD^HPYH70?9Cd5UK4mf_[dh#uedp@+gtLeJPcDgI
%[2O0t#)K\RL8Z%6&%OU"iTiF)o*\@5E5\,_FOUX-!kT%#V'^1aol%r94VOsF]L4^RH4EPZd(*HnO2#K:k[8`?[(!qcf'>k*=EETj
%)/F-H:Fp0Ws65mIRhCf9K=;$j!i4q;mVCLuhP8!h(V7_j<oNm]H80Fj@Cl:(G"[c1LFSmDs*XfFJgpj7;:#0(>,)C&f*-eo0Um?R
%L#sMlW@$_BR=>iei7^jkO3+n/If*]rR[:jW!dN*'fM)sjBY"6^$6n'&Z#V!m#sg+]-l?]ljX-!@aUWG4g#6&F<=f/sd.BrtM-f.B
%RZ1IUm*Z71@?XY4JPidcjNb]qE$&2\8rZFW&/?f,mTE(J:aZC"aVde$X)D==%e7g$5Xr"0C;L*1g=+]$4^NL\^X3\P7)W?&,V`3h
%"92H5P5lh4mXkp4>i8E8q6-!,[2W9HA$iT@AofY0pf_H>gl"usI>D_,`>/h-#E6EIXM"MsgeYDgq(GQSp?M>>Mg%pX[lmKI<u.D7
%!D\N:6;fheo"[r4j5ph#=X8.PorOGU7Z,>D]d6=ZA!QNMA?WIEXgSF0^Xd2JhK(KLE;fB'4n558[FZts#]8u-P>!p\^!6;4(:IsN
%YPYHbp\(2[kC0OT]8_Jnq!r8RIIZCDrLEF*jfYf1cSNFT(,egYLE-4IdiFW;.Yl&Yqf-I+UJ#2<B^Y7gr"&5,'&31k<,jilb=h/V
%CF:8tSb:7Di8gHDp?KOO&p'h@1Z2=MF%PnPf%-1Z>V+CR/uprbJi3==bNUEpqlkQ]aW7t7+=_lB(#a:7HV]@2q]f@ULGDnKlhp1E
%^XbG-r?9b.LeVB:LXd(OS'.jWQe1[slFa3UGA7!cAS=p'K#7X!icFM6fm'$q#D6Tc^&)>GY?)K=cbH>1/,Tueal4IP^Z.N4HDIcP
%64P_eVTuGU7Y83;@./0I,.eKDh`Wraqqtu]9tGKDTFE[HgC7C,PVo#,[1E66:f33Th]DKPWh!RRK-jge<):5-(L`Q3IZ1`tVJaI)
%a*1=8fR.MM9NOGBIg3[$?1o>RrpWrhkWa1+du2+LBBSC83=rG1GN/U*GFkr:5`MT)*6$HFM#nKc*[G[L/'k2aMi,E<h[Qu"qQ10A
%oAu#Y?@TM[J'^09Re4GV2D!CXDeXr9MXj'C\c20K?.]3+GEa#"9<a-tQT*%c<pOCHU\86VDSE^r$]TB+rp#gt$Q!]mo).G)On_6.
%Y>MbkGYW(/!$2PqH^.jfEdQqq^[A7u)hj]m!Y'Q0lQ3q>+5\-sX4MY65MQM6=_&G3_WK.%b1kas?$GhffkY@DhS.ir:P^BJq!cb]
%g7#XZeurthh2d(2Dc`*SlFV8J`fK/VV:tg-cd`6P)Jsn/rR%f%]\Mf1lG%:Ee:(D;31cho^c7s6XutV18mU97ai!btDsn'-)oJ.i
%jlt0)Fsl%Hc+/fC914J^ekU\.P.hbqr\8a=>9h7hprGTK45Whu28EsIX4$+M?d+Nd-G$T$m`Il!?$dNoI+cskomp<5U"QTWoU$^<
%T!`V<^%05+qtm.N5f"g$%t:@UF`18^#b]<@^o"c5Z0]/=a3BOm]*'Tmror_(NKl5^C/@]mq9g1>m_#\UIbGgq/F5`>e`$VTnC*/'
%mpPBqm0>itiO>GfA0^<I;"9SM$\.s5d5Fkc+%HF&T?F6-[H?5_-YT&d^e9GuNjlb&0WdQEI8/$;h<<7\eN\D+fW*QO71W4;o,rH9
%I(R%?o_e3'F7$m1#I<$Ya,cGRg[V!a^^(.^2\n:V/+Ed6+PdQ1AJZ'X7un%4^C$.H%^bg"eUG+&C%Ea$q=9&9<n?!f,k>Uu5iTc!
%_u'?(n+Rn&!Ge)+j1W1:8BZ@^Q-H_g5>Nk[L[2qJepCD2(7*9i<dsG>f)XX`U)c:s5/6j-qQ7N;bOfiD(m[g1#YVdS>Wk875"rW:
%SR$b0n:gDSg%G8fUPC6O]iMB1q+!`9\C+ZrZ\i55HSc]GBM8_?_R6uj5?RfZd)Q]eEEki6`DX$pRqJL>\GH$6!'rlo"T7(XEqjPC
%B!(cIF1lU3M2`-"Wlp<ilegRd$7<I7+('eJ!O-/0O3J,_kKE^&j;hn7=Y=77WAJ?S<fXf-FC(8KIl-kCPJ*_X6pc>i\/,=$oag,f
%iQq;>Xm56;HY13:3O[rQVgo`V?(fRD1Vhc7;gNQXeh$m$\%/bak<.RHF8?r7/J=O(b'Z)66N(QOHMB1q-epMVU<U>2/:i6@rn6Pu
%`maMnaOtl=qqO=3Cq(k_%"@XtCo@!sAiOfpCaCI4r;)u'dk?DTU6G82<VGis\Fek$B-Xj5M,0>h5n_1aa2"4RIO6^4<*kQ.""86Z
%$a0K0b1W8^_0g<hnmAhj+/"q0OV7j:*;N<WGO8A3f(50OpFeaSJ=IU/"`3kWd&pQ[gN`S\%!LFrS]tNfRdEePO"QUZnGLqmF1?/+
%_5i7q]%MC+HgFm.nDpG?^tJ^m[3;Sc;`qTr?9@!3:ET!h)/LjRg/sA2^>:qI?bSK\IK&<.n)fbPICmitG/$0<MDT2Mio!/GE;Zh:
%CGqfj9(uua<3L&$lutBiP;i#O<..dG!h=#a]0D=bT9jPY/e_[47X_V&Ujdq/_s#M1`fnjRfEKSFIfJj$KD=W5`Z?nh+/ntAa`:T)
%4l!cHgAMU2Dr*X\-[Ye>hihGprK)D1=WL?>!P6s/SpmkZ/Dbm'"JO4gaRA"Jo]jufgMsq'Cn4e";FsC6P5;BlTUIsHL7rZ.ru=/t
%32%:meJ"OH-hZ?.K$F!;$25OU8<8oPL_iS=T8^\RhJ!Tbs0eKbhJ^,"^ND`r/*uEK6F-'0hjVp3_bm^hYPKI-4b*C1^/8eYkLm.D
%lkcI=_?SA1Hf8UNIX(R8c2FoROhUa:i7/Y?Djalk:<q3;IUC5FdQdO;6k838/%t$HXk5d^%%C_9P&>2f]T8LN2f3L2EAr1?GkF4G
%([e!``.HjoC9$E2gFA_gFORF3*^BIfe+5GofrY,-&bK(1bcWc\q:;;_ej5=A07ATQq7S%W@?3/Fe/c4?CjmV?l/#("<[2".Hgd7.
%(sE>'Kn[.[a$/N3H+iq:I5FYJ=PQO'5MZ]NE87%K"cZlIk]2&p5CN'64e>mhnEV%Co1i[rqG'o>_M_(#DcNFe:%,2g!d_Sg<na(R
%!QC@M\5N8l$q;`q4!`s`S-H;<.1IWjJ9odkC1/GShlCpL<m%Z"GCDs=Zg)U.5[/F9("iK?I"a]SCNAq'IQ;h]FRQA$!4@'.5^W<`
%[5+QLFXq="`QK.i])]3doum<Vg![bR`ceHG#VfOE%3>%pOF$"JGEK"]#="f`f$fPQ-G;Mp^AXLW`c(=?AkX/T8a^rGD16uI\c27j
%%G(%DU:ur[h),Hf4GEGu>7^"[hZ?N!Zs6a:?XLu#ffI39)pn#NGFKFSn-+N2DP\;d?#n`^?VPe>o-mMPU[r$")gj&Ym1%A'ls&Km
%h/9nHV(WT"lG@W@G2k^m:jsW<8#OBc8`"al]`*?OD5FuBW-n[5Sj+j#Y!]1jm64d$ZFP"-Cb=?+/T5KSNXic)]1>,]a2,YgdQ`$K
%fI.s_,8?Qoj@R]Tan][eX]G%D3%n[]`ij]o]6V-aC3\.P8Y$rpE;kd7HYKh?3)(K=<h&'&=)6DO+)TW:rK!uFK@mJ:YAZIs##KmA
%>u[E(P`p4`ZWV8.Ec9'edX/?aepGLh']Tu[Vs>9PP0W0X4PoEK=)=;?O%d09(;XI.[FSMS6+(uZZ=/1sR!*FE6<]!0*UOI<o[i*%
%A`b7/<uu5Fe<[jLm_J/VR5(KM]Jc'/^38GBa"PlYO6sX'c_""*DghJ2NckHW[9?=o!.DOG6M,nEJm;HnLT]$;l-Z8=%fm<X.e]7d
%/r]''gPl[ADRW'QL1oZN[K)3[gV)_@`LS5d]`'qOmsc?(K%N3<$.gL]ISkUiq7)b4otN)@WC&3&3A\,@p?Ol/@3n8#q8(WNq>?<7
%jlaV(TE#l3*n?\qGQ3KU4SK=pDu%@urVQ0_[7l@eQ%Kua)XREf:H<OG%K-;"^]"L^E'Ggij.($6rEmIm!\p>P/9L\)8G<\_ctb9Q
%mp?qDA1ZqrO!0L-%^K^#!!+\RnNrA[_!\cq\mK4o0"93UrCfC:]DE/+rjsl@J)89!B>0(hl[Q!@TPF!;fL5$KYj7QDdSJS>1I0?L
%[ud[9mAYcPm/rZ'49"@LfhjY]6lbt,FAqRC^mnb\g@(HoefSesS=?a[nstR+Hd5u?NqpN6VpB8Jc:V[@Ut9A:O,lL6@(af?@8qq\
%4*SD$W\$AOr^raY.m:1!#C!2/)54kC1Epdn>A1Kn^qB^AoX6r#Q49rh.J]VrjV3I7YeaGLJq.`$b*+oJG2DHIA.n238'e801NN4I
%4MVmXY`7DgXV#[36sRREjFnVU`(ONDU3fl/C2.`uaj/l4>76f.UArhSBr=I@K#qD"P\TsKG$8'"l,j&Qc?H2r^FYg^I`EBgkbaH&
%J*B$dk.G)TDBs5EdEF+1(gSlU7T%hHI@*mMb79;Nc>MP1JuBYXY%JgP%)4K@i0=C/MQ@%Xg%PTP"=U.>KcscX(mRcV.\Wm,:-E=N
%c"(6Cih:-/1(MdNHP'7NqLR1fGp^RBg/5a/T3\d:b2(g]N[Clt>`Tok8eXONll@=)fYRng!+YM)8./Q108=OW$ItX[9ePWoFb(!7
%0&82F73:8cK,<.L%eC!4nFCe9Gt6[Wkl:q,>iO&qb@q+AGat&T(bcPj_>E9q_AjV`S\TI.@9@+_XG%IrEWfe>_l1c[k^PoF=CrTW
%J4-W1/3lT0@p&LKKI72[(S8DYLA)Zr6_7D!0656"F#Z;Rb&.c;:^a0'%JZW$AeFBj^P`<ISac+S600k:!H0Q1&U=pgN4D..T+j>+
%jS8FkoSsSS^.5Eu_P$6\UX1=r+,3N%JFNh-$YXRpkI<?>fCNK,>sF2o9TGB*%_Kc:<^"LnW)h!4G9>c)3*\T9@kSMrE1o&$#_7p4
%Qk9`HLPb7^_eo`Yn.GR<jsM6k]P@ghHD).>n6O)r0f958Ab<q$4;=@'?_WGq(=Pe3nM4G47187tYt*"&\cKM^_TFZqJ,udn(O6mA
%VLT5bMEM1*0U,?5Zu0RtMTm?lWo^h9eP(d4/<!kcHi_IVbf2j>O?2u=JYR,FhdJO(!D[AtlCl6X_E^&ub;$-+ktaL:(Hk#.QeU%Q
%BRpph2e>-,4mIfC=LoY=nGN3Q7?\L[HT-So`MJ:-d`2lMMYoX=E<3P!jGU.a!(ddb/pr^#GR'>(*97$AUB!2'bUnQD#.k?/!YT+;
%a7*gP)a/jHZ!RuGKL"mhitu1^`Z3>!_^5FIKGmD,A(Y`gE[&9bj&U>5^p,9j5QPM*4sR']5-F=,LKC8Y3")+SQj%OO!Iu#dTYou%
%jEN9ddK*5p-gS+u\T'k>gh%.InU7DOH6-)p!%A1EYfFU?T_Wri&&jHW432\qTUC&*,0^l-&U6%.LERJ'$6R:%(D3l6*[$E(bi7>A
%K.`oo@F-P>SU)p??%e/H(Vk1plUpptFqF7S![(7$8MYs)LJ1GMd#*N#4bW[Y,>:+V!`#t=GT<!gJ_2N*m-bJh(PWkb`WYQM&O"=1
%SpX)"\ZRS4'=tIA"Gb/'g!2]j\D'\Un0N0=?8=[D-VZ<(,lLaq?H,VMm?Xh$VF1%'N(^TiL7Y#GZY8'Z,RY89>4Tg-]@#p'$,7?e
%Mf/1W`FVJB\egG)n;cfJIK=l6'r5KHrP^S<$0)nIb<.+>%*Nl/0aX"f,BCnI5\ag\/-1G>oYYa#eGucrfb,Q3jroQbRFZM[)Xo\?
%N6ZR.,B7r0b`FW.!\K'K'/),G[9t?`)$X-`![#%/"`me64!4U`(b"2b$I$kIQ=aDbi//&?f]-H=F?^t^$_f4o@M2[L,F1XjJK=&2
%i3]`Y(bI0F!(835L,oZoem]?K@?>KE`/]Ok7S"YL%QG7,m;W5q$OQsV/&K*n8\bf\f;5V;9.C(j,2Dk`/;f:Z+<CT.nqf2C(WC(k
%]S"I!.!u#!6`:+S#j=k<$?kVUmI=G-(318!k5]l#*Ut2+?0sA>/?U4t0YB$D8XJL)Fl.M$&rdhRn+"?;(l1)A%jI/ZAj-<C%ND0:
%;[*:6"J+ZW<"?.P<AH#+@#3kYKf7l[&W/dobf]S[+^&h4=XuTC,!V`UJP28;kYVUb-tRZ`ouN6s.:.9kYG'`?N#N%/^]USP#D%+4
%Z4KGdjRJfQfR,oL0>bGaOm[sKKdNIr#;Gk5f&@<'-t[cr$W45#3=IMU)APCDOXB#(0I12GLYPC1K)(&u,9HuFoMB?+I)W_7eO+Wj
%+#8p,9-,fqA<\'f&eJY<i6<<`5p,f&J:\C+M\!("gf2'.A7Lb#keJu=<b#Q55gN--9H]K/Z9#5mI)5m,W=NB2YUmjW3.d=Rp@[N`
%*?g^-E';k'e/H_.k0n/2=7sp+?HGe:O:Qnqa#%#',^)FILP^uli^#s_m0<c*&:DAT;X!%b4JIVXU.<aagP#3P,E`*bJFU71SqO9%
%"7Qji-Vb3B(1!qppTBE%4;'<aJ3<?I%b,h*0jd02b%H8QgCeiHT1LSjKuhp^Z8dXh*m+6Y3@%H%"O8=EK9ed77;*[N-"X!YUDu`B
%&,A*nblrJA!X*NHCtP+uXRG+!;$K>V7daA#Kh(Ye'[,K(6IET(5\QfJ,R=EcB(,q--!JQ@;$DUR.;aTG&>H%W;BE[T#uKjE!lJ?*
%>T`bfClXnX/2ZTH@9aXrLr9\`)5.Uq0F<ll!\%[jf&Bp_CG#]7$t/>u!/47:,SFf.7=^gD&9K%b+Sr>S8N<psT^]gu5Wjh^Zl-#u
%HkEjnMkG.K6*Zi!@LKO^4i$,,G45gr+\1Y:`DpDQ]SIDV[)N970*37/#:%Y$N$<qg69TWc`IR0)V!JG3ifS6!Erbo?N#%WXV$&'m
%+J0cG!n@iaJo[?5pBBT(W%Z/n&6bG?#_o+H_4%odE8X)"a=]X:^>r?\V]lmLn_T**^Of_tF=AO@i=!M^c\SFU1Z/J"HC/.,':p6'
%Q3SBqb"KXjN^*a:*Mc`WG@6n%4J^iu@6b_94H'EB_1upd"S<7Y!*;8k@,ZK.%u$.h!W)4NV^Si3?@^4S-72&W;?P#,"XqW@,T%Xt
%*,ENF0G)gH8E\n;?J$l<m7,N1L=-BhL]]\O*!*F%Pt.VM+X?VuZ_C/GL*=?)Tft)T"DPYoI,o/FDiiL@5(JXRP1Tdc/.?VCd0R^]
%`-HY`(2==C%"SQ/]NlYP5`k59fNLO1?-K$tp&StOYlG[BUdNGhEG`2&:.]-7dDCbDK^sRcRi5Ei^$(&Mj17RXJGG$<E@oR%LZCQ_
%2$Hf8$69.o%s7sS=MR%-0nbh^'Vmn9fS6H0=,7PMU^"V<@Fr=F!ZDFBhufG[*$Q$NQnUL_U^1oFn!B@Xbd_u?*Jr<A&?'4Sfmjc)
%q.HD@oYQB6XcMY-SLHen`F-:8/50sjAJ1[[TI:Y16H,2$?U*m\%m<,kEbs?R^$q`oHJubEVG_,a6tr5FpkHJ5g)_/JJKNp=&86!<
%qD6UpK;8BqjX^]Jb&GF>O;S'+Tp-Y>Je.1&TIQ:*+%C"$L]c-37Z*oWn<FhK\tIf_i52k/*>#PbqZ']Ucr_lRG8F'keSb>9,\@Tj
%4M)BGe:h`P>8:R6$+h)f37K]KO@OTC,Oue-@b9Udbe[T(&<0OrAk;-f)$2d*%/0=^"`WZ@5D+)e5^%u"B4(o`O@R%XOQ"7mb;IWj
%8[gK@Mid$ig]3>-^uHXS;c?32K.'S$C*_dD3N0bh"UULL!0;eIc[a96lN$l7f\f3E6Q&jUbs@KDSg?!M%"i-L2@b]6KSO)*i#\%:
%#LV<Ob5psO&=(Vb'*iN5g8LpR'PNCD#3H\J6s#,K0.E2@Fq?,+\tY`2f+TSk8#6g^)pJSK-4V&L4cG25W\,31I'-m"&8E=W!6r>+
%EWXT=4J]7A7:8&*njo$g5j_K'H76qpc4:I\C!e-!$cjl4[/oZ"jpQ_HD*L`Le,]+GH5Md_&-jJu,N\WHNa""m_e-`d'f\KQ6<jcd
%irVk>0S4f\$ip#]9K+.lUPFB[(M-DNKP=<!',Up?^d1R4q?!5sA22#$@$E9M*6E^o"DIE3kn?#WU*RT3"<A&G.#rpf+^Dp?+F/#/
%4_/lSTLcT/.L^.t#Yra=KfF`$7#)-f.=bb2S7E!t&LRcKN.qlggE`%D'[%%D@=faRQ)"9X/TQC'ACLaQ(u^sR@'a7hEaKLOP[b('
%!.Y,?jO4P05_M7N*$#_`)D&E%4J4OLaQ8pS#B^])kki(aY_W:Ei!GJPi7eAC5hCMlK'u1&H8,\-7)4>D+FrG2nrkTKM'Beg!)Fkk
%_%eXJ`-DCgTRd(ID.U$B!Y1:;YZWf"!(Z,^g#0a5p0ZrK&]PX/e44s!V\C@N`K?(YZZa?f[T6pK?E%smqpl,$d/]`'Sr7*3qOm$r
%/i#9C&^>AoZ3nQs"*ZDH"PBnGYV/;D$qmf`d5llXR"#dV/XRiCH6itr>n)?.<+&l[W32;%L#Jc9`LSb-M?;T>?qDk]o=`1p>51c`
%^jmEq4]f^4+R>1L[GWq#aWV6*d+)X^*QUoV+*K+X7DWa^EWniSiYVs8HnB;(Zrs/d"d,V=2//u_EPq,!5hABS"3f9h!TV2WF%GP<
%@jIaV4E#.u^f<XFpr2jfm0u3Z;&#*m'qq>%1@Mf,nf4DON^TN#Bj>a*MPWpVP3fRFWO?_V+kkXCdd>cSK=TIr:.0+pS+`i_mJ[K/
%Q56LB[b<YF8,^8lps$qfN+nHhA#'59F!%S#q/1N)H_3SFD2Bk/?@GQ,hm`mp>e%'GPKsDLY7=1d!PK@=Ua/!7WC?XhCE!!iH)!V=
%MTJm-dM)rc8A#%1&u[DA&pQ,AKH(+*"&CU\'V=Lh.M)0e$Nk\fiYp5YTQPkQTs!JRnf^%-n4B:F\FPKST/^!S$..gj%mfd*p3i``
%KN#*L?"-j-[`(YnJ05']^!Iu7&Lf_2f1?4c?-SMAP1UM)6IUoWq&4-WQO2I^*E"1Q$7YOf<!-B44Q2E!`>MJi7@qWh5cu5m2.H-R
%F(6(q,Qi:#cN7ZeR]_Ec9`%$_R-;k_RP;j%N:[W^kkQAe8B_TD3\QSH+"eVV-luN?*9ITr.,_?a?N;+31(c"VY-;uoUp1hSD'Ah@
%\id^rbp$s8>kM:-'Ln*V'I_'3+N-IN^H#t';\g76)Fu8BZP'D\,Pqhm#$k^N;ih%EaJ4M3>.O,ok`Ls^VFsF"GoS!mfMUjHLa!t8
%=4#_)d6&g"68/dq$"G#sTp(SNU/6i6V*IT\J<1c4;q.n^-n^KRYZWYoV1*B_0#hRJG(a?070AdHdI7iX5$E?n7;,56BHM:6XUn&D
%7gQ/9;S]]Y6P$^?$5^F7\ihkb.7lECK]>CtP5@KmD('+P0M:%O4r="\U"u-TE&SP.>is$EM@?m\P])pBcj9hdJbC)XbP2d@7IsPh
%)ad]0fXT/sUt>mX6+N!7OM!h0.*>`#9-Z;T`l3ssr'3k]0NXl:Ela9p>b:GWJhYD_"#=;B6;m%b.4X8u5ne=nc&Ti4,TiV*0f.6i
%dI>[AUNqb(.LCGgid?FU;+,.;ft7kG&a;K`R8K:oS0Wk-Z-9up".U-aZ"SfQq!AC>)cB<1#<HjXlJlllaru)@:_dqS0"bSNduNF>
%I#SZD=YtHl#h<faWl'WDUE/5(ap17ap+SXO4Xo`<=$C'PM27qC-P#kcrJ<7B%3H40-@A<G`*LAf7kbJa$5<g%/2RW(3Zm?C3<s8+
%BOXBl^]Gip9tUk+^in5C_.Wps`h\A$A5HD:NRITT#R!9kPus^eC]NuLBnK]J5H`eE4q^,.!nsH3WB>`/(dAVQdYTFnrSp`@:3]kd
%e%>#l8I3s0E!>B,JT\5R.9dtQ!O?_Yj\[r>IAXqZX99:RTg&ZimuU`r]dCT01I2mDc]!f6%lu^@R1?)46[Rjs3iEsJ`WEGn^lb0U
%8sXZdL2[=25^Hbl/%Wq9W8'*oq)g;s%2&6kiVlk2`gjEt)"_I6H%doWJEUMl:fb8c-3uB;U2Eg&*_#N@^6,O&W=LOLS:bGdn<S\#
%:p^]8Ss!>'ha;tqUB!'"VRFA9.-:snMe))Jqsug?>:ASoQg0Xu=,=>#G&scLMB4r)/b1u*XFI!9T?$X)PXI`I6V`s.kDnm?L+tn8
%]&9<V:m,'Bi`n[+!_Lh8./O-tjNAogW$j$^47JY*L._(TGXRqHCa5R6oSS1l1m=1[#@]HLD<?J_=.%<ii\EfPA*%Vr;&4JP]h0J"
%$I]S#Z3m8"OM-ML!g]/45hh-)TaSoX3/gYGck55EBL/plBFo43(*H1!BWWKTM_f&Qo,5ra=Eo@PHUMNi,0WnRd84[?bp4NBV'&l/
%5qI^7)%g@$RU;]TKSLb#%e`U^H<M;P`=uf06TZtPoO6`hrtgtcZn"ORHP>.teh.aR#TPf)816d2,pO05hWokh$Dk"G,i_-^WWA07
%9G_2L$Xj+9JRf(QT'/ugae1]KY7R5Z'r!%#&;[,s1a%,J$Ep%-:G2tWjX$cqX3OT<E00'@@Rk(/f.<AsK&e5d&-7I*,3lL4/rPQn
%8=(<2DG3W[p]M9A!BD4K<ZmHp(-YR>&MNuc#c^'!-//YO,.&#Be3VHDBW#0).1JRu83e3T%R?[TJKo+P32)->MP]L(69E[Qpnkos
%"GGe@f.M62TaHKIVY+8W2jr<4'^S?];2TuGJKID1SE[PT(/Ho0!t9U7`Ejo@+/_g3hJnW8Mr:\glKX*3ni0-MRmgPe<1kGbG0""U
%&5D0Jc4X_pU"A<<MBjO<DP5Mm$76N!4n3![CUs!:L'#a90+O5@NIi$3F,7\Bi"3o1PH%7@mMU9?;!F-,>.?pt:dWH]>"<!l'X[(L
%&ectg%"F,D?9\dY,@bB-":YJ`+f^[\QcL[S;r!_5Tt-;\*)rT>$cOH7Ku4u-\I_c_(PSTcn*/(dOnD'$iW?CE5T3CG$s'$L6`3P<
%XS>\Y67roH,&Vp9/j_>/TuIog7j,d$"&HF<_O,&$HUQ]p*3q*Oiu$,Hg(HD<``BfVJ.:P-b4U!_3D`$Y<A#@-1K\D_-O4ni"p5.\
%6_N[o#EJGIJ\kX.3#[O&iah8g*Jt?=5^:Dm.YN,JM\.Z\r*io\(d&GlSZN`rK%:prD('R:Cq1!P:CMZGbSU@$p]OPToL0U['*s%U
%M?lZqJSZ^H&'/o]#CRM:6E'(2etS`mMh'3Gn5,U9Y37lfak;9`5YmCMR.i;3$"JO"5J%d2O1%0sGGRM7_\e6:pl&<S;_/i4P^Q&H
%(GWdj_A=q?M`_'NAg!JZZt=kC!P/:CFJ#?F:o9@ej-l*bKHkL:J+DI"=-=i>mX,hthk;+5LDkpIpX#CU-jTrV>(Db9l%u'RHDgj^
%Ohd%uY.jkSq&T(JaI@I%WhruVe1N&/\#_A1,<Xc+c-=Nof&1"SCUG0;Md:6:C_X8+nHa!-!`39?*)O8nlL1A5pAD^mZ#%I^R$8&@
%0l4s]'N"PEN39e4\VbU8;c2=MG1Ri'\F\W#9Li_!FA4%d"cmIrF_t"U+"D$HnJ1."[)i<03YomNcl=tZd+>]r;=H9V>A20?Bs-Ql
%SBp`DJcPto;L,[BY<b]>[OG*O]bmo?ameQIh7<(^O(KYI*o'+*R&62O7hY3cJ<QUtn+Q%?f8`gBh):6m;8D&`UDHiEjB4<d@h@Pt
%iR(X'.GOOI@ki9d"U"6*&@6%bN(qEPU.Ve%,2p.)fp#uUP^oDK,Ge$$@8pE'4%0f$ML9d$I[I@HZr"TX$"J5pU3J7u^F\>:[oq?,
%NY@p`_fRWtEBLWTAS84qqeDohSI(MOVroG?]m=LUVk/;)pi.m[&X075gN>("`FC0Ol)3F:(_j0o@i0WrnR0a%J[Z!SSq1?-'L:tJ
%:'[W;V*IV7E)lTapS;Vt\"'PImg`^sn"(Pcl))8\b'6<9$+a\^h/Ni8iUcZs?9Roc)4Tp_iUK8O'')';T49EnS.n3NJ3/5*YrF]!
%Ndj[=,YtQGN=QK=qYi&'@))L%92k<t!XP@Boa?Pue/&&S(Gb7)65&3lIt9tN1899*j8Y%rqbs'c?bYA-:];g9e?nlh>K1Yh+Q+)Z
%[-J<C0)jN%O!AI'>c:rS[V?5NH8ub,f/uf>%V^jlN*9@G'f5r+huem/6-1BrLP<"NRH9S($B)G*F^nS_psgD0j@"]43q9Y+:G+iO
%+-T8+Ii?2)k]'Zd0(08``!B2[I(9dT#:?8=dCk2#q\II^'T_Ei]Y/X\E'A]*FHAmAE@jJkZ"G(ZZ9j)eBMb:11j%*$d?lX,gZ`uU
%d:kC\_h6XoW)_sm&V)R`3ZWgaWc;s:%(p@pIY>/!.%s!OR>>o@3+1@jU#_A_NO4<ToNa$7aGFPhcF_-/4[8JGq44H9IJ,Ag]AM:h
%%fVu/5Bc;9d=CBabaKo_',?u!Y8fa(W$\o*T9HjXq:/!C4]!APni.^tSb)Uu&O5bod/MA\2W$n&e3aSsX(Q8G2G_?p*B=;7KIqNU
%.B$0I%EG40#kOjpOCf.n't6LA:E`GN5!9]=%s1>\_pr.pe2K/p.-,&a.Fof*gaZC/TkA<qXZc'[9EW4T=.D_pa_(<c$@HU(8iJKY
%r%-Ya0//aO<NM$"#d'1AEZRdhD&eeUAfT=?%,U-X;]15EPtR*4,nAVM+dsqkUaVOJS39E?(j#89@])h;)N"jkO2%SQ+)Wmh8"M/-
%!po(dG^K*a:F+pq5#NeR+-@'s[c-?TP78FsG<4$!3Mo;PB6o81LRT="q;am:+FY@aoGF>DUKsRf]G`UF&osMibYgQ0DOZ(A7$OSa
%^_K"_V@<*)Jm$WI1hA'dns5'3oa25kVjtr[o%"J^XW(WP9tc+UB=tp(n3;_J/$T.pW]@W<8C/o6c&?qL&e5jIO-;%)=XL'Wa]_rU
%VfEj)[piiuQ*MT`D-^*3?4100c$9t3Jt%7pArK&q.WcLV.L.Fd".^M`Flmg#F^@`8Ik9etQ;c@s:!A*h'86oj[HH^c]Y/X\210-)
%>@djOjiK=kP@-o4f]ZGZ]tO2n+[&/RS-!.hDX`RDE*4l@Dk<hD>qBFc_m.]-gUX:Bq%jp\@j;.?_iNSq9dX5u`T:%\3l$Qj1Hct,
%ZK#E9(0loDP2.LnA$56^N6QFg8BM`()KdUg0X?`j4(4F+>;ePi7p;LkKY4W<DH.R099&A>$@ld7L4gJe<RV]P$jm^N9bZsUIDKD3
%CT/ead:07sm7_)Vh2$ca2i*gWG%6@5=_A3@*g>PHV!h[;gBY`j>V4?b6nVO)p6:nf9!&pYS^NAtS+!X2GKemMA2rAe`Tltg,:F&A
%AXbm^6'u9N>#aua9;bj,]9:Z1'(+CZNZkV'hP/f%SOtQT!/D925<?;`agaLIh&:7.iPa^8UYT6>miUVT\B=e-BXJ!('/5.le:teL
%c,aInM;-A!kcC[!]/,Y8W+9;9b>Mr*%``C.K'#7/dn)S<@j_h&CIF_]1P6IEf>THZ;a8%,'e38'F=&>CNP0le*j=27bo4AGRI1oU
%?,2$r-dF#)]jr!qe3kBbd["[]-fKk'hc'CD1n(li,Q-p4/aosnV;8_Nkg+CF!!u7FE/Zop#%1!6RL0?af^F(OZqc/K0@I4#/#jD+
%NiU-d4A(#?T+X,SD8^lJ%BBmoXh1U,$dB87Q/e\N^YKbR7C%:1r#DM7&Zs%E0"^^,gHP#t*ZsnFlD]9Q87l(rqjl3f(Y_2pP=G$%
%N--Dp3%3=[@MP*+G_VFS%$q<W9Lb&q3"LXL2qRA+6,,\"[r@im]'M>6"<pO.aWgsR^al2W#`8,nbr;(jCVo;+?`P[?L(9s85N(qJ
%6iUTo+tAY"[UTZP20;>Njn'NT+7?B:c?#=*_<EE?La>ZSI_P&$8$#%C-7&asiqtr@P'jUZM(cFITRqM4&b1-E:&g<9%E!pKD7BWZ
%[&Atbj<9FIYo4?W5G'%fp?K1a^=5q13[om=38JDR*Ii(MF=\0USIK?rJi'ijI,J^&UdDo\5eV$nD*h>q`mh@o9B8EeDg4MW$HLei
%cQERT;Zf]m5muB.'EX:,\3d'oDDZ@.8NbDO<i-r+N4qgo.17uj1CeYY_V;-3?E%L(.El[s;$@TCI(%ZNMrsb+]rP]"P&Kc-pQ\/J
%=u$.T,\W^3dE\ahXLmEp5.h?oPE*gU?RLPU<ATnB&gmPO=>@h-)59dbhY21@1;toD^7!f!S:Pj$N$Aau=BjWFiU+T_Y>c<8=XA!Y
%F-I\k0]pIGDlY-0499T[`2jH]O*Th!N/?c4<HF6bC/T?hV8^O/l@MIN$\KD9.*]7J@mlHFK5M.NCo#f,n+68<k1;ub1t>loUsenS
%a-j#DRVDgf^F9TMk-B)Z1aR;E4027E=4ZoQ=Y3#(TTOTVN)HeS@\4ruC+kJ#:*oU"V'gAe;=-bahu"Xpp[aC$?JYR$1&C`*;A_[B
%0/[>*K637.:S[On9"U=P7FdunKlo$t6`a$:Cnmk4J4M393U=O[XsrtIVCY#k<Wj8Mes'rM\YWTG>B]=<ghY&TZWtO<9t;`k;T*P*
%Pa`kVm8?kPo9*VMV5F/Q(iLK5T1APJ'$(%6J,\rTgXccbrNeAJd\jiZ(@CS_9Z7/515d:h?YnM\FEM[DP98/H>HTN4-l?G@AVS)3
%Jl's<(?l2t;5CK-40f$b8.DU?o=J\)Pp8cP`VFGA"iR@jbA0bfV)HKZ-Edf8+_;5`6;8c!<`3%u$I#iM5o,,&e&6s0^R2UFSNMVQ
%G]C-gIAnc7$EAr/S+C`gnN4%`4[adk#3bFV,:V>(Y"8q<U*<HIEc<1^6"n'OWIQ%bOjGIRZ5idu0MWYBlAgH`9'*u@;$bZJE;C0c
%]F-VKD4miD9>`#sgXZCK-O`;:$21@[QdB(O*@.Y2c&+'si](_N+0H7,'['$hEH@p1226Sk'cT!,K]Y7ZN\#W>[Pa5Gk*1COg5]/j
%d4G[=YSStA4WCD'/V[`N+j/gX".Bk5P4,VAP2^DX?OLZq.9a/o#I+DeU]Mh%iU)%Jhj._$,](Dm./q:nPt,R^''hO:d::bkj_D!M
%(q4*FeC7*Uk"JDXO`-O34lWBbgi\_q2(D>CWg]t($Z+I*7NTCUoeL$aN^tUo*@"EM"HTjAhB[S*"k,-Go?#qt9UB$$6-2^84U%^L
%66WkmEib_Qg:u]N)&h>f8tTcW+450YM'<k:aHbC^6CTR&I[bG2&/HjqdRTY,=J6@r/YXFaEE,Us\=ale,V<.CNVsGl&(R*;gSKW#
%8*HXm)jP5qarI47KdTQ1$e!T/*APk'jJpIU1s_XYUpS\H7a]db,[r@bTl<gI]ECo%l"S&Io+A/*+tJVrFZ>RhWpl!F`[er0B.XF1
%6+LYeZ-Tii[OEHN;'\ud,''hYP5o((g_i\f,t&A8W:tXso!2$h!NedK$So1_;OV5[Rud,/&5B8ZOEVKfj=(f?2$hG71b#[bK*[o7
%=X70=/5OQ-Y5pO[Q?_kZ[l3S;*c+WDm3ABZHE&:uC:96Eq-rCR1bT&Hl5au2^(AoC`_i4f03V@=3Q]U*Oj&gY(R.'UQ1frU*3Dbg
%8a><cCK,t]@=QjjYc+K\#o`YPI8rQ2-p1MkBf2<Y^R:qEKrAjTIcYRs*6O7e&oV08]Js"G(2$'Q8[g"B\BH]Q]Y(orM74"S;<.SX
%J,f7mqrNT?IJUQU&h@SD<f'7^R]TCO3#\B)Jb9pFo,\&#L)M;/HarXa/>.t<d:]@3`(eb':*YN"Yd-PpA9bp*TuS/%7OPCW,CD[[
%7hPB9J+`K_j`9XkmZ(f./s3nWMN!!^Jr-,-E$SHXlF1R%DGV%9.qK5OUQX=QT0=W.7**YTh^oc^.aU)Ra+++`[k4brjH$UZ`Sm"%
%bH2k%p\[__Nor@p7kD4M+`m"&+tQW`pP;_No&GOHH\s5p=%/AE_hok)MgUI3bDI_&-)-W3*"cb!5;An&&L;52EY)JMpaM'rQ>0A+
%@T?(Q&QQgZLJ-%Mne#+Y[+H(G<>Q[UWYc5hO?EN)YcPU#b2uW%2SLLfCJRg\rY8:5(=:B))%fCsp@dOFD#4=0Z?1rGddN7>nrH7O
%K_[9r18HA6+tDnC?W<=u7:kj8.a'=lPC3@><9@GK_m6hiZLh.*=aCFulIU`$`VWm.>E?"iI2J8i[,Sn#@$D^a^pbdpP:.35#EZAj
%&8f0!8iEB!V7_bpHQ+13/=`e:gF/,%Xsl\589R3qr\CeO)-C;gbl=((qGCtS?EZ,LAl0s8+G0i5kV,ni;;Q+e#snc-p@j?]Fu_*[
%IG`ca`oku&[hl<31((rhorCESZ9k>R.5[JD1s/$$)YJ"UNVYSg7bcOJ7TQ(-Bm^*ans3:+"!@CR\S.8[lQ%nua7U[;n11Gq0q:US
%'qh5`*6NsV]7L;`_L>O!gm`;Nikc6=l-t'i>n+6n(=F#f^*kpKlM_Cp..<^Z0+>$Xg;\_IM^.icM]kh(nl+'sU)?Nr-]uH&'Tr%,
%]<@JG!!t\n)4U*0nkN?1&o#Xe60A+*`]l+_c(>>`p(\8*K@o@&dWFCHhgbIZ^HP6`dodtsLJm@<+0i!\RhA7DeIj#$"2_MG,7:?s
%&gn:^4+0g"O`mcf6hOR]'d<$67tn++$4=Dc<&>g!/@@j9)q\7C>"cmHrQ[Xm<Zrq^Clnh)WtMa8I(NRn"]Mc7;/Wo>!=3_k+0B)Z
%6n3U_[m__)I`gL1ADpKVRAe]Y!u5!$]GlY+ofP&q>CH0Oc^6507NSDZ$ZSZ\\a#*=ZIO;!bTfaiOHb\1%;m&?=@uj/]Gplu^].m(
%MsG9L+&h>/"]o(ZMBBLZ.tL$U>K$;Ol7F4t[RfMK*oJ@;Ya3'WbuMUFW5-6q@6>_AhbSX6$SPYfOJ24AOQ:]75+_)/=7>#F7ham[
%ei4BEU@1fuXSaS(`PLr)1#bfZ)i@XLa&!NGGLe1NfK?albmPpT)oipG0UH1E:Hh'<,b1+I\6`tRn_Ff9S\eb`@QoCbiMj0g[AjiZ
%)TXd=n6F.-1;*I%/BhU7PeY\,e]h3rRYT2ta(P4_=elM'Ll3\CR<;-o&>S+(-n!tRH!+DnRqQZcNq7HG9E]IFTNTok6S.EX4a]l,
%E:nSO`APW30,8r/Zq/kb$IH^^O!\JP/sW=pJU6gW1eG+/K^D^66[&_0UnfE>[\>0*7%`!i7LQKcqBMg(-+0`4?gI.=&dKL?!#=Aa
%&taP90g7Al=Gr3_mdfHu^]!Oar:Y'WhgGA<o?Z<OJP]^aG3KJ@JP`[E_')uZMI.Z<4elIs(lM@?,gE5OVH"L56I*uW:!P.rDFF!q
%kYrJJkY*K<'B$//HJ4l0V-)C$Bj0@];*NgqG(U;eocH$Z]D8Fe[sECDs$*Aur8Za2N3<l0a"pB=I@e;A(eG6R#)j>"7O1,K_Alf3
%O@(Fc'*"@4Du(6LgFDU-9Mm*>B=X>0'[.\V,-==Ma+M]<!&NEX%0k%qT6.Zs9EWh1OGYO[#Vc1;!u(G2^/p;?Efj7=$@_1&&T=kE
%q^[>o^Uj*^[p[5::/H/]A#7h1"k/0)W9t*(QX_e4TYiPoi8>a-Cb\)Q4+>;-Y!ALch.WSp@l#Mk_Q[&!5.-)q:e`%QEK;Fr3uEFX
%GbO%@Ejt$/:/Wr;o<WKtRu,^D:GAj9!u$VnAY):-=nS0/K8Rg6qNTA_&OJP2/&@>9o0QWVgt@u\b/$u1l<#c;))r`8YjAEuj1A0:
%HYrY.YPd,p%U4Qp.h+C)m4T!RV4YNgf:ooM=8/6V[HMmh/'j9[7FCen@O:sV3nh]L$R@K]2:1#`Xm1';rUqG2e-L""YGGH\Z(Rp6
%"`#QDJ5/plV-%)48s5!:DD3Wlp8e#nj:HB@[/uHp^!`J/-jhJlH5;Spc>h$(l^@`4[L4&Cl(@][p6"n>^T29WF\Nm*jJeZjnFVf#
%8.gtXm=TK`<M1LnUq3:;6+&$3Q.8e"0A/@;XKFhO[]h0VV.2N"1^LO:=_Y6GP3W)R%9=V1J6aGtYI_@:\DU(ZojK*Y=@9bF_;P_@
%<=kl5iWBgrg=ci7j:M4&g'UC)Ye+jE++puYDnE>\BJIs%L9@f&ScgZSd(F4la):<46iI!-B,1Yu2bhasm3ia>7+e=9GI\++NQ>Sc
%mhZ>aRiaH=!1O/f/e9QNd3$B+g#q02Yf8@TMn<8L](i]dDkqt1^:DL@6-ku6.cTaD>&gs;l26"egn(Flrt_e)b5[uR0j?SOYW?6H
%e?j+[J/7/d'+piaK<VYWKMbMp8sW\j]!?^Cl#O*onZkeH3Y<)NqS:V:RYE8=]s>b.h[Kjh;QKO(,R>]kjgcZd!!-LIDD2h^GW396
%l[-<`5np508o`QgNHh+,!POnsWp>Rgpc(:kU1)O2*.BWgh_0c*M&6W`@4L-cfCKo.YuI>soW)!lauSBHd`$puAMg]:0CsX!gg3^@
%YF(C.g=<?&r4HReUL4;'i8H79'tadRj2@(fD'9'.rZIlJ;Pu#+$Nn1dE2ScA[!+r$2ub@ufDm-&!A)S:c!hP`!`^8?;<KM+CfMjr
%&L?j#Jgsdkg$rl,Ms='^+M.QFg,ssD*2X*`lQnY$Jjcp:I9=1t#7jp+"2lLE+:a8[eai[p/kHk'=\1^:C7+[C@,G;FP`.7>.!tpe
%BIF"s=rJ_++jMi]2UX[^#j<s:;a[h5o1cbq"X0OrjW:0SR]^"p*G"'%-ru`Nef9g),djh?#7#l&g&EB)!W^Ud#6X)CTe?_28Y_EZ
%]+64J%FCrRrkhmGL59PJS7P!>!d31E'LQQRF]h"MV_.NHiWmF1)Y(s-Ho0P%i[Vpo>s4lS0XBc*(\ZFB[>(`#k7AQ#?19<PTr#:W
%'u@q(kW)J(5VCr#]VDsf[NB@so*=Y#<1`6Bn!<1<g%Be4`X7,Q>@5\>QP9DTqKQ=603;>8Lf3PY:c_7P[PLZ0kjJ)r3H4Ms/u*lf
%nBWcNl2<cZj`k!joARs.j5%(f0st?4^uN5r`e/Ogb*LjZ:kM,e;3npdlOQ*$?_l+_6FJgQeZ_dP@&`8Oi\fM+9lnSSa#F"kJaqo^
%US!TtLd>knCG-kC6!_o1KY<KlR=q',=?PDXh"\5+XA.:tq\BE,=r*DXVD(L2FED1c%HFmE];?=`;^KBG)d&'$Im0@Y?9Q0[#KEr\
%,k]fM*jM>$h,GHgj(R7A;sblh,pd,KAa8(*9AJ[4<Mrbt]O-YO(S1VJM6L31OHV1P)"3cgm68RWE^$)Vf>W\F^4l%'[njY`6/T3G
%3^W"5niFi*f-jA/^-2sT-7+:XdaR74?9NA6$"t9R"+RB:W,=5S\kNh%.4^5n-nSZ2?(kFAa@#FiC(7d7c86lp5o!E:a'ba\ZTj3@
%7]+H_f:sm;:`i[nUdL%WlgSQ:N=dW6-FCVO+"TJQaYF['@"uagN0+VWR;fWOD'&_t8%cN]mPQ'9=`<dqK(+6rUS1*i:6Z0c`X5cM
%O]_ADL/;"CHE-!;_M3etoZcSLVMZ%?&UIeBs4kabc6]o"U9SX6Ius5=7CPuq\e:QVYQU;1Jo8KGWJ_]KiMLs)#gA(e]=iOS2&M,7
%h;WCIj4TcdnE)M#+Auq5C0F!ue^VViZl8SoBF2eA=D+gAO$XUC/&@Z@JSIZ5/e:S6nGM;8nWK23>^m>q&U_;G*\m(MG(A]7/TcoZ
%5r3O(kYF?)hX/9,YE;Y9Y;f;baFA@0:<gI+)amB%ZF$H)a(Q5('4rJP1\FH<ZkNKUR(d6\CDod<*@@p3?.Qk6VXL$^/=,UurM(>/
%m-aH'?5p7KT2q+Cbi-"uFK)m]C5CPVah0*f5b9(fp?K2<:G(O:BC9sMs-c9+)?l!6>rT`9Y4T<KVBeVDKMaG]-@#cL`\,Z<n4Z-r
%5=tI@B3?]CWUjAb;o`.E^?EKqH]*,+\pIke_98M[,d$Jb)]DF/BSk0L/Wnqu/L"t*J8Xu#H%-3.[4Ia7D5LsJ0</Zjj-/\:M9[2e
%ANnh&+Ib>q97W"6'k:+S8rL=(5"fF,NVE=oDPn'+Z2ls`\2@cG`Y_5qPDR+m-$)2A0Ad!pRu9d92I1ui4.`kVJaf'g?I_R4q).&9
%]mEO'Qpb,"ma/1T<o3U\,?+LsZ8PpV@@=QKTWgi=CHbeNa+chPI&Y.n]Y1n9$S)HGk@AhG;nLAtA7Z9^gf'$aD'aXY2d\]2_l2!Q
%D;aYWcPLp-Had'8&Z8EN\4r=0B_2)>7O&^\A3Y[-m=-ob7(qGSjbOXmo@M7u%=dS^RI86\rn?bi/Z`/Lp.JAD>*QD4^#oM`)6&u)
%mE1YE,A?bQ$-=q)D8sWe]8qZ#o]8u3^Nb*J)f^4\:rENA%YB8adJ+.g9D%8cgBbqh@ufoL/gF#2Ed>CQgBY`*]BE6e33c=N>/`\0
%I^4rL:.XCB+j1oA1ojs*q*d*qLQB\s$f)JV.G%3Uro!1o?*(Z%5#*4?#unYj-tT`G0N2Bn+"#JXMF;XCP6?='Ck\Fq?p9(a9ocBC
%HMkb:X4pacLFS*OG8.-mfP&O?XTgLJ(9UqK9(PtnIrF^tcPLs*_"dN!#/'u$bPi<Iiis=_WK/&GX\CO\F-@:q3+bfFArB`\aThr^
%oBJ2@#'a7Y7C1hZMl0FZU>R-HWLc#Tk=tDZCOFu&hf#_@m)/;$lh=W[X,[.-Cd@JD0#>Hs(uJX/r(j:P?a(7Epqu!<q$'$b>-o(\
%=I&S]!_,RRks22p2T]WD?q'D:,k<73$,'?g[f+jU-XF(C$$H\nH(h@?2N$MV_TJDT]3b_Z'#50PF.K!1*@DAn&7g_.7?P5J2]Hia
%o?]a]U!oUYe'p+G`C*NQ[d%Z0YgY(p\bTX2-/+B_;ne5j64+p9,WKRp7kP@5`"Zlp/"XTIBe.mm&#s/FP($6P_t+EjJ%2$a_f/jS
%U&gq"KI9T3Gr0H(\5-!*IiA(9Mg+]4k@]H9!Ega`#5+Gb@R1Z;GD.9pXg1AW@Z?c4U(hs-4]4*0^'%CZ6)1-H4W,/8`H;MB/G?C2
%&/<XE4":@=QdX8ZL>9tOi;In1D]]h24mShhQHmB*p\@>=>q35W=a68jdL?^Vh9os[;'[Sm)3mX-:pd9"o=DWr44ijSGCQNa<L4k$
%(sTZFg(5i<$7J/3U1$<Pf->)T6eBl"NoJt2`uq(6!Ugk.8L1B-#hO[RkY%+#a:I\m;[a5`k%ep8G^`N!=)[Ot(l%_05LFmNBJ!qd
%Wcc>O7[++go@8$MomMi.7NYp8`C`GTF!f!b,p=`L>PY'9neR=Wk)&HP7D`1'ZAL3*NsJ]ESR^u3qX3Pko4cL+#H6JuJE\qo@Y&uo
%oVDWMk9&57>9n@^"(S`YrOQ@dXKdqD^e\[g5@WBFk@+?gdK70m@f/Dni8NXj(-bqD";>//U%W>EQ9"=UOp.b;\q%(VaIfOKF'L"J
%f=FW@1=E*mQB\=89r%MdIp9?m[Fg_K+gS8'Yi8/U.VCcX<lsR*'`a\0U&`J;7B2NLWZf;-s'7TceYPS3oSBtXci&%03?t/+dJQ+m
%/7q"t1'j&a+&_[qf"::e<:[=i/uTbo3\_mq?QtE='s"-6Th#caTZPbU8s*@\@Ujc+"N]_/NZ)4MQ[B2+3lj#DY0a8Q\B$+mVadd*
%rDV5jG$bSsf^g?E?9S%D32E(3GWL"@6i<-K4MUuN^\/Jm:Cn7\1*uop6LM2,!"*g4,JPbbHYpFVZ+D583MODIA`qN+2b6\Q76Z4q
%EuXc"4^Nr_ZmD,J_Q`\,qY9\#@I7Q*^%batk_aV`W/*,S=7l:$rp"hq2O.HBkE".%r%%6&IKsh&/&dL?L"l4$ps#G-8^.j+r3Z\7
%]JNWg'@07t[UN&uHieH_>s5]?e=-@Ro'g@lLVss"-md8iW@q;1qp;,1=>p-q#m5aD[D?>R.]L)VEIhJ#A-#PP-c"8$9p+kdBM&1n
%2jt)bR;st$I/0W-hX*^qpCbnM(5c)&;0@\DHG3`IbpJO'e_$qWHudB.VQW9$eii:l@;WB)f&6J%P=Su-F0^I'J*Gub-k7UMR:SXr
%Sc"F-<ai92>dBeTh`Dgn/8i"N>)7'I^<WOKe2"KDF'+!5/%P1Chn?))WWWSF,RZ/--hZ"Bp?;n^jB61g*^Gm-W`OV*o)Wm,3OD."
%U1#s)Q@N:]s1@4/KrWfZUT^0Ek&/\Yg[>oe^d8E9(,c^B@*.s;dNT]36nIsie,iPB^kiJF?]#`.URXN5,NeSjhg_!JYhc]LlrF2H
%G!&V7&G>i:j4WP45kQ0Q9!'8hLhH#]h4l0$0%%7"ZqL'jPJr?1gqCnq:@bcJ.148`K:O=\!"@r`:IfeRgkgp^Bt%Z"bcpVtQ-Dc_
%\o_[u5Rp`n`irN;Obd5Xf5`]MbiIVEnbYB3l.QDI5!RpX^TC,u/SDQeeVo/Kab"'m<j&>>/^O'F`(XoZKJkYB'@g"knOC?C5p@ZW
%m$(/H3@MJmnDo0\r95ao$n[\U:^+3[JL%L::pm;`iYe)ecQM-;8.]mXFO>Y<FriiHZY\NH-Z6Z"H;k70QA$$F*q]0kl+c52QoOt[
%l!_Z]d_pU!M@k@o=ubl+*0Ptij^27H<_k\hOUK/P_UAbo6\W:2`Z?)S06Z^dD`/dD.O2OcZ2baS&LuK4m&'_0?Prp<\r1u[_c@@W
%IWMC%H!m2H<R"*5(:U3CNbG"+o_.S7^LG9k^sb4..p<k=RSdaf@OXie'IX(n;pVGumkOKYG:7IG56JTk0DUb#.o-"'>L0sa.+:ce
%9\Y+]!&jEA*1E?g2H4Rp.i:lVm829N;7B<uo-HUVrq]XC!FTn,GSp3_m(g[[JaZH)+V*k,[Vc`2+3(b4Gc[\>TX+B@c&[g(^!cPo
%dEe=(:1&D%#V1XP#NE3Z;n_&VW^mD=3h]3Glg<4[5;N5l".e(tRV-[=^,[Fhe60Nh>SkrH]#Hb@ILi_gM<22_=8]l-[2O]O_n>"t
%UjtcEXd^*11sNYLJ4gBc0+Mi+I=Htr5Beiad7t)-<id!d@E[J]A<u44+h(R,(=Ciq.IAq>J\igZK0pe#-_s=k;0*)RFr^bOq<sf$
%Br33=qFIqDd,cI7p"8.$<-.a)E_"Z_l[I=OT'Z11Bc$GAnb`lnHg;V\PU-P/:)%"d!FG]_E@`FKEb.8Q(eE_':88_<6CQGQdj5'R
%(qbA5IG,pWU&q;[5RhB[ma.e=R]1N_$+s#+4J+L=miU$83ZfuN*h)tNr4s;Ek50"tP0j0Yh`p)eeRO(RnDS#K`Ce]nB,T:cPqBm?
%=[n8MNO/=t,BGCtN#8h:]R;(rM+XJ-&[_a&V@"u0&A'KJg+:Fld<\E!?9b;Cj6YAjjf%0EIP3dbr,>R?VEWf1_rKQZ4S$fWPr3Ng
%`P;e!&LA4)h.>Zg6:oiC;&P9HG'^aMN)`>NNteQH%?EM7dLuHn=jY)N/b+4>B>&]:!reN:\KBG@mnr=!f@s1-FFUgnpJ6$\p"8.]
%Q%)\RgidlT+d/"Hr"A*+e?VIM(#W"+qM)!-!XqL5]"Oj4:n.YeW)KM(-e^N/9:Zp`WZnV<e>Y^$C*7e%.Io<iq8tOO6#p"&An0.6
%_d7%rZ8iUX2."nd2Xl+o[oX+52>*Z`^r19Hmt+mMB`%KUpm%:J$W3[!?Jr2Y*Q`:'C(7g)SOeT<8IW^%)Gm7T=KJW%6<lVX5#Vam
%R/+*9&Z/<Sl%iLuh4AO.l8Tj&HeHF4hDc]r8AVkV5F7J+DUr.GS`nWSK)<uReg][(<iYM@&$O-G2ROhsTA>74)bg`VXb;0:E<qLA
%gfTTd.`;`_Fq#L@)Xc@\GOY<0)CQ'CLW>EE3b]nCO(0R:W6HL0X/>kN.lJ0c4sd+m7>r_O)hdQ0g;eVBFu<FQ7kHceT5T>QWjJ[F
%gi6q"g%c8iOtM*[-q]=$9uP@JYc!ZhN@Eb5\T72%g/G/]J?+$1-tZ'I*^;%&?4d40Is5+VPQ[cs;<7VXs'>>B\dk\(X&ni+^!aad
%k;E#UHFX3a+B@7AQJ4XTb+D9:kXT:3f9SSJgrt3n=/$nWQftX`fpW&d9XIEQ?;]O;8hDP+@lhKVkXS;kHRbVWmq=t8]W_jJ=13@T
%//:md/2GfA5^mIeVFZNc;E+>?+K`j(BD-Tbd)sTraA!fkj)0)0GJrto@d*1Jr.qg`cQ.8H'-e\AOD4Eb6;D_/NcPYLH?Qn-@1<O[
%a\U'imGeUIVa3Ye/PPC.Nj>;*T1Z!-`dP!B7qq)hZ@EO\_\nnF+uLS##<J\]/=-5L+K*eH/Q53@l$Ga-dA_Su4qL%!G^dB]X,$[;
%2%MDCWj9[c'U-UFV`EBnMt2>cVk/9u]:TN/<g>e@ap<&#Vkot$/@*Uk840qT,:<:EE:dU]]`2S(T$?PaTDPDc<^Xo$4P$sc:Qp`M
%If<%jQI"g0,[L;1"^QWHf@nBKX6MX1(]0):eVnRUK.-'`;/.+QgsBtgou#Z,rp??Wp,Cm'a8aIeDkWVK7?Jdah\Yb+e1npk74X?;
%<7C1JBRI]1;Lh21SQE`j_u^6c9NMTG=U`2GSO(4X.OB\$^h5*I6;l3nG#B%?ZliAZTS[7;_sr\^S06@6&Bdj!PRlh#VX\)o7jeo$
%0hC0Mq%`FWj=Ue%n?Zs(XPm1/YI_MIT,)E<["8n"-cN*t\YM!7!^l$>j;p.YOff<DQXm%>5F]T(26&2':gJj=DD&090S/bmKJW<=
%<+8g!5A%h!'d_6Vlf(IVdQ:>r_Z"VUpTO,\lJ4(7o&'8i<G'<9At_WQ^h=u?Hu1n2*hHNO+%b(G`GW=52Hn]EV[<T.e.5Y9\1C\+
%ToXsY0Q"BC;<`9R;Afj-^Re\t:Gc]^$<Muu'giT6*\N^QL-lRX$4pm3r^DuWp;Wm]VBUp:0.LLtSnsF863r)^P#XG5=<F<$7f=Yq
%B1r[cOll7Q*0#nEI>9?:=Il-"g^A6MD'gU'/A&3<*n5QI9nBi^XF85W13\Z%ZR^+2?D<]JY8Neb3)A]UhGBqP.RIh6m]OBPHAf76
%YP*R<O-dVn,oI&lF(G`>3OaXjg`sV4e[=]:b-``GV5:Oj]2S@ten89(0XQ_$PEboQ#jgu^:FPJq[W:)8pMuia'ttni,Ee9Tj_g)9
%RGGhVV<25f?C4.fZ+*6\1qSISquF+.=l8H=&T=kEqm%Ddg7omY39XS.rDZIe$E(Tul6;P-ljKah7.&NeGm!`*mqQhZFmc&A,)q:-
%-W6b7Wn+jPe1;c[RoI]Z$bBIV2[aNKOcf4*@IZCVjGF!VSb.*j/]Xru]GX-].PO2ia=GJ_V>DNhP-)M.*)r9!?&[]O1p9gqA8faV
%/>o9$*oO4e'?AhU_5ITJ(oja]7;T?[Q6f/)!Y=*<NOH((X-CmcP_Kf,;M2*+Pe[F%U@5#-^V+q>(Oef'I!3!/P9:lKl+fem^eWa%
%=2D1DpY-;P&[c?l<8hS=1NGMdrr\@^A8CIB3(&s8;N;mrs%FZ#F`HoK2\Yrr5@:L1;&5p,eQHI!`.1h(@HsfGgr+nIn4GuKF&rUi
%7GJU,%skJnUEagD'ePn`9ar['J]6iVNYi#:]NSU:`mqFZi'9=_(@1,"i=1#UauH?AM)190EOnLQ/'pHhmHrGK?WU')+ak04[X3$a
%%;"#f?,[bL3hU3k!srnUjhgCU)GiN,"h!CPfArU8/r2!maF^^'1IUnRdD<*nHG+3i'W`eY=g]B2.#adf<P])^Lh6_s;O5@t72knX
%T;;icDo,eQ=d>RY<DG#,,7Z(F'IOV!+VHXC&n@BrjmT(J-e,iC&g=j/6@:<*P*JenpPpXILPhp'aGC+$'>LfO04rLo!N[fC"6Q!b
%h'Rj9G.pV@;!]i<5Vt^?T%g;i[Z4)(KO3G1cZ:+rgqFH!Z=g$uGtb%UU=TbKF9Vdt0m:;QSMkg]dV><=.HQ86eOoTdLD'7<n9"FV
%loF]5U[*_^.;6W%c1rgkc0"03hu#X3F>S(tGDq[S#W"Q9PFET;c!W?,Q92Yh)-t[&&s&j)=e&fDHh-$o-5thmmTZJk*aH=^OrIlY
%4HJ1_eNeSF43AQB%u6nNjJMOpEV:JGR)9T5\K\W2&^huN@pO$@psNgB]1H0hT+aYeWah9($j;7Pd64[M_o`BKP\$DpJ-UQF_YN1:
%?[V`lmQLEcC$@\MqE=Gjc/:fF3!K->:Q&#,W2Da^4\jPbJ&>'O%2F>Pil*"K?cM])s/GQV?SOosDg"Z!$m^1aIiY]>4WWY@rXV*5
%8`7!YG`X7bDa(%$?gDqbU$1]=Uchc`3i,$"`U1Y>>`VPa'+bX$L\XmtL/hOtV^%RJK`X.`4Xu4!EDVg@/0$0p4bbM#X"jD=TS!tF
%;P.jJpj`9?X8@DmO[LT4=Hq@C:rT]/4qHrGeO[G:\[k_6hPa2a*+#FV\qR_Md\fF`ckfq&5FhWs@MLA1UfDeYDE`WaK+aL.!\K,!
%;c!Ae..R;TnU)g3H$Cc-?!'Wg8OQ#,QK2c-V!mO[Dm,c03[i\q-R5Ju7LLCt6fX+iMRLgd@Kf:qng_')U)g-r;XAiY"P34#F;*?B
%Bf%c>/L(l>V-G1i$j$#c;KtI)-rt>Jl4nWME`gbQGohjtX7<_1Sk`#f80LZaIi*u;LZYfhpV:.!k;KNL?u]q-`tQGnDRuR:plNj[
%8r5U+,%3t`FS,sDl[[c+=h$U=qnf$oN#Q>`3=fo%Q6/18]fSnNT=<Z!bMl8=%r`Z&T$M].B>Kp)7O>+Ob_/0cL1f]=X91Z*a/>'6
%]c-loVfF;,AiI$U8<JC!8#0:<\uIdP4qTtXP-#+R\srIiZ^Y^?@FoK4(K8X/MSa#k@d:26i?9QrF]LA&LBgl_JF@"j4Nrrg9-Vs.
%^Q-d\*c3h^1c"*a9hc]184pnj8+cLaPQMQ<JT=Q66n:`6Oe,(J\VS*GGtuPYcAe$jg?/81KVSKIIRJX4bdS+AYN#937D"#=7u*fo
%("[PHc0b8Em7EZLic]?+S#X-P+T7frkpMMskNsf0Ugk'9e=JK?ZV'/Ja-=H=aSeolrOe&uWViL[9ZLMn,mkB*'NKNm.]-933m>!r
%];LPcrE'"IA37pf$?4-0]t<+8SnS'Qk/HeMej$+Y=Qb.2[@k"JC4TlsHXWW_L"AXWD-3i60t/ri!d+0:>BjN6Gl.M-L#\?\DBi7<
%PkhYJ>\Xp"=%H6=iThQPj_"-L!t.Q0qGdl*Lbf=Wo(pX-.nD+<)2WS7;+ggVk5JY0s()f#\Q83!:O#l^GYsrTY$ZQQjtNH48+N2a
%JQ^"H_-48.ECb#O`q^cef:<E?K((e73:J9^L's@%$1W:uY($HC'oM`Jh2@[:Zj[8@e(rjJ,VLCcZ0-?!\^>6bB<G13m_:i4CP@sd
%0b^jc2\D@rB=tp(n96$;NS>u+1e*ucoM4BrZ#p+/V4$=l@2P)';Tk:LHm?f5.*M6,61pJ[HC*h>mXCc>HS`7m?/Fp.\+Z&<]=iO5
%[h"GLBKWqY@]!Zj3MO#m:I5[b_/$(":1H9'/ZZ[mRI7EH0WOD=dBo,WZUNm3!qg=?rcK#rVE;ER_0L6,e>c]h*_90nO4`jM0YWIF
%NtBj$XD"h/=<2GMC/RF>"&T6!HWg_I]K861JkF4]'\qoM/H"8QGYQc(9Ba.7q`gDPSkB?m;q]J7mh\RcVp)\<CUtHO=kt*%\!5[1
%dq&HUn[cCP`-]uBJ%X2u-#-=ujDI)mq2h,gIH_Ul\*8+WC(:Bp.5V#pn:kII"cZ#$ZUfEhe!"P[-"aiTX@urlX-WE\Vg>]>\X`?,
%jRoN.p09k00!`/C(d6K9Snh-j92rB%U\OP6nKeaQ&Uj&QM'oK3l1$RMC(qWcpI++XbTr&3,:]<4P8ur,Qh&*-T8WIqaV_A\O-u\X
%H7d13+e([7l&j')&BbF^oG:m6I-dV2bkV.c1%aapet#JNK2q<855XTab?l==lpoc@o.>@iotR"#]*(8KC>b$jrr4(8o<4Q)hqEJJ
%"kLhir*R<256`17q=4$@";]^)8EtX;)H(=HK%b<<]54DQW["sjXiILZ6Fp3#'7HFKCnpf"/u-KB2?l+DBnF]22=`H3,u5C>_;X$M
%BFi8f,*C>sYr'(Ok))'Z_mRmS[['Si/[BJ=&A'*@#<r-1PHpe9q?E&j=t%OE'^_V>"M*dpS3r-SAF#"P4th?58=n"$PWk>jLn#h.
%&GLRU]/)^+hAmdt:flm<Xg['VE%p'Y!Lam4<W*V[II/b0Zgt(&$!"'g!V/XdOOiZTJ\U/CGGE`+<6=iKP[lAQFJV(moYRP3BGfPV
%8r]LsA0kpu+J0.l:8\ZB.L1"Z%aDuDR)8fOnft\,2)1AN_T?+uFO`q"Lo!MGRltjWhE63U$0)_0)i:@i*!]\;WO<pDl290XAVi&f
%17mo',(GZNO:E#(T?H6&O2[!pYq'ee.7Ra\/X&CW6<m6n0%_<d6Oo5-)'p)%=U@@FMu,$(+8]*'7]L%-,1bt5&;Y5K/<3&!J:Z?L
%?&.*sX,9?nl5PaL4=':u;7,13])k,b)dUk^e,XC?.^[\tjPmgKpK3W%XH@s:]cS,Am8N$bqeG:,LKDF+Qp^fgAFMZ9N!A\B\_1HS
%Rc`@j:U\bBX0jYkYguCo4kFf6muWs6ih8t7-]fbB#WdM:*_U"?i&sd@5Z*,*nO6.Y<I^D&n\%WZ!'LOZl5&[9ZBVG3RZ=@.AZ:bJ
%6\u0q@.bS8%rXX>2G.CeC72Xa)g[W%,/Y!^qWZYB`@&9sPSc]u;k)dG2CAQ+e8gHM%H#5S=qD&>Bmd878C=$1YTjP*Mh7CZ7RRog
%n.7n>O/lEP7hR=5`Gkcm4G".Ym*?PtJYF4:)QgcN]pW0(UPFCuSLk?CDEkaM*ns]c95aaXTU[s=r+(W=_6ff@/G*[a?__$X.=GVY
%W#]oT'W2LF3m8q9!9a/H5W6bG1_HXb7$\h'M*d&=GBYhrr]:a3gQV4R<7B\*NOl[J/D9l2b;5+1m@#01EB$rf>/J8BL28)i/73Qh
%Xd:$7Yonn&?><hI/UN5kc#"9)k\1L_?7jAohMKB-5#JB,qm.`%fu^$^ScK<hFT.HmTNQWR$Pj<1@pG,+^_f3LcuDades1F&Aec(P
%>-_+c*2'XdYdCO)KYfl2O##YqQK1gbR?'.<0`W][a4Ecg_1[>;\QGt$oTlW,^5OB7bAr+BUY?g2W$VH*,sF:LBqgEU+:EUM<LO5$
%;-J$:[BjO!@js![kp8/(e*`&a6.2(a$,&ci(E+H&N&Og6r$a:P<a#C5=n/Scf'hLC0YT.!\^G*$)ggYoU3XD$,kaS$oY#O0j;&[b
%PR_ssZuJKq;*KbGRNr<,M-2@)"XY<eTrsG9Kc[o`pH<9U`ZiLe3</MV)uJG1.Y!"Do0/*[j(PEj(rQq]QPQb@pohEa?1u$>?as4m
%cKgt0WgP*N79Saip@Cb;W:'hk&BhZ;$o-Ibk>Hr1&DRP9K>#q*I_9JUE/PY,5_!C+oAr\=T#WH`KGD=t`1](EM8V.Y.m6JS[A'8M
%Zg]qe]QE!5gCD6^c?if7$Ui2YZ)(@pB9O>D5_&G2[hg)pD>2Mt<,`&q[_F@<ME0@\6Jn*6N$i,g6Tmg%5YcpZW+W]k83XGt$r5+.
%7m>Hs9Qec.)_NDRT$8a^m=6a6)YK.XQS=L7QH<&d>rcY&:jc0?J",B8[;55SF0r-0+8#3#iu6bc4r%eaD.RhRKe,mbH(6g.jRmCf
%!D>E&aPWlWN3ONBI&<E@4PY>YeP(J\TdHkJIJ4s.CM@tp]\-%r#`_\MnM741KeE9E=MughBH#W>_cREtj",E7gG654A9(o:GK+_C
%iL-acC@+bgF0$Rrc9R_00dQ<^c"E=\[&ZY<KgJr54q)`;6A_O46bSSiM;;tQ!l?GCS/8B>"Ck_:5UHJOk#0MGo>KU_E40S$[S:O$
%-0tGBoFmE@Dh=`X96S_$7Hq=nZL^G?j_:J>&C19QcrA\e0/X0:g$VgXg-m:qAT<_72obdG06SYh4#*qT3a4Yg!F82omaR:\6bloO
%i3\p@E*8@Yq8LBsqY#J[6.Jn@NZo:+ftN-%)M3q.c@C@X,XVmSZ4B<cg(rnIcpaE9>>$Sb^Y``EI=rf4b%Q5"i%GJ,M=qS4ia_3"
%X<e2R9;ta0j0\UP[(%!EC$[-lMG$AYi\5s=PJRlQ"6$:a#igm"W^gq/_'%W`ai,*S8Xe!0Sp-5<(QIDl1KAYZdu`Ff-?M92oAL`G
%diS/g_EfKbB]JJF:[,1G,PH:.gk^OKI2FV:]Mc-M$$NkUZ$KN:bJG2Uh2Ua_7h9+QGM<O)fp?P"OM?"?=i.c7i>u8AkWO6kWL\(N
%n5CoS_gtQNOHNMBN`O#&%<kjg1'<fnLKt\cMeeHmqK%&.iMkB9^nq[hN7h1nDK"k)?;!gu8%R65_bq(Yg3m:c411F+[_VF0)dLM1
%d5K<'pD)*\Z\VPtBKPTJ1][(,(&G7i\)[a.ZoCXT6^Z8k<$HBCpH?g>;G$2HhCZbO5CL:9h```/Wue<@Oof&)L&&)pZlr$f)cH3V
%p8"R%3A5]tX-X%@p!Bf`N6#uE*WfVA,@)T%X'0hGU$0p-V$=,:R-*Yu6-]-r9R[jHSP$;>N^In]f;UTc[/-PMHH]1dF-23s3C`C3
%<(ZS[HF]37A_:#.VOr.klsNDTcu!SF%Yb?O2"ih*FbDTFDJ6Mq]>_:\o7Ii['gnVsKP95.EL7Pn*9&_g+-[A5m+o09)-&c3Mr@=r
%T_\hX$4p**^Ze)>[_T=dDEbR22ZbP'd<%moR.G$F.$$)$c674:r.F].OkBtJY<,U6IujgJ<JBHR#Ya2"2sW7:dtG\!fA#eK*bXEu
%e[2u\9/WIEe;qZX/ZNaD!^Y4,>.8pM<Xnd?&REPV^7En[5)mY0kdKb_4M,f3:0I;'Rl[VQSt9KY&T[/G\_<G#H;,0DL[m0b])\Lj
%m#!Hu,[tq\hF<em/L_8\6Nn5/[F8^Bp+XcOis6CKg_,1fK+'%\Y0gAfpj/ZjS\.^9rnbURlFL*OVC*IpHoLJS7O6XBf'`m.dbWJj
%)rhu,XO__C9"&&AS(Bh!/:d:^/!*1,=?Lmk>%qYgKL8D48clUXTjDDT7)F^qc83=l=O(%`&Id%Y4n^<j3;:rn^0':$k.kZZ1fK]k
%:+4fnI]aeY!AZ-ZOb)Wsi3Mkn9[)`ar5>::grqo5FZG$I;tqTt)0tW&0LFeD+r_d"LC([t3+]u_*f\<AL!fe2i/#f0")%^UGK,P.
%Uk."kp5<UN92gi+-u2.WTf<ue31UIL1ga1gX6#t?Gg:8-K/&do#976t*$K[mDp"Ha(^Pb^*<onT1J1q6O[p-NbVDAo&c5gNf<-SW
%"q;9-JHQ&oY`70-@X!u;^1Abui\9=/0H='/_eS`*2U8ohn/cC-pa,n8PHgFcD7>k*0"$X!IEI@BS2&otg[@C=TT$S=1:M@W^'Tfq
%YaI$\%N.eFdatkYm@<MF%2!Oj+Yu)XlI>qq<cC4`YNCGf,XY(HI:PUsh8gP&P]0TjVb2ElPhULs,dru#'HGgW!l3!bX2^)d95Bi?
%h:mP\OG<=%!'EbW7(@,;VJ]=u?2g7MV]Z[]N2p@qbRirL+>"38:9/dEG:TbK/47HLK80(5JTNV!8ZM,k,\'h#;&7H7!_rGE+-u*r
%O8H;%h```cgDdq,XXL=/=gM2@MN&oi;)NB:4#iJC/Mo\"Q=-5#'$(S.1XmjB\"2P5Ks?A0k_qG>O_p5C=B]31H![`CWb?I73k[)N
%/=Ah`HPg7en!hE!$t50sV4%7N4(K%)H?st9)(T,aXR7Gq[bo3Ib.=dU'INEE;P(2$Ym&]o>3H]2YGW`K190$AP"YH,<TY$#`!NG/
%P%tdJ*PF'W'U?fdNLKA(472<hMUp`a[V^?<_+91.;'K]+rU7XVm1+@*FtQE0Dc3qDOp-t'3JJu2Be3/3X@UjrWM,!;(o)q9(s>#$
%F?0TgQ$\!=V@/!8FtA_PojV=Y^hObGj%&<W6<oMq@2^:K>'Sf]+e,:bL+;Hqp#JUgm&<0#Th_T8YadR8(CWI]p9=5O7,1I*G@S01
%mJ2Fj]+^$;:.R=hbu6&ln!5@Kk?fc\CRt7j,(XW9*Z*JreZ&uc<!m*,cL.3:&5sE3<,9T4,0;@&nfkN.jD-R1RWdHuRJhiYWs4;Z
%-$CQNJE35BR"o]m3TT*-i<qUH2AJ#'jf%t2*\]]kp/l#(V%_]P#7*)OZCM\h=cf9MU'#`i"3FRZ:+=#RfR.^PdA`5"2JZ_?JLR^W
%D)\TFQG?^@CI'N3RuOcf[W*4&aA]kX&<Km-(Dp[3+oe[u#fi-fpnfp$\'rBsoXad.,[8Ndd<B3W+ql)d,%rZqnKf<V9l45Eit'/o
%FH)5LXHYEa,*X.Y@W!ieq]SV\+0lmP3d)!A,6PDhN3gq=+stHn8BDl>N<@('l,S3P2atp=&et*]d6d5jM?J'9R&=,(1S8-*7,CNL
%F]A">qdN,P(9fZL/VoOcSJZ5`Hb(0RQ4\\sjp]G>Z0#U#ga/^@n7D*?^-i?=/G,VdEm`oHi]nJg7LNWtkL-^hV3dD7pGhFS(g=ut
%hG!!flUQe,;W#OEFC,boMBRN7#_Qf;3X%W>3X+L,=:JaJ;c%[ER>/O>1?,`RYpc)V$R.ZifgPRUfTe`iOE%1k;jpYA?n:Jm<=h=g
%A;;q2%%O5&Gjf5#^;[Sl$1^DSli_^]DH8TQ3FoEqeL886F$6?'dnOf0A,+hqN7d'#)!]'Wga%j7XNt!sR:Me"$'""7j$V\<eEEn4
%/PF2a%::6X)*pMUU>ogLp4o\MHB#iDgcXs9e1;sPGR7mJG@S9TpLqA+No$3@,]64phA"^`LI!k>']Voo:8_&P!pbdu?Jt7[NTH[+
%E!;GD(U[LNJBK]PPq:!\i,eR]3<oO`[HoqkUjJph-AO<@4Y0g=[$Ab>EEnH@b8<m@A,DHEq<061B[D2;BWSk&]7cnX]_iA4guMS3
%rOB4XHr;?e;Mn`?)]^&?;9ah-m$E-)>OV&1S"PT^4H;!RfP5d)*Ot6j(XAr91jk.O,cZXAh,0H`$\,)8E-B/nB<cE+)n8.lTaJP'
%k"eJ.=Cl00Rjd]bN8r]_/_Sr'neMBDCa6&Td:a$E>^MIPNS*r$m&/IPmd5!)K^T\a4k*5]plXiTRFoggNG3/Am:"(amCe;@:I/h7
%hP+^Pa!k]hoks$88LEW.f2G=Pe#"cfEPDZ8q_Du]GDpFR"HOK/mtdmsr#pf""5#Es1l>H)N_.Ab/#XaT88qm5_ujZ^G"M._MB;`D
%m?NmH*.EQr8"cp6k,oP.?5_XdZ%XdfJ$KBfA7I%aB0\<Xn9eqlIF5d3frSMR":$s?nPi[-2EPK8dr_N'd_/[?`I;IDqso8;Uj\@3
%'#C3c[lKJSg8SU#dL+OakcLIp+(W!80EhQ+b*5ko/epK))@@spJ98@SNsiKg=S-,/:A?8eOZWf%4h/S.\bW[m!!i^g";-2R("5=6
%l7<#k)d*.N`V93m9R1cU70Q"<o_"HIe^1cg]>R)qK^X'(dVu?kN+taH`H52;MS;*NqM_'d#A%42X!!3ih2o)T?4^j_3Y8;acJD61
%B3Fafm5*R%8-gp(1,3<CX,6bR$BL'/F_g17!-J=;foeSMVVsMT`#)Tihi&CN*.i"N(SbSp3#P%=_'5:Y^DJ?J%k=0K;-p@N_r/Be
%:me4s.P?VcM?:HA'M-NoV.^b*Cob6@n\5IY:,Us.;+?mY&Qfo'jhXjBNR=C)2?].m"fs&k@s&J&Ft=r./IA=ijo]F=AbGAJT+g=`
%d!f'_MmuCl4_?U_"X/(a#fk]-qdF#,&.5J&i.I,cPYGb0dk$d;AHuGo0?g5;mh0L[pk^db;GKX*Y]_f<^+A#F_RNWkp%GOY3J*.t
%.:9,Z##b!H?f1eoH@<bC7qe1>/q>ZPX.k-!.;>q?,*gJJoBH)1*aj&KYJrn-]/=\b[Qs,XGmsNIVV]@5!%7n&2]F2,cqR-Q"6N$r
%UY!Z(WEG9[k%hC5YpCWO.a9>]f`D_O!n]ND!B-RLoAiF/Q"_&(T.S%2N.tHCW91B4qYA+;57ssa`jVFrB94@oJiE_d\:f9@FOGh%
%VgIs\)@)*!SZ8rfk+]@qB`r+/ok#s+'bsp]F.oP/.8N<(**7tdQ9&hU`"S<[BlZfl-TaI2SQ5rmdR$,@VWA6MXn$O(05;C:%P&8q
%8rj;8D;ih\DV*-a7.8YMAq-I_,4Xq4KW\juNt?jS)!MlH0:S\CQn/q3PdYD9Kc41#r$,=.p`eJro2MR*/dn:db'R=2m6hF=]An6`
%2]gFo'M5+?W*Q"0GFTS"'L(LIBh#D'RkMbN7W)9\5bDX9Sa=l.4P*NniR,/1-A,lo>h0<n;`[H%JQNKl)"lV<%IV=ogg55`CQ-\"
%LJu(;mm7qA=iN;9kkJ"5r6`Ja=1V/Z_L7K1+JkZ=DV:U=ZYBW&ZESjJ>O^^>^<[j!;U7U$o2[(h,>2\*$G'Cq\?RtDRZQWmZ+sc&
%Jqth5:-+IK`;RL"Lidej2QSR'`k:2U7+Yh(cWjr([W(RiYZH.F7eRod#il2`nfT$8'1$[Zk7uDjZ_CT]^2^>Xa?+M;Siq[p,rO+Y
%*'58[dI]fUO\Y]WD1>WS+IEFt$gMQTcp>CAoWZC_8E>P\;7#*=2'n;0j`d54>Y^Vs6M4C:"]h'+6NCaK#p'tUB-Xl??'p>:2"N5-
%Ce<pR;'@%'?UUeEeZi4Q]nW&OWob-t_H6(X<qDE5CdD`eNee+^>LJ"THmEO:+JDMJC.-+88cuR/*[N^%i(6sNeO=YM'pb)IeDe<m
%CIEG763$Y'UZ+:*=q<BRV"HMAHt_HP7GA0S"f-L<a$.t/C0`ujb;0cN9itmc)?F`?;s(4F4Z]#[n]r#XKmk.`ApV9@GO'tIde)[n
%<q5S-de:9PQqnPu\I1RglT</VXsn8qm($c,CK-SK%PCt(d>1gK<%JYGGT_V"/^B>W+rDmdY=pVi`WHl*ol1Vc:+"Vu#g6Bp-PPi'
%?:eLP,oNjT%XhbJR:$<^4YX^&b!&Y<l:O'BWF3ei?cc\>6/9RiObnu4IZhP<(ag2;\$/\hoF+'GfuGA&;X74YgRC@Xc/.)fEbp>T
%9MTs!-E-.%q1LYh/F7TiV,C.=\$kc<H<KZtT_ltj<8Z9j<"l2&fX#H:SPt8XL,bNiNK5]l?l3cEI9aV:P0\&lO+hm;QB2^.3,WmL
%Rk&8=C/!<e,bXH[2k`C4k#,Y@:&eYYiGJ_jj(uHCRc883N%g'<O,U;OKuO?i(tJ*\9%\tZ\5L1aIE)U<;KuT&dJoa*>o7"+k<1N9
%EeuG%7bEttFu$pXc2Ir;QpGRj7Mm_;oYi=*N1EJHXpZH_1k4.Q7bCgJP7&OM7"Fko#UA*u5R7IUp-8lch8HF##[nS-_FVS&*X#[u
%25h-W\]@[3+07'@T`Q%[DIleN1>N/kMX)Lf+W<h,gAi[GqsKSid6_FahSfcW"jk,2I!9M,AQq7LF=6qeGo2JVp'&Zs2\5lGjsD`:
%D(-kl7I()lq6YHCKCo5bUn:m4NiFl&3oc_%U[s(\\[DYb0S)Nk??.bn[K4"C=o]*@;%4+\"*6CO'1c5gp;Q4h\rfHpo7@YU:77T3
%D%0Rq5io.KOERi)&;j..IV;$pjIXY?/M2C]pg.8@-nXlHhKF/KaXi4-@oi7()Ho++K980Z2'@]_OVcCS"TJR.NA:ds]<Kh[*Sc@N
%Q5?Xud6HDm3K7u)$4hqR[UOtcFBjG?k;-Ten\1p9NjdH&_)G:@-Jo\gc2=BHmiE<nC!jaL"?q\kb;bpsI/#l"E>ad@>>T^<!iKVm
%:6?2hRY')A='n%#K[/_oad]`ZW9blJ2YH-Y@1!(AmjsrZN#-m=m`KTl$$t8uF"8T]K^kkKiO<:dS2<0H"0XPj]X@CQF0#0oc)iCP
%p-<[d8E`fi9@bUuhchorRQY"lDNlIh(i=DSqtD.jDp&tS2fatW0kbIF@.r'ZBPqC,`&l/%cTSMf$Jd!\/@Vosd?Wg*C!`(*2E$3X
%*uJjAX/FJ6h3\89EojjV-#=!V2O%s/3npDu]=+OsQHOt2Q46rVT>3rckCdu_,hT&4`=t<k_F4N7Rc8[Q^`p1'GK15X!Fqc]fPnuh
%rGfiSd@-\X0Te"lg/ig"5YGPPG+$&#Y==KXj5hY#$-?dpc0Ae"'$sUja!4Dg5lS0_)Se/V,\7MMI2eIP,\NX2gSV=agE>=G^+rk]
%0qI<q2R[h(:`-5N`N5'J=QZqEP0A$mZse$nU7d]FUH-G:?1&stb^54207A\QS\iK$#&W&$ebEU_GKS=793Q(grAkbnqU(Yd?9-XQ
%`HAX[Ko`)T6aU2<"@k5qQOuDO00rJDKsY6emAJh-"&"V`p&dqs<:9o`m=]4\Bkf"po?'VI,pIt3@m5m1VKS,4:7<(=^C*i>R@P;o
%fZ@']Ar'`;C=(5/1c:RjCh"heD;T%@H_IDro*m?0[J8=DUD@[#*h@(8VK,W0mJp-Q0ZSd>2RVAclfnb;SN\se$_5L>>\Pk]WP6?t
%kN!D&F\2UUARB8+X!3HX/cs`$]h/S;P0#`KhO34_E1PF:#Vd*(cn5B^ActX4/a:MnZG)\XfkGZga9_C[l0Nr4nem$QqTfMg[J2]1
%5pMAhf!r"fI9kR7et+:U@6tOq%)a3Gq;aPULrLj?ehZff1"Og`DoKT%^k_QR3Me/GX(BQFSum',XZqQ!6M8IZPf7+-0U<"*/lX=)
%p@4"Qj;"qjbX^sLI"P[X!]Jks\i2XZXmsBY6UB*`OLIqPZE8RYh4Pf?D4Q?kV$f#$c\\79j\rG8SWuuJW:T)p_93bM`)Y5gZ5g3G
%I!YK=[oY1p\Y?o#$$Mn,f.XQQ>Du.$F/^U/nlB?c?0RTq+q4CdN8209fCj$l<c.h8`SX!PgqAC!+ij>%=g1Hgk%7BH/2d5J)N;\<
%ZL"J?_0b4s12\FTOh>osp60=?)_EeV[H-7"Fi[m91`PkV_hLGM8M;'gS>6ta&,CTU!iuS\;Sse0Z'rt[Br2fs9@I]kjoBkWnbb(H
%p%7>8F.i*M2hr^J0jW0l(U&_mQm/bShWCX+-!RB]"&aW"k-t!kc-IBH34N7.I_Du.0/UFH_fF3'qL),21d;+pXu*mOT^,lsIRImi
%UF4BKSCdqiO6u(\kD'E/RQ6;h#PRS:kiXq`9&R=f9co>]S2htg(4=Sl),E<]&JMQB3\L5b#<FJ>T"&4XEE.'7O7tu]SJL.ncuI+Z
%1Z1U?"]=bSa,S""KoWdLNqeMF2\o?'4)Igp6hl"rTG*W63Hn3,";+$(9f-,shMWpsql:.Qh7[r>bTN7\@_-K2*lGZV1Ng`6:EJ]m
%_@+%?ZRff!s.3eIr6i\h4)("_,=[!Q=ZRL@V-35ERsLo6\j,nRBBa*ujB7MfXg@i_i`XF6`Ec_^Q?7Kbj.]]I.`-AW/:jD4ZoVoe
%D3d\X,m!oGb7Zh_QrWK9%p`'kjFV&c)>mZ6=j>I$7X^`G^_]LI"ScfU=Kr:?TJj@"V:I<f7^;T!3$!4(_DB21Q9#7o<D5/jp^8<D
%2oZbKC:tq&Wn9X9B`tG;(3A(R$)b?tPh<E(5+M@@Y,gW.oE&5U[;Iqbp-MG7&%s4;XPi&LhK+[YPhU(9oW+1jfRrRnOHd.*gR'?C
%NS:@G^(?HlYc#$?Fl;3(7&PpT8:%9cV.#["c0K,^%<J14p)o3tVa;"B7"n/MbgO(9MQ1c/9B%9Mjb.kBZFqJl\1?D-'UcY_9q@$O
%dnRlMjjWg!]Y.L@CY`UGGegEmT\t`f3L)`A_\Fbam$.d'A)$q,4&m^a]imVaLnIX"Z9N$.jC%8q=(3j.=68^<nu0cuf>m/[NS,k0
%Z[DYlj>8^uiUUt$85DE'?9[5P95F$"p@IAJ+TU&\n0-V!E#E84,O4mY4sRd2nn[um#K9Fp2$)Z]%D`c<mo1*^:eoUT`ric/4.\i5
%;_5?+8+Q#\&scVi/COIdQm[0Fn7rmXH+%PR*4eS1-0t:jSdbnfKdVc[6+hubn_s[HngpcT]5`<W?HBH,-Vg.43#oqL>NFJjn#@At
%3RXk'cJgE6BBIul.Rt#M^#(b`qQ@o7.o%8!D0A]tD=E;%MjBjTa`n&/L!SI>>%+Vfq[;^"G>1kOH'u48Op.hFn2#LK3`$B(AY(IJ
%TUmO_btmA#?PnPg*?F'Nj4Pj(#Wq?]-au7A9V17Tht)H6]isO&qQDH`IJ3J)\V98Ip>4H2\r8#uQ3>eAjjo[H$g%(m/RLKH<mA1<
%DFpE`OD`AclW;MO?YT[Edd:@-M!@UD"]QAZPBM;u`@L=6R\u^`gZE7gKm'LT+Mm08;3M%`)+tE7FR5sqCpg/`?8+al6PaiVEQ1Tp
%L!l>S4B_.nZ)nlhJ-KSk8.`FZ#XCL.;EYLa1+%feo<*HhcC);1"UP3TqE4_]-A;k27V37V'-W(T4;CH$*XO"6V:[(\*1BZI?<WHW
%j/j(0aYJ_iL*]$;16`3_2Ili3chHLNaDY055tEfsE@@bTZc4F^KBgC6C4,D*p*J-4BJ-E?6s36HV0F]Np%CK,rNI`9\_*)hciQ%:
%V<"#T.7F!Pad`fXV-qEo?R$6iW'8i3RpFbgrl,cC`[r2,Q#[8>pjmHY_o9e3<D=q?o[CC"qnVuBcUeU`U4/^$_kBX\e"iO<PN%MS
%<RFH)/)j0k#$DQPod!:BI/E>_38II<IU7l[=/.GXeRuU[FZj=ZrDB$1HjfInA[o=>[)OT5%u<?WQt&1l?qgP@:e8<u0MW(EFFNCi
%brEVp=MhQ`MguMt`oGmEL5jW4/Gop??A^g<OFC7AcrsS\[o`mhLj@O_cMXup5_PK]_m0O%E(^f(lXE":(<Gud'Cb-pd=>L^`Q]^Y
%Gbj73l\fV0j:nr"4`H;UD@GG*Vg,Ud]2FN;dP'Y?'UKfbm`Hu5Rs*m-48F*Z'V?c6/#O4Fn"!D4UOCm^<.*t2>tN"9cFf?ugBs?%
%UuK*.e!3nV-MDU$b<+a<5@!Ijcc.`c:X0P'ha,XgTT\`WGSY8K?Ecr-js8p.VkOBr&l..If)VWX*><%/S%S"15fr'5>f5H?8=:6N
%6MEc-U]%P7'26?n;XXM]hVG\@b4J5/EtD)VoXf+W0Fl:GP`)XV`&&PcYfuP0SB;`ZLS3H4I,a,6B&+Jpp_Y>U1;cp$`b4f01J]ab
%A?8pVIL+%e=hlaTqm\N2*fP#'GYWfY(%5M4kDMo'Z_Y!`kY\X21M(Dr*oMS]bd,!3pW*W[q"EMg,8e5B"!]cQ!T(#=@#>B%miE@_
%[0J\hap>-X7XenO(H"U,?j,XFIajqdRk;9nqsN@S1Br*hap:J>idh\(>,dRAi0GTRG@^n==aFW^PPD^cJn#U&Cu>q=h^]YU\S:/7
%"5cmQ=#R;;j5&D(]@Xt')]2k.^3<uff2,%`+T@r\r't7Q^0fR/*:Y-7^dtUkd".<NO5E+b^_OrXPn'=\b]KN\f/$8J,KD"7/t;[+
%83Y3`c:*t+[nS?k[/0PAma(a&nV[l877e8)<>P>A'f0n6kZM^uj:q8TC*+eGYss@aW@*9<lK!4H>;*\rPse*K@BlKU=@/beb%T\V
%Z:uX;?b@6EbYN!uaB7oTcdp*_@g_4Go^E$<Ap.45Gj!"-e>+L17Lm.cWAj1U?m3U68c3J;mRmRLlM)g62<;S__JUrP8lI(6_5Ku+
%n34H3CiUL$;<"C"-:jpm\[@<]bOFNG&<"0l7C=,Y\Z/E=BN9cRJM51:^%+U+L_`YEjGOX8`nH/o8RU1oHO>'('3+8hS-'9'K/=uK
%1<g]F;Ci,NTu+T$*Hi'4>KkPb;Ne;eMsWYIb]J9Z68u_d&:&Qp&BUp-1jAO4i0b&_-[:]fZ6m/AiL;PSVn8K><O=,3(F=kCCU;5P
%+(:k`hCX-TN/0(O$M9At@G*R/c^m%SgT-lUm4cHE1Y/7W2'JqbM`qo+Kt]T"22?h:_fAZC=3LYuKYk57B7k4h"+*rJR0AG$2UA*p
%`Q8I!4sJ?_k-ngNB)&@h8P:#NL9A>](#k/0D(t*s=c^S\5Y)h)N+GWtEY\E##AVe-"jpDs5s#FJ/B^tKVp#$rnK<.U&lXB[W)[$q
%,A!q'+g8Hk%qI2^Dfp`G89D]umOST93:/$r6huTmZCO&SQ-5J48Em2:)RkfuOsB&FmpA26a:Jp?^3_+L]3WUFM9JiYJVi111D(K7
%i<'g?e1r)Ea>A]Y?X-RkSU8%(Oo%OLi'KJ2.fU%%#b7_5PS&MIFc%:M6NqAbrL8#N*5'*d).?W9+H33V!aP:$EJ-K77r<pD:L;O"
%NI^TcK/A0adpAj_W%"l>>1*ZnhnFH%7\I0dnh))Fd+X@u,YVJpWuVfn4_caQE1C"!7iF'Oc(+a@mM=l^KlF(_27uJ$*RPA)geQGe
%=?A#_OP(F#,D7&$c\Y/QJ2'('o3gjG^l^s9M.upkfg%[ijC`A6S52,@.sI5Fj#ur1,\p\Ak;3`S[RE;#9,6AW4SNm/'$hSN?A[j#
%gBi3#Kk&tcFGkE$eht'7hK_sApd.*p)enu-GRe%.>hC6l[n#"pP2Q$9l^Tl-\*kA@k<kWf/*e04o`s(D*9YpGcDG"]*aktt*AbNf
%jAh*qHTW9)d`\:p&gP]M!V2D4jlaY(SAE::kHjhpa%:h!K2FAB'Q--![#]O!MD<[i3nDiU4B3mM+&:<eK(G$OnG9[59e<]BkC,05
%BietJP<F5Wl%7Z)N#a`s]dWIF4H+/_/`@[m:hc4_XQe$/GVljM,)f"O64%G"\d)af2;->7_SW9Y,XF<2bh<i0P!W0q;.%'@edk]=
%a]CeL"(T(_eQiRC38)c"qICRM]sIru9<#HNqD:pAbcorUm+S30CE9"rU/0AV(>:Hu2bT^cbkg8UkM7"9;%`oaM5Yc;P]!6aGPXuY
%d*-S"3C5^mqfGAAG=EOE>Lc+mHCa4fT0@Ea>E3PV^,HKtJd(N`g^T7,V4mQZ<1\i#>ms'YMgI/$kt?c2_=$6N:/7oqB#'4Jkl/u>
%8MUARKqJdgSPH6Qa`?21HmJX94[1b%Fe3h#r501r@/S>6\49WC5=!!hb!3"J*[q'!LBu"mnul-FhbjB(\iimhgCjCp;Z:_I7>[6"
%mpPn3*T''Md58&^Jf`U`',ureJa7.7\YEtt7@NCALh3d6pUpfGo#c?Xle;O5SRs\hb]a,]o8>>@gPkaWK5o]BlmKmqrJ2i]Q;9)h
%PPID!>HZ1oj@15Ymu)#R^jIL;HY'o=-&it5n"iJ=c9(V\q],@GHm`(j^jI5^_fhlj"),8Bha:K?Jbm*LI'G?%k[R=ZQ/)G#QP/4\
%3)$&)8@:He6"Cu\=TX[@08pqo,<I"iV1^H>-i#CPTEs"GIVg$L3p4:GX3uQs&T`c1AZ:lY<?afX7$gtCeNI#>888VZLrn^3@nD=K
%gER'dh`OS3rag*7$l/\c$C*jf#=cG^K/h\s71E.uPX:su,$S8irbcPQ$#'_l6e2!G/'l5B>1HJoY5!V^#NmCuo-!u3h@[ea%,]MX
%]Y.L:Z"!1_gB$'kO]F[TD12<Lb,`8oYJb`D7kpURHA+`Uj"J>sG(Ks.rRn:G9!!5_o1lA?<g\8Bf(Vuf\.\+Y5WfVD8&E)I3:pp$
%k7?F//^eT>@f6@Z4qR$'AN^Uj!GjqRlTn(s4;`$'`3q>+)]\Tk`qk%)"@Z)pb`YacCf4;aM`$7U"Q9i/KsEPUC@fZP1M!!FQS_^h
%o6B:sJdNiSXl^GK.t5E&YZ@uq)@FUmDsqN>4GUsZA+k1o4'))jP\"KUeESY.R\e($C?l+PMJPlqB&<i4F!cGJTo?[SN]+@\4PpdT
%<u`,H%=5C<KX7U!>_Rd,gADk86/jfKfXXs30p_XP\9egLEfUN6,nhJc4#hNUO"9V]"A'=/;A<g1J#ZFQ$9klWOiHsK4IR,ZE;\sa
%.YPH:p/R`/PLOb65]'5`3-qH9ek.Lo#rp<R.Pu5^3<aG$J*"#ABFYcI*\0Mla@M*uCiHtDabqPYKTL/Mmst;2<[7^aVC)"g5,)6u
%+W<c3eCF5<cu$SU/+AXIoOJa\FF=[B++CE5%YL'an_HQ5arh1K/[Wd:kTD]s1OSX8K0\Ae+G6>#p-AkUV"q*D?jcR4"X3\ln=YAP
%Q;F_6#VJ;G<=l7^EE,;,fo<$<_Gn.H#8)XcW.A?;H[F_*hnDhdiN&FSJ,$jppi$3&s8&pKop;<MmAE2GQf%`>YQ!Kfrpe<!WDE(l
%V+iP)O8nk)(&?RTf`*&@Kne_VT9@K`P[78E)`Y!"?_B>7g)$Y=$"g8>\,$J(L?-q(,)@F<-:pST#IP<2E%KB>oq(U2cpmjPIYE_3
%5CM.]XhC)iRu-<M31"2`b5-ILC%TA0$ICZsfMJe<+pY#PI5/(3d8!9I(m=o]JT!k>E505.`$U`Z-2$@LW$;UWRJ1A^0+2bJQDL`5
%hIg38/`b)CU=JP<;0-k)2s8AB'_+;![oXg=l(n$]>Gji1cA4=H,*)[PqI:UTj43eEmA$eMTo,5KUN/(8/ABarMBmroO<CeLGDUR8
%N.a]>Y&46bb4KWl@m/K)2*WkmY3AQ^d!@1Hl'otEmi,S_9'>6EARVGX-C-8Us'FO/&bu/]id.J]HZ8HdR%1:uOKF+>#RtbAZh/C0
%O4X<NaM$b>Q%P@/F(l]XI1D"BUeP`e:>QV\h!cX>ZV#Hl5D'4rda?G/l5%-ZW&Yf-M.["Q8s;Y`T7!m(bM@?VPL]]lq2ug;IuWVN
%fDK3cI/&Kshn!m7CK[B38o2K1,FYVeKp'OgUCaG&D@!g#j,1("EYi%_oag((`EuGE>\\olooNpHIW5M6RkJYQb>)Td]@K39@J8JA
%ilRs>a/XIO\:RT=3:=FpO5-Kmq##ZO=&47)j&bu's*;8W801TW<$P<B2:u'P6LgG>*mDFXe``$;1D,CU[iVj=m5uSsOCaO_3CPfT
%D_*Ym?ktKbh<\#2(A3mG%`:O`41#mo_rmc(R`4&rW`i1^WJN)k#g`XP]/V#;ktiuZO;O:hH7sH:5;9685ADLCXJ*D@NHhJiX.+#$
%I`u]5#4a.O;f2X<MW#"m]p2dAMui0Ub=<\>1:#)3N:K&;:TJ9jqeLXkr+YRUH@>WaZ8$@fmI!"#adEejDT7ctH#dP'+IB>:)uJlg
%*uTPLGKT;N*eOn_63B`;gQR,jc?:t-\+O.YI*OfhhHEM(]Y1o=8&h1^:LTk&;O0bRdntK%^Gt%!ZZgY?bp3<ZflYj.DOjnp#dAR^
%17aBT8[1BMTf2@?Md9d(r7pWdZ$:*(7_f?d-uksmBiYl\/N^Pi$V,AO'4l"5PZ@54\r\(7:QK^Houqn0Dji+9U)(.@UZdW"g"'S.
%K-tTI14^^;P*CbpZCk8OeN2dW<0\F);+mR"6i^=ge^7NKnN#JNbAP.aA@T*"/iCr8hS$2pS#,6D;EpMZ.CfL/jFs02`Y!W,pW+C"
%b(H^KY_D/g;NUD"<'g$g+_&8l6f<Tp_O1`Q`N.OQ6`AMT8;KBfg$R<Trfl>?*G2DXYb**rR>.?U*!#b)D_\tC#&1c;-l/tCn'%qe
%KFo7.63K1*_br$79kq&*6h'm2*uTQ;'MHQ$,]%J4nLr/t]BOn/fcIXWjcKrADUW&_EC])ubf"G_D*D:t,NI)a`N!fM),ZiEWhb.7
%8>E0#n1PsJZ5HeYFb+SJYoYj4g'g)Lng!0jMdk4]5j0b4%O9Q<dLfr<MuLQ(.BWZTDE)(i<O=>YdP,@X'cpchAaIZA1WpNK/of`o
%QI*(qHB]LEG,5dN\fD7EChO,IRDN)$a_="e=S@8%W6)s6UFi#BWn_=AHmt5C:Ch\sn^)bPY=g+;]J?!a>RIhph]<[UD`31Yc;[-;
%Z'8r^U+?d><EN53+%t?TcT+E=(O\"kmhQKZ7ZIL!`@53?n;27[Pm-B8j:BjN,HH8Y,%;Jf&rtSAFeMKApfWdEfa.aB?>>0LjA;@"
%+oWVE;N&GBOpf'=[:s[;>[8J+k>Ak))Tn]9G:>1X_[qf//o\4B%nKj=NSV;#ASbR34`#%srul-k]t38p`h2NjF]`1MZ[90%l[Vol
%mrF(rYa10Bj?-o+l1CZY3M-sWNDJ1(aS>@P;ZMa2D@`Y0pCMXN9s!IRn4Q#37K`b<4)9:BMm`A.c&[fJd@F;[!d-[0:VVY!ed/Zd
%`VO$%=-t1aid5Z('.:[ar)6p&0dan<m!!MWTtFE[%"7p3$?LH?cebBV:pOGE54;^J>_o7P:8aZ2/&VJ6+OZJ>;_G,qa%@C85N2"[
%@t17DrL*lW5Q9eH5J6sWn,DK7I9R2J1:/jeJKR-_M(ju[Y3J`s#uGQaI>!3FfGtN_MkWY&+&2Y^6B;Wj.?Rc`/D?G0LDV7nroHPa
%O!-M6NO_0hE>I"a)73Ot*g'f2[J.p(1OQ"t6`rpYUSW-K"WpWFPTE/t=#VJn&)BWB&Kk4d%<+R$%q0Zfpi.QsYD25MNUQn&daipA
%T76R%:]KC_J,?;(r:'I\oI6%is7@0T']hQf:Wg,FqmQ&,$2n9_MK%#AX9YH=oDRQppMW5C3BB0YcN6ZE<r#mc%bf6e;?1*/,n,+R
%G2j\Eg[Uk!c\)eXZ'TiUU'lmcqXiV(4I3'g]@UL[jnC_4XQ]T&RI@K%7Uu#eWuF2s9g'fgot>fSEp,!:J(?B?Wl!4$XbVa6>k.7&
%(ZfsbjS18D#?AF/^K?e(gt5lBs8K'kP>bpWl89(BH;(nII/j.8/*P=YqnN0WJ,\[crprAQp,@L$GG"m$5Q(2hqocbNp]'Km`1$L[
%lc26g`II`>J,8IQDZB4\?iBIEs7[U\Z[_Ms5Q'p'J,J']])RgTq<?4Sq=";tc'JD#l[S]s(]UtP30+gOX+0md5Q&d@ql=#Gp-8T+
%s*FS$DskC>\;'[?s6WmZM"qRKM#-"tGoi@PLH4s#)qEBfra3]DR:Ss^la0Z3m^-3^;'V'3edRk=m&o(%mgb*t`-^<7pM#pT5f:>-
%H#saSm^'g!gY";USdOZ^h.C8T"\u$A$`uqR!=64^.bX#DBjm'9259Y_2d(SH]!(*9N5Xm,]"ND`47f)B<;4k:k4O2`V'tr=`4><E
%#^;)O(FZ]s[ZG[OgBaCF!b,Ft)C1_M2Zo>`a68afFG%1k1">&0(l<r^H?,e,hY,VIj1+u,gk"m\;):H8HgCe1FUqlXBX(QjY5J/K
%KrsQIj4TroHeb-_[P6NcQ-a.9Vg?YVO\.`6(?s5X)o9"BmBE>&[+iTo72@g8(m/%s2S/YHo]ho!Jd`gJ2_HiUhP4p$)DB@)+/^-$
%:]ZX'C$ksDYo\%,*O'8//>:`4`tEg>[Jjk<S95*+iB]4]UH1KgKGMutlFWghU@(n!qiFtj)NKsc8'43Q%p"@55Ncpf-K8)X)`7O[
%"`;K\]dT5E5Iq!'0&C=79p6;cY0K&j+'K<F=&m;Y,/=IV;T?uE/(Cb2<t#4%4r(;6;G;'@qW="k#k5[(aWipMHEEln4tT3J3.;th
%3/Gl>$NL:^k;g54IG$<`TI0&1aGERdEmLm`B1Zs`p!F\qFg0,<h^&t,ln>"7b[?tu@BP[$d`,HN-/fmmaM8V+RimgQ*[XErrS7UM
%h"<?eN`1`1WF)REVTpS#;rmJ.gg7Z@:D%A.#!dt;i:sMrrju3pno7FqJoXU$o";>;g_/etLDbdi+"#fNFC(g6KFch3abfi2D42+W
%TjV"b)2iR>!KL#%$lY'gh<F=Wm0EEH,eC9],*MDdPZtMO5]9T5hD$hBTM[@gdYbiohsJNS<TLWl/unP)*aM`gkK/X?RWl47a_IEB
%g@o."p-W=TPS;"bo8qaI17+YjD^HmLRDV7?W=ea>_CAFNAcF%!*24k`/g'OI3HFj,!'aC?jd3$55uqb_N<CdnI.`Fp^T*>TV"ai:
%dtljeN:KaJf=]#Fr8[1R5Q($Fhfe'QeGsW3oV<i'`C@2^EX3JI,Zp-t:Llb59/[gHD-1Q"g+&+=fsFWF@pAdc:abo[[8be5"R']B
%,20?We!C2R>b`a&X]"%)&879]7N=J9h24#FEEbt"@2*<=ImEQURUEu`5<[rlePgs>P1oo*n0JT3)&7JJ!0`d^r?Je2DHZIhMa:b]
%BKn"b'_:Usph(4GgQ)/Fo[NTE*PPEa-Z:'H'oir]:dBdTIeB7A3`_HIFI:^&k%U!)qV^q6l6eWu*1p32>+Ge&IPb3K5<c)mX?H"%
%7jV0/WpoaiJ(+8/W*oUC561M=>[EFs%>[_e4!aDCUun<9/G(W]Ia@9AT>.LnOF3;%!V&$oZhp&iI()i97OtYd1R\VIYgC+H[5_XU
%'9F1BE&tf>e\o[`p'$Aa8#.WB&`j;niq/@%7[G7]A_Xa.]R6#\7I#&;Vi=frJ7G]jWl!dC_;3pkY,2'ql#&/Gpa;tLF[\'hEdAsc
%-PZ0C%4I!D$H":2#F)_ED<52r0oW`d\-sUfnnAqa=6TL^4]'9DBE`5.\36.8lQ(:pWt\+p:7O5%O&]&a4f\;^cBoBuFDEH?VXFOB
%&Wn*%X_lM<9=IYVk32nbYF[f7*8/`W6FC@m*Xs,roqZW2F7V",[0f!5hUPH?MgYBYGUB&h`7e15Qam.t6i/_.>(Rh)F:(b@GUE8$
%(UQlsbn!H9-BfL+H4>8!=>)S'gTrp[L$l#+Wd:7J6,d!#b;""*`G"",f=p[ZPh7:)p[!Z`-9(0%qo5G@,jpUN;fNAVjG\CMk6I'g
%BVCs>W_np-KpM.3=\8j?Tg#Nf_\uD%XudajX,"g?;:!VIAW=Keaap;?`t1OK@^9Jr)'8#_jE\HIn<-slk/A=L24LFn.58lJWI]Vt
%"?JF1J2HV)SlF'6EXU!94.<p/*+E_Y_)1n-Dl5^fUYgBkh2&5,.>!H9dq$)(RXm\s9Z6<7?`PXQ*OC%.s-<p;_4N^0Pm&$GW#0,+
%'(TI852Vb7(Xa^.Nu64"m^\Pedh;1T>M?WpBeA@(]6QhWnIPEKm[5@F"*6L!+qtmGTrh"4#E?Cd%;B0JCIsb`C66_Sbk!/U+5D--
%C/$3O20_b"9guTjoSCp=`a$0V@5mCJ-nd!)QAdTNB$h&<,fK/>kpsRo&u`*t@?:XI#NE>NmiHXo4<Z+f?3Cp5V[CDbH<lftqsOF=
%?G+bK\Y_I>iZ2h)X59u#JJ>b',B&McKD8kCS26V"8>E!TR"HVC_"uR;_r1W;>1@DmN+f.Do(lgLV9S:)HI/96(>C_d?ekM-D-8Zj
%#6A0^2I*[0U<'!(&-$BW:sN)U9K'(ViN90:SL:3aqsIrfV*u2(&8SW@dC2cL=ou7YUksT"7LaWC\*toq%]+^<NJH@poA"p6JscPi
%4L[j./I*-M4,uu-P=_M8Z4)kbff`3[e=M#9k&egIFDAQjaKV`RF\"&3/og?C#-+B[TC*Y':@-T%n^Kr[20gt44^O+88RDM<Li.R.
%7f2<cU:c@0_7S`lLRE=41&I9c.O@02S"tj!"?g^5a7E()d8nu"X?ru[8WK-U#Gs7C[bksH:4BIqmE]fm#8uChL:k'':e`\7VIorK
%<,9+?TgTBU.DPW<i/fQB0X<[rAN)bW#J@b(_q1LX0fPGo<JWP^]bfcuGqWn(o*;m/>:V:\bP.<'=n8$XYo[V?'(:hrV=Z`Egn@Td
%Ys:iAb-F+ma_<on$jA*uS"7(<YPOP>]@"m$+;f4X;'D[>pkI\0diGBg!7.2Zo!-1dB$/t>KP:m+\)DN7G4#+mh-ReCqZ^,TC^(@u
%/aZ81W&(o<IBMd`5,!,6F""!-N'ABFS1V+ddHf9u^-noNn"gmpot3LU'L-!lJ:4Q5E_=M9%Gg#5A"gkf.;gZQ`:.Q@Bg;4/gZ\cp
%*Jli[8]sGsTE78eX5TAr^98X3l`%8[:IPcqe02=7@`Pe(mJJ#E:E+Y=>q=X]J0O`Be3#Z[aerpJ9.\PeCu0r\DeU].ig:6^F?T-I
%mM$nI_5"+8N[9(#h.!j<Hk3\f0BWsgT=\E65t[&)`2E[Uf$!QY!*$8UW#%7`o5*SVF[fr2(?9(97aOCbP:][e6lUECD[f\OJd*CW
%*%+7t?2]E#=sUBR/6S/>GHC[6OZ7FQ7q%&kV?!R,j+u7RL-;L1]XdF>Je94!P'$6<l#DqfJ5Ftaf`0k&^1Gj#/A&&<W.0Uu2'f]N
%H9[in/;$5r2'c!o,f`3]+<jHh'ku[r]uOXMa5&*uDe+U/<-DDP,$3U,ce7V=f:6?r3<gFe3F+)ucU_-\3+J@D#7uk50'bi+@"pWh
%GnVi$OO=KFV0G+,T<Dk]iGX_;nu"Wumt@Y!<$RILNtj;"8B-cmdXG/C$p$.p4B&?YUCL\]_&1$=WIUqJbWQY&FqglJ9,/1#HF*k\
%PrO#8[q[k%*?c(pVn>d*IhpMqK_U:N6)"FJ(gHS->iKISk%*HWZ/*K!/Ip:k?ju=Ir`EYFF(A4OXN5'X+(NLMI6o%%B),b!oHe(&
%A2]mW-E\d2_#)>=FrWjj#9F8,[auYJ(0Mo]Hu=_PeY*Ttp(S)V0pJm,-tuNs9L755d]bq/[+WO)YhbX#/o1L<Li[.'h:r6"kU"/U
%Z@<VnQ]i-mlhT42_u;IeZsk)<on,JBOSeQm09e($,i.AV2JnLfF87.FQLGd#$oe7E]u1E4"(BrBT;.hjn2F`f^L5Unl+\LDoM2'D
%W,-8pqjX'i=lM]$%@6:U%jZ)0P(*8W9<9Q/L/U0)]T0i\@^<3=!2*Y#9oCcqlZ]mYXGa>]0^?)TY`E.1Qk9s:511`HPfO6;rD%bD
%rP+oR1>A?aj7OWaAeu=s15gYRL,ZuI8nABqh=+dL?3RB2[!3cgR]".%X+4s"#cEA.:N"m#?(Jqk>H+S%5dXaK]3Hep>E$&G#A3c)
%dUJpbh%kW38phO]kY-iM9I[VAFu=U8K@6Y3NnFY7.M4GJ&Q+_m+">)F<=,S(`+<\\8eG.B&dH=bJb$jui+#ACBV17m;B`'sYE?l3
%8c/"F_(R>JVmc"eojY``'-$)aKS.-N[ZauEf1(d5;ho\`aNgO/'&hHEb1j<j=Q[_D=;D[kVF\6;<gXo\BPTe7E28mjApgoBeDs<n
%(aE2Ln3Z^9,^l(:?OXFIM:j##(iTm]3dZ?,C,tJ+h0#?sa0V1]@m7"?dS'jEM8d^F68n:<*@,bWop$PIJZ5^V0+LVbb"e&EK^FOP
%ZQYhjq+Cs@%hP,7h)de8ahJ7QLoV\KJVt7o<?IP)eT[9XYEo(iKan4;m:"/@T@osdH8Xe;AC?P+Cs1.s6"1tEX"F@NGJ^9A!rdMS
%S1@a&Fjqm9[=%neCs^#Y&B65Q:*KqT60;$t?;HV0KDm1J,0tQjk85W+CsGmcSmo7aF3<s3I'r-:$VfXuUq*Po-D<RMLD]gl%te3@
%]NiUuTQ>'QpQmOi:D)dW#+Zd(VGc%UqJFYEHtMk$dHO"fd1pXW6iYPd8q-htROZ>""P'K/6(kHaKLe7V0;)q\rP<fISSmF]$4(*Q
%s*%G0S1T!,6$E(CA,r%]CK76jaq4J7,-ITb2o-qm<b_]Gfjl4[<&bWGUenN:HouakK+`S%iZrF1CGNs__H.R[5/=U;c8@BJ:0e"9
%*(bmSWEU8D0)(ff_ebX_^`\8SC8WoM?s5DTLd>bu`@T)`O$X,kHl:nre=B/ug:9f70<9LNEDR"*Hr7o6i:h#ED_A6gGk0S_=:l]a
%W^h6"Ebli*idtKUM`&J_D7q1kUDO1OkLcd3]\FL,H%P*:30W*M]ND9D9<OdN1^ekMga(t'_W@^59/'F8rMp-mJK<gB?8:&&!kFQ-
%7>jq+/fm<NgAM0sce`ug6"5D\*6I6A!0HS@GmJWLEf2LM[9W\cOMg566W$Nf$7W"7SeDJ&dQ!O=@S2[JcGQ=og=._$NPAV1k<sp;
%a[&N<a=ehhQ:4D7VIMSYR>Q>d_rN3u5g+KC^K1F=nP9Rt5)M3MFa&.gTHfZ?ra,0(G9&,DN`.s"XW@r(0PsdZ%].)j19o=@?\r7;
%[!nn<@_E7^I8Yn&@-rUOs5`&k\:@kp,sF6s>bWR.'at@(J:Fgk<.L?d(q^s6TTOdC#%#Y<3*+m?Spt!&(stBNgDl0+YEFhAYoJ7+
%R%lE'e,;#B>ED>f^N98%>P/ea,J=m4Q(XXKl!:4%7SD@=qGV[<\K@VUTLTl4jC0UFNi8b5'%Xa6[)]N/[fc2.d#((U5DGar:tp>A
%H7Mni4H\r$p>+kH)UjFtZeRF9Na3pXde;Ca8\69<111@O&h7%qQHE;_.SRGAMF\>APt^A:7LJcgO\G:t`?6:<<+Mmoc['bFT/#]8
%$mU(J<pYV`i2ZBFVt60!KuFQM=2..X)ddMtAkP*I1uD"CZYu?L81*D/"8Tj.A%@(.dH;cp&)uf!h4tr)6Lnpm!2r_7=tcer*@q6q
%6Zb80NqAKGn?.]DGda>^?_F'Y"[s#gJ>`ZBBecaD^-T1PPP@A%c!?]U5=QrX/nZCGM+*L9+6oWfO)I+aq_dV]X1Uh'h`>IuQ6aI-
%1W+pU;:8?APU?DmCKt,Zl&9YE/<'%/eXTG_\RaHtTS"dp*]lnAoVh0\+448]o6@7Ui7-,Ea(&[V)QMi[C<p"*2eDV](s54+gqTsZ
%@\,J8nKRh^q\rV#"NA!#c*C`7H0qCj<7'dF?TRc"b.@AF6sC)!\-%_]*[rS"YkdnrV(R_=Rcsmd#>=&2'!!s<E4nY]3?1sfr[S<B
%dN9l@%'$5Pi(ucS59[*s6tKTOQJcTig2"(EE]\f]NRqHT?.9b-OXL[E10"6U*R>];*;b&o4eD&W[CpAC]$Jd><hoYF<!7DoiFX^@
%V8Gi,qn-U7b80(RqhUENm%]kcXR)Ai(.!PTMe&<aiO'2b1q:6bii6JS;I\6H$E<-.I0M<cZLZBdkI&&r\BTqheQLNU/<Z`KAsZJN
%hc(d1qi.i3Lipk9ia>a;hQaJYDR^>G5pF;)VQ*6UAg[)%%.RAtlC_j:;KJf;1Hauhm=OgdPG9EKd&$Sm,VOn3%c"lJFFSM1fb7$F
%0"W$[4KS#c_qM:0T0KIc$rS)q/O^C*7c4f*]o%k`9De<5bMcX9-j><cSq=O+pG2E*fQ]i#0oA(6Is_1N*[F]>Xr^_[R"hRA\<sl,
%Qb@\mereNT[=97!.>km,!F@$1R+8l4EL"[%Jucl2E)l,p,b)Y_"54+4DW\/U=d6]l4\Om@R-E&\Z%sueH0/*A;dE@U]fiC(&:&JB
%JOKa+Ccc]@\^*fMXr@OS?+*R^_QssS@]Z$2Xi08Al?l%<5Y7%%Ro`jTN!bh:"s$Rh>qcmGlls#[h@:5bNUA"]`7Re`@O7-[R4^j$
%?&qn^'E"D$[RmlZ_D*OVA&H[15g!:7>fE07N<lT9(3Ra[2+JWPi<l$-/5N,G?>Lt&B*>t&6_$M`Mu$m\G6s`V`K,.u-=?>'0M-kJ
%aU1<EGEI%_00F04jkT4qZ`p1[%W,/C9pHJ-TAOor?E_<-g%)50D]oQV-ab3r8<FtqNA_(=#hpI]BSH,Ifd3$?5FDH$b%(/^B@3I[
%46S4h#K.c(mKfo@@5t+^*4/a6RQ*K';W<OCKg9?Tm'1G]-ph=%XA0KGq$l/m:-D"3qXK2@k1-X.OSZ+E(s:3^<]("L<9^sHHm[,P
%BcQ4l:UfG*YiKJigbD];>f9sIkuu#unF3XtdEM(sN6TqT#E>s*j$'B%B+t6eo%dXX>bc>[CN'`8=)b;"pg(Zm$8oI#f>ulm!S<F6
%5(dYKn(6LO:8,(JCO"2@>f6<l^pUK-KcOF9:VVEq[hjESHY\7LI.::r)DiV?i#6jiYM`SMe_FqZ%2mqO\-CX&/%CneXS3',UH7?;
%>f3>>i#9?"#-Qp??,8D4kQP4<rJHX`YPfGG/&<5,B5fGlh1#[]^j:#)f;'P`$=&5#itYhBI?cZAE37JeHNgR;,/r"5>Qam%"^EPn
%<B5\IV+EoI!7qR\Z4"0cHbmb/\,L^3=p`V;]msl%B'B`,Q*dR$(V!N04hUpKn2dtJ_):S6/%AXF6EO#@)V#0ii#:]_cJTTFDW"\a
%#_!!08e=ka!Nn^%B@nd'i*'`N_&6J[B@dl'K=h[%#LD<H`-STE>)A"`&\*Rpo"Ya<PoXBh\5ps_E<b%aIQ)3TdKh(g_):H0KQ[RO
%TK[;sf?bjl"kV,;>4WV:_s_s^Y!MmF$EiJCB$:?^_dRm$Y2LL/_6qO8KIaQUgLuX\]C0CO$d^uGJSQPm_dRMdTUtiYY$k>o?_=P[
%bhNq;j4:kNCQt3r@V[8CY\@N]9988Oeh[+X?=@VpWZKa<=rru`fqC9*h&E^j$*"B?Q7\nS5\jcCHk!2dljBl2i*E!5>/5T<f'mMm
%BT;[T(MJfi7J.D&QEf,l)-Xol>bSR[dQO2(kLY@;GVU7smEf%in%&\)5nQS8jau&UouJ"S/'2f2K%::+kQ7m&,i,+NE;s4;[1]97
%EBn<(DecJK2<[kBTf%Y<?(j,pJ_ZnU3%7pB%6"1mXd*S-VDGS[P#tNjBFQ<]!j09_gn6OYfF,'PXg3"5CLEUE6#.<r6f*Wl2)<[9
%'=<M=?KWhP/U')F*me(s,+:U#<`[-7)-VZ_ecf4Z/^G/8_e"%Eek/t[e,c]1qWiTnTXENtHT^&8?S@!8IF\j2j,J/3f#jSZ=jS'<
%rs`.armVZdb<nmD#IK5To*2>Uf!n%^i4lokCO)AkiXDsJK"XKd3#G_1Xb>6:Ee;m#MI*!aOquKRTXBq'hOU>tl>W>g2(CRkTX@[n
%d!:2n8ib[?6#54G^-HK''%tBRL=Z'f@Y`O=Ali[5[Yg,Y9Dc&u8m&1Hcl/d3I=aPf<cB!_TJ`+)f?bF2dhQ&=Bt-ED&3dfoCUdi"
%5!s*FiCkK_cl+BJH[Z.#_5:J22?$`@6#3hBYFmbYFC(UtEfsb%[>]!Vf?bH0p(^ck"W#D1)CFDIXl74[eO`2CX[MJNn'KeSQ$>Do
%SZc]D_CD3<6#1bW=`0#GE(mI^>40f>^HcS%XXgc5)8/@PYQ6[r%F:[?l\U7&a+SKQf(*qLG/i++J9f,bBGW;R>-X7<$!Sq-/DrUu
%"r<X8[^Ij5)-_a^8?RLa>GD2Z"^AmPEPp@87^(HJ$'K?iYdN4`4J&\$f>H/T8aQ[c6\YCGB5EQMk\"]@"#k%UKDCJ.jcuRpYr*ND
%)n(L-g\MdlK0O=of(/6DT<P_.9p2tqCUpV*Ycp!8'fTq<K3)ju,?J[jjQ!GK2>mA&[[&A-ElQ[JF8C,>dJjNW2,Gbk`Baa;<qp;#
%#`,U"*h!f.G&4:rs,ZE%Xc]fEiR,Nn5euX-6f;/$M$Zr8=s4=UkLAE.p_3m405qBeM']G*quG@<];V%(K56/T(j3LGdC&j%5+]Hs
%(5(Yt5,Zdc:.MNi6Z`cEU>3ROf.\43^J<u2VPDaF%s/8aQ%iM9V-OI8NoI5:Ks"iJjMNNjXY<KcPfDo$e$4Vbn_G'f_fRko27SCu
%:?BS<>e@].j2kLi"kW7/D)-*NJ8:sk%"2]e3u;#6@=`4L!sC8Pi#2f&p:5fkQjLgX#1r?ucE&#D)J3/InI&U>C:LQAi*%:lN)SdA
%f*_3/7m4XFmN!KG$XC<Yi8`KpIl20SO5=?JrpC2tOX67Z_@'Ye)cIPp8(W"\<-!&QCRgb/F]B#Z_](L>Gt-DqERjc.TPGBDO)L7N
%3VV*^Pu-npdo['Uea@#LSCM&VR`Sn?P.I@,aUY0aN24u]^L/R0dbNRX>87c9SSQ)UDobt!Juq!\>@Q6bOHODQ"1H&l:]gNQ>Od,.
%8dB6f?)r^,_cD$"R27`s>W[%K/`h*f[DIa9?DCQq'mr,Jet:u[o-jfs:8h0T-h_GO<d<Fde$Mq%9Sm;S:9YHlK']OH.rL%)X,X=u
%rhd'&OgQq7)VRqgnej;t86r,!q`bC]>4bLq?ens_>7d.sB*Q-P5@egS;Bkgf$#s6].Z=\]L.;.H@m]pHGs%RuYD*?l@X>d36CbaK
%8:u^0cVS<>5_SV]'qCj,+j=WgA*f!_pM4Q&:hV2^"Ihbf+[RH\?$&q3K_T3//0dQ9\2V:+(IX(7<4NMa6MO#O;&Ku*O5^kG&0_%#
%g?4.qdHH[_C*>n\&NkD,K_S"[SIctBGlIt86JP$S=#_=rZBH+W8-gFM#7Lq'rbUs'$$!0e;^WhiFA(a:'&q`Ac#u?=r"Xmb(F5e`
%Re$OdnHs$NrY?ct.j6L:1QJe)2C-4D%eaNO,X`"\m.h8,ib;]TZ$N<SmC(&`"+IYV:H(bD(H=s@hHXWFK=H\;Wg07r2d^ZXk(85-
%"O.ZO4G-DPU;rtrYD%1Wi.?Tg3!KWp#LOuhmUIUa`"ch`IY*2c<17e-_EkONc0TP*K4mL3a;6glX/]n__a1m)`]W0%Y$`u:`.EV:
%8&]^L@3k2/H/_+p;kYE@*lOP*'P@dai^e1%:C;O`CC<p_&=7&IXX,#VPL#S%GgLjV+4&M]3Ol#MBY$MY4CBP^`,eKOELbaJUim"T
%<i.&/ZJ.L8h-M']=h&Q'@4;h%`om+$G[YZl(Aaq\&IKU$QX9gEP%f]<[&7#]<q8"uNmP)mB_a\\&-[\SKaCn]#'rRADj<mA$e<^H
%3RHZck>BfG2Cs;0q`9nu4*J>13MMaopk9p,LgmGf)bci=PQlC99usoclBDC#?&6P-ebNs"5#5=(mV'T84BBR'AW66VB-A:8^>*a5
%^_Q$R0XXiLcOhJ1`c9Qu`,LD*g^GsK%eI5`Wd-nCJmf7A*FV.@<OD#OeVoVE9fU-H?R%",_L)g(I6st")!OKlUkt(L<20DKoD)=m
%OW<QUKt=U8N:ZLZqKOpGru'gDO;ir5Ho2b?5!&&e_+Ae;G%ChSo#:J:c+T+(D&#@^6g_e:(7V^qK`$7e\0lj_*h:a(+n3MEe-$b[
%U8ef'+fQ-#\n#Cg2%Rm>K"'R*UIE\d7#pO(J23#u4Bb/Mre?JHYAGeGEG\FUdB:SnLcrWnE#a`QN'UBS2m,n'>am3VY)pJ;3:[<I
%JX1*']MllWs6[T;@&]\4:`Qp>(DuXs`D<;VSbE0KYN4-+B@<A6G]'lgK,E9$'8"\j:"cS6HedNQH$g-[T'S4q$.65C>&/;)'#QtJ
%,fPGr41t0O7a&>NXm<7Cifq9-!WF*%.a!pi`fT`G)SCI:0g).HH2R0Xq#%D4_4p@*N/3=OIaaaTZ2!FD\Ap=.0dkLt7F3XBhsp7'
%`P5`8:I[/g\[M\+XbNjBY02@FM!EYO38FW[<:j[uV@&0c,1:XVXHDM(>k"`g-LKRuf]ZUP"OW'Sb`)BPYQH,2BD#LuB_LFX`(=2g
%5/m4X1OHG/Bg&;o'TAkTWO7ffe)WgLn#pN!WfRe;4N'oYGh.a&,^m=K&id2&qI:jIL$f\Gcd7[Z'Ci\uodr/@lrkLF:N96K85o^@
%k2dj=)6PB,'<rgKYbiYGOIU*I;[UeiWP4!6Jp:Y@a0V'0=]%ASZMXci,^FkR'j)a_#ilJONq7*.g&f/Xh2lh:kql$F_`YEGn1@+t
%5H]riQ%7*)I:l!ScQS09IZ'DtR$iAiG%[aGf6*Ld/3G@*cGo$fVPB.UX/qG#cRI5e4iMPtbW5?/,Ub8Mo-j$ir9ca+O(\(Wp#:?1
%gD/lP'*tL"C/E#X\gJ&V_-)XB9F=-#C0j/mLQL)?WacmnJ'rZ)e_*So=2KuDTabKLl?j:le^!E[X26&ABS<oGNo68J2fB)$QAAoL
%1<+1]b]?>J62mfr%$\n[hD6`C9ab,Mh>+r*g3+<gN)B$NoUAi=a\AJMWf"G&MaQkV2>ec&]um$O.D9VR]]c+ZGDT&T9fdte@]Qnj
%/B52C=r6XE-cH'-ZQ)5&Y4I6RjMgsWLS_Mr7$nFG4a=?0hN(G#Jr$l%"K%j8`Du@E268Kn@[^r!4@C?K&V"ajVL1>O0&Xh#o`=I8
%g^?M>H["@`O(UQDl\51GiQg+qc4GpLQF8FCcDL$'<i0s3d9]?pc3:W/o5P+S8Sr,2lFTE2>J9['h6_^3(W4r:;/2_FNr"?4`&s5b
%I6O*^k'eq9>%(6l'9G(jBa.QOl%sOaBi\0CQC[+SnMrA&4=S)e^:Z[T;Gu&=,<PNY_)a,E,2RE8])PHl#8lF`[/D'+*$jAFBfTR/
%,\NV<6$.qSQhN.4UH&W8Mb`bb,<LY+rh\4XHotWfjl@28O:W)m<^nWP,@ubEl5[?;0oHPWCGM1R"hYgu,,*DYF6oH@-pcTU[gb-6
%r1K';@A0i*DR55Gc;<beXFWZ=(FiY!H%O3JW>+ZPMs>?a=5^ZEQ,Z7oDVHSkK44T0.Wn%#&=#l2HjrOA!gmrEWdm&Y,HsAaSNuF3
%<^IJDGe;=*I&$\QT,[l5Ud\ql8H7O/nO/4O9C[885$otqa#R)?@[$Cn=+3U3Z"2\\dEL^RD;`48>W\U:61OVdXrfI"4N1;FqdF\r
%Yp8hl$dDC!,;?DrX"+>qF(DZ&ZO@m2X8\c:L1+ZRPXi`&#uZ\bs-B&`-_@Bm'Z-'YRKM'!Lnlt)rjLmMS<'9[>sMU:J\ZKok5%cZ
%HWi&.q04g:^ECaMMce;lC81heW,S,h+6GIrOG9[CfVk>j@o#pRd86LRg5oK3pVGp4:cW@:X)3j<ipF,)]r\UlQ1G+W/?[0t=TtRt
%Q#e#SEqk#g5e-Sj'ln.<H6C_LrQuaU&KPsQLnF;YeD,n?9#^G6\pkQrCkqro4\Cn,r;A=3[7QcfV9oRk)[M%jP$H0nh9M7R(ua%D
%LnjRq&ZckD:JNWc3@Unf1JKOdO%*0Gg8R_#@;fFM/O>T2pF6k#Ac,q#r@UhXAXgB,=oP]9lm:Zr2G)QN(\\!qR6_V=?0NA,,Xu36
%;3U'nBGj$-eMRU\E&inlGE1r$W.#VL!k+oGm;Cl"a^!e4'SZTLAH/IoJU8ZX.eG.g:9jjQNq:iG<'ttX/-Y1'-P+/L\.2\Ilk1`*
%FHq*A.osr2V>KO#WnM=E/S<B;#!&^2g@g.\ob$-!ptn"$Ve8*H>uiP[)WE#nooIfA0)]3=BqnM*70f!G"RN]@(@mT`,6k]u/YmQ7
%carSM4-qWnDKcr]&t6D0[O&s!a(eL@4pdKuUJ$E+89pL3Nt8BKIAul2]l]]7L$ehbP-h#CYT&iGH?HWp)%T!pdKqUP=#dl)'\!l@
%FpJhP6=s#-X5YJ2\r0]*G;qinPj(a:cs`eb#jLTM=`SkYj\O4"r\M3;.K;P`]*T9[3jE5EJc<\_i4@:@!<o./caGiDK[JPUol`Z2
%$8<BOG0,19?^'9Kd%r2$;R[SK+9Vu8[X/f=$+s*)(;-2AMV2Ll8K:j*UKF2[0r?;nrlLMO7KBXsfdc<E[MK(s*njE.qn+L?`*8j^
%.E_P"^d%,^JD"k@KGLn"JQk>8*#tm72B'M/ptWZ:ER&$+<R-d=FqaQ^j(MHtHcn&_ao)?1\2JF(bo<Pc>C!CPW8KZ5^Wo3F]i)OB
%]MH15\4KMmN,k_![S78+jtB.ppgZDb-O:'!e:e\>'AZ>'%9d,-IDHX[cnn^u%hSK/RiIlf9^*-q_Tb3#P:D5UMTcqKHPdBm[8dhs
%(a*SYE56]1dKYT]X):d#a1ur_rjbL4(H`^e0chE^Xcfk$[l+A.-!5g%2cj+ABS$K!pBaXJ?:T^cM"u$.p*+$u@;Soi.deh`Q\Z<"
%C#:9'e$Bqi*+.s[.T(]2qUN@)+Ha(HG'a)j<K:H*h4DC[(of,0->G&Z62pKC_N[?\BI(l-5_sXagh)S.GlbjK=I?L5!h#hN[ZT@u
%AhZ]&p6FJ1dJQU)?T@,3=tM]u0h)_q55S_G!t,`5-pFAJT]B$[h?q*8Zd/Yql(YD;ZQj8Xdm%pS;8?at5SMWDc(!i")c9%%<-0(o
%![m8?O"G[hbC@A7]d:nue&O\#GlL3QU_"?F9G'O`\42oF:m8b3`"LWE1298Un8eVOK)A^h$2Ani]+D8Vf-uQ`%iQ/AJ\oE#dSq?m
%862Xbj!S]4!nrXuIdU3V$DCe&<_AK(#uo'(.o^Uf,,>FJ@^K`8D,T]>TN(hI\#]Q]05,cE+(.`VnUsG\=o*j^4rt7_1cN7^[N`8E
%P-]65@E1F9GnB@qd\+Ju"!MY9&ftWh^!J&YHG;H%?4b6&6"-0..o30"4tm>I!`Sb2O*2oOc+ISDMoAe+cl"sl@)4lP.jKrZ@IhYb
%iTCQZFHTNc<:Zkn+_>_6[gXc[?Pib4Ce&luKa`HlF!"kEf,P>H]ScnVBk)JsA4HhI8tq<ulorkKJbE_<T\J"$89V]FZV\kDXOE<K
%FWdI!$uO<ujqTGsX\&;A8Q.abe>,28WM_8t@"<h!A\/ilh/328mDI[j)TnmoZ\YJ.gSPdK4QG.E@5_om]5A_0*R)U"PUUk=S%!l#
%W-fiX0)RR_Z+l#^ls>:F"n:l"m^oionGfK%oIo?qrQ%b1BrcKtD<?#+WanY!l@Ha#KLQ1GZ1R"7e"B=0,:=UKkocF>*,3P!P$/d^
%AJ+Jud9aU&W_T'4%RU@YPJ_2VaC8#J;2)!/WL@+;JdguN;m:m53B?NdHDO%D5c&`gF=d)X"J<p96`?QlG`Uu17VJ=Y^GXI]N1nr0
%3]3.YREZb)I>K]'\L.Ph1Se[pa+-47_`biSW"G?P-Kai7[N,4+l)HY'A/?bccQJMjYZ[a4(=UFF_;+F@oZ@]hE-+V]LgS%9-.tIK
%`Y$dtTs'Sb.5GRBEDqJ[dR2<j$;1q(2,&MGL0=fJ>L82KB*JDcGF>l'p4#Ci!)u!"M8X[5!O)YM]B4BDJ2HrOqf)*BrXs[,?ktpt
%ZLL+9O(\',R+m,hm^mC%DJ/e>l_*=<K@2ariS=mpn@-_?lFu@eA9XI3XL*EY7HpHl"^qS)!%,#a#r@[1`"o?,dLb</qen9B'6Qd6
%=aU+`QcRo$QYRTAnA)X:gW*VVG`PDK;9%b?=&,&p9F;>%=lh6mM,dLHNBaS8g[Y<KZ2O6AoMYd1+(eCj+E8qfQ$nJ3@N^:*0GFVj
%iZCU8\GVjlDc)Sa6_B91LlUI!<(*=Z<$)JllUqBq:<?J+!!]9h$Tgm7W8=?1_F%XC/":k3&bA&!cd1^Ha0Vc],BTU:>#Fl#Tff*:
%_;9jR5,Y+Wf_/JP'rl(s,^E_#%H8@][>r7*!>VhmRaqa6W%TE:<4*t2LWV[^EkHW.H?7%V5Y@c1*@90+mn>C'L5dI&"76Z>$@=\E
%blDSlnoC7V-M&ibMJ\"\?K7,^lcj;>J/1K$-+0/%Unn@(LWPFZ>\=EnFC;FT[WGEO(+<o5-AAT^r3t<V#O9I_`1Td7FU>sP#Tcr#
%YK=rH?XA4U0jn="geij[S4M9V]?&$.SPbLMF,C!1At_!.N/i"i@(;$4T`/kjmP>`F-5QSeC[o`X?6S`@h8rr*%R,Yj*s5%Vn()7Q
%a>*Bl:FqgSbn2=!7c=rY`aNhTfQ)*2jquOgp,>UK),DK$$m*AC42?>uIK<X;U>gsfJkBoF<i%"=!1_A*Z)*Nu:"P)rErBjNB=$q)
%GGeIe,YX"[j&%>N&=e^l[R\Rbh)BhY"MEpWK#%!:<+A=%b67L5Y5PR+'F]_rRm1\H_MB!g*58e<\(*lfCtl^%XPrZnW0l=@9?^p4
%Rc'I9S?rp!7d8*?@&Bpe)]MH'l&TdpOaH)IF&^_1OO[Q[R]s'\4QdJ3A`eOuOrP'X#GZ]e(J]&r!:@Ud8s.G%P=J#W16Dj4lheVK
%1UH=AYQa]S79.5Di@G\5Kt6YO2V00l"h@>kMU<Dnkg7.F2*D#SA9IL(PfiV/N=%*>,pt(ID43B2UosK/LIuMU$N[s#Au^Bq3.m>>
%C]6Z*Gu#!jc1QM-5pE>Z;C"iDcF-DWZ?@OiOm;d$]%Po^[scd@c(]q]=e2MSmY^5AR1obk-Ya_/U((nMLnk1YPD'8UUatafU"Ft3
%*-sYNpEh8ZZ7K9?%\QCR*4#s'\u*:elW8IV5a[9-!Urnl_G8Tt`VoR4XTLpe>mpRO-9d?j.eV$0G*!d(H6eY/S(Z#ib/Bk6<*:pl
%L+U$eUfg4)]#7F.$$kh3Wia9u;Wkc<f-"O5=A6"2?XT)a=IttMoI0F6o(GDAPaXN_mYfJ6QOjW7R<eh=9R\bAff5_K>`<2@q"h!o
%LX/JU9Dm;\6@47L3VoWhrJ%j"F8A4:Jr>c\W0rej`PA9FKB*jeCK@>9e?f='?OZHGnG,J/n>O@D^F2,ZIuk+4(eiYMe+H:W<,YBd
%mf3tT[>2$kKtM-L*:aVMgDcblGQAXAk/4*Hl3KL8(mEN%#*RhU]B&W>'k$"tQLRH*8Hoh*)4>Y;r11ut^njB$,)UB3?WToh3MJL=
%3CrHiU'lnTUnK08(E6_kfNSP0<rLH+G"@J!W@]kE*=07n>chN=4A]5q]S+qo",,'%#<7l1AgE`31*gh#8q2agZIo46A=hL1,SV7f
%C(;.":50I^VGit@g'8k5%Ll46Ei`aEWAp'ffbLqlBMtuOr_V'epOp+cSk![\RuF@OP_4(apd;++XnYoSqPJBjQXVn&.1<QqSW_N[
%q<Yt.^4f'tpf(!]`M^"S]iAZu.L94F;9\k<qp(oB3;88B*'r=_MJ@VB(B^iXGY1"Y6\Sh<k3,3!FNZ9)(_f%FN%*Ick\\f=LEm\T
%`K:L;XXqhbigLX-K&(nl99kPa7MhG1dQ.DTf%RU?12$dHNODA$P(JL[<Nm$fU[nY]ZM>+RH(Pu>G[ZQnNnt_Em]k:&Q%CZsB"]fh
%,@D512OH7.GS7QZnYDP2rK+10QD8$s8B.U>U:\8RPW9QY:t@d.=0<@s4/NRYXD$'T`&<;g$SIj/(Un>?O\!@1lKD_)OWCo0Qk_-)
%n/HN%"\181rO(sl`)[*B+DQV*/na*B.GCoelR1?+[_BkM*74AQY9Qq;f-\WbA2Y,eOJtL=]uN$falX[*j-`?]`+\1O`Ao15GPftX
%DRY0efnu:Z?b=]MPKkMG;qSLjIpoSuQq0'V%6X=H8P@KK:ZL:KUf^"PWc#,APW\tC8(G)I=)tV3E)!4nCGA9c=KXq$p6F4/"9q>C
%jFW8D67VmJM/`7moXu_?_67\OGjK-OD/%;EO3]kkEfuO'),\e;,dafI8r_$$L_Bk<M*s'C]&%ZgZOPfBJB'Hfi("ol_R04Vi?dde
%!<?&25odWFbsJTQ*!#&2;&0:n.>!;?/.bNU7,ht%V2gAshl$V5=O+Y:5F\,OdI;D\kY#Z=C2RA9J=s5GKd]1G>JGIL\'daNbRI&i
%N5$N>DqmfH/O-d+][Vbp2Jo/SA?.-Yk9Dkua>m@^!QRFS1VhMVW4M(.L]C]UW.QI@,,Xi<79$]q_(6:iZ,e\4gaJ);PhlY+):/OV
%l;="L4Erm>KdAH%2cPjM;bgXJlq*KJ!jX:.\5[j6Gbqi!^9N=P;n6(dWSV?11mPL[P.i(((qsEu#[!ocLDau\2UPDF.F=$*?YANk
%Cq>im?igQb,k]T2ZoO11>t3tVhju6_?nYE:#bnjHh=>]pLr\bT@K99:irUMC-0C)_Wij]dR(GYXiuW9GC1>')@X*eH^8NP?c`!,%
%.'s'N".Ce%i0eJLj0'X^K+V"Y+^e1ZRa@kY<^<O&bisQZ@WEdZL0atKpNo#JkFY1NM-.)cqZ?96f$"_(L&"m(j^rNRA#Ck^VA.Q3
%#BtZ)I"]tUmC3pdViFLQ*[EBgM\0sR>W!SNf)$@]8h6-CVD<\r!BeA#TP!sjq@H#c$>$PT#B"JTGkTieMp]:CRP>UUi3F.9eW5VE
%ODI4%`u"':TZTiUhUK2K@_d)R/Vo!gK%?*aH!0r+jSYs*45$Tfs54N%p@6o-'j2d(E`5mV1s$18]:Sa4cG#3A[)@^G@A"FRBYCGu
%9,+nF2gd`7m6g?,%<KbXK:eCW;,)Fokn&c#F*el8OOuA`j-,Nh&L'eePhhVD[\R<oNfc&rF0i")c7b!*8`-f>nRZESXP'8_:b=M0
%?FIWMOnNln:le$eNKPL?;b,2VR-stH)a9k,p5c'K3m34\9;kj=a"mSjNjru,^Tc8jX"rR$dOXJ)ZbZeMkC]!7A.02%0l--b6dJ(,
%i(-1V_5AP[p[q$Le49At,6`lS+=YPr$RU)+/Mt6FJFqad9?e$hp*WZeI.PoBV48't'feY.(]$'<l)jjHVfI6Kd%\AfL>b+jC_3NP
%6,](M\ejp"+B$AE0QFT?'rO7f_+n/8JG@+.+mM(C(II$](&?N+BjRU`XGD)IUp_!2j`_S)&R1Hc;AZBRC2d<15D2+OXW(CG/$K@s
%]KcQ@RgSX!2jL[sN^X%p;R`fE=fDVfGsmkHD1RW6A'Bj[H5=hZ;uip#?'YSS9/l'\8p+=%3*FT:QXhlcCPl8E`]unThA+P$DWj(J
%hBp$mXQbqE+.S\!0-%jm5cNH20C3Kq#:S$3BYK^N_em];%t?p-CGZfn/,kJ1M(IpG;rVC=KoWL)NNX1HM=%8<cFum>`,-iaL7pC=
%e8qu!5s613_]Ut>n[*1_USKZ.Xsm>f@i*ABc'W#F#!&\mj9>!HoP_gghcSNV$G7tFs'p7pddp$97>`B\pd<9!)@6JnkiM[LePust
%/UC&^1E+$8q*%[9(Xj7=?UaNKnV=9e:\(,Ob92o>N+dBr4m0kC$7I;7c\,0&cl$*[i.aMcO.kQ7IVq]4(s(NT58G+jK_DtlM?J#<
%g!e.&n>k*+3L(!!9,>*f\]EXTW5]>!$0g:+$R]/OVCu;BL@hEVAqFi,_A'GK,e)_c,]P7P%'u@]-"DQTZ)g)`9@(g\?8J$IQ1um"
%F&Fs,K9Q8OFEEVAAI2<lL**No790H+JDa@!#&`,[bC8^oPn%22M(V(*qE[B7+<4Fn1Za/jR#14_Ina9ZXogNsY[=10Cj%0YC=*#C
%a"ag#P!,D8JcI"g8LlN.QeNj8NG.$RFlaS6_SfsqDHgB,#I2o-M+aR[Et43.+$sj-]boLA!Dte;ig3FZ1])r>o`4H8L5qW_MT;YB
%0,[d3L*Aoc];chgIJ:!mC\l'%/RhKqMN=dg"UMZ<cTJ;W=YVe4M**[\h^].6]u@iqLIZNUj=J6;4?U<5I?C)XC3MU2"/W9unC82<
%Z<VJeh(iKYO_ddj6'd#]76Q2b/H%f/^8o#RRPD:_Hro!FnE]/r0?f2Lo&ff6$R<h'5p\W0M:?k"Stb4ElOQl]Q%N]EEL*];==;KQ
%RUBe(X_H<e@uq9WaK:bVOK`\h343qNY,I_c^.f=Vki6ETXC;D_Knb/&EF`VgPCmZEQS[Smp"/jbU:(W>'e9dl$Wg0?&T#;_H_<Ft
%+Jutb_&c4)U:7(RZ54a^WI-</TiSCuA4%dq:2#t%_Ll!XWr,\s.T8eDMob\8?@6@pF&9c9BEZPp*`Q8bmLh9F!_[5_=G>B8KPZ"b
%PEToAC(D*u=%6-<L1b*RbIh=MpB5[7;P&e%^EOU>_%/52)bm@[:CBJ6.Gd6aMg1$?>WNBeOrS^G,2YJN@2B0q;E9;d1M&hQ1H`p<
%a2lO,PK<`#j(AE"Wp?t$R2I9;9N9sUk98AVN"E"5?$b\DC<Y\%0_t%P\eTtp&LchcU*$3-f)^OO1L#Cf2fph;QZZ_3oo3?I(tb(V
%l`es^WTg]p/ueG;jL(YTE/;f!mNOi7_+*A!TEl\0h4if'@b2#GS*$Gu\-+"a,Hp0)?`HD3q)ep<\2_l8+d:\OI=7k2<O@0oc[ZG%
%.(\0):dsCdSCHo>6?>"$fN`E^UG9\iQQ-PdP(s]Ok.'@S9MSc"^[pE:8L'IP@^;\"&6rMcC0Q1[-rY[M8X0:a3N<>$qN91D400ND
%<ENS@dm0E?;e4Yo;h&CFmWL)/=_V*_-WL1E3cfOF/oEsf'Z8g)jjEh.YG!\am(4sHG;IB!=.*)AB$itjOI]1jM`-6e:"AKjUs<3k
%JnSOh[PE\ff\`Wn5GlW2dc0r8JDc/q$A_cU4)bd`@oTs^if03_GtBf#@')TY[Y#?=eBpiaff.Q=]-nZ%ET,q\YkV_tL9UP7JaG&U
%Ie2d]IJjdt,>o!u"5KhOeH/iL!J$<7gVVf.K>Tk:8c]Og"MnP7X!NA7gIGUI`1`WpQd&6Jbn@gHTCK&@]_,JX/g]6RNY,f_rW[;R
%Bcm9\3?ZDXP?D_5A+ubD>m`3gOW2/Q3NnmZTp$mf1+!Q5'[]VlNfuuMV.?u.!%'7_J>5n;%p!!tIt35L,oEXN<aa,+/j_kTasLJP
%$sVGsiNmRV%(eig6UjaQ1k4S@I/Sq`BCGe!P;s':Wig9gU4(PLbX()]Y7?Nr3A#5R.jBd"*AEOYSr*ePk=>=sKG(;)@540qXOrl[
%)P2B\FTU+P$_(O^H!2C+F(d_TQApg.\BY9j2KNZ7Y`+NSR]VfJc#S6Ma0XCs=UCXT&g2N^8;+(T@i[Pu$3F=ceoX]_8(%6[;eR%"
%O[[\rFB3l$=*R;T9C@FW=7@V\94@_+ZK=nk"`Qpt(1W?>\)tgQ]WN_JOGd6QiR4'(8Qf!q*_8Ib<.g:]X#GDgH0ZPJkPPE@C9P^=
%Ot.@e:&H4]RXm'AAP*j?LIhrJ[TNS.$2p#H7#3:%PB4SN>1BITh(pJ"PmA5CMbhmYkhq@$_.l7u;14nKbCZf"RKTIR!@cPSeE/4m
%]UD53N"Itiie%u+;!6L)16p?R>`1qR-H'.slN*tjJOX6,i)lnI;uBcGeP4:<+teZ\R$=VeOV5NkI->-b^#CZ>Racb:7U?gnPPtpg
%5Jl?c)GGog;:$Dc[\$]U)&IlB*?E2O`%*fHWi!L+oV.fUUE!a]V)8,?g#.YCO<$beG"+HDG=?R,C?c-Oa2kgfq<$W+g#h40/NtU*
%%Kj_UifbSUM4pfq6kjp`]D&UU3J[D0nG8+/W0&62/hH#L@bF9&=Y4C^X@Sh7"gKNDTd!W]4`opYGQ>S*Oucd`Ba>kO/-[i5V#V0h
%C%?#5?+=KI?\4.Dnak_.7hmqg@N#&CXMW4Eo5&KMY)$sJ]./*R!o+RTLX3'U[`&48YA``VJ,ed3Q]ZZ,"J0S<C8M<VmcZY0RoQ*Q
%Hh*p)8h67?XTDa:fn+IS"I\V\\1hnZYd*HE+f'A'N"r)PKIKDE:n]#j2Qo?d>d2QWK9Qh`Aku7D_[*qENc=D8pSLt<%M#)eTT.0%
%IEKe7>m!oTIetIWRP&KrLV?W!$i'dLjH9%VDsI,9]-iM(\kJZ$==rK0\-3F*Jc\;Q#S?8L^(6A@-#H1Ah3&;1g'dZ(%naHSU'b),
%ZQ;U4:Rn+UYarj%%PpHa4bkigEe9AaNFXWXD=4#KaA*BC$Rt$jZ"_S%@MMbFc)$06^aY&1W7DC2MYqC9IbttAnQ30o@=c\@&IIC'
%6==ntaWVs\4-V16h8k-3En)7o!s0"mmDa)s2U3"D"j?:ji<5YpAC8j^q2>pV'%2A_OVpmd-.HpN1k$##O=lA,ns8j+AXe>K(APn"
%!=N>3Rb,K^5H/0PqBs;QaSOqK5UJUu'*CQ]d)@TmhhXU#r%LaX=2(?Cr1]dJgP0u9gI;#=7#qlCckBJ6!6UL\ZCSBK:O:cSJ[C^K
%8''Q"74$]*TFKVGKueFM5O/+o\dAcRPn&SFX<d92'P3!Wmiu8!HX%lp9Z5u;GYY$D`eXU"h&1j9T;3dr]MJ5do3p+%'NAq<52su!
%*EA7J<flPlK]!dOT-H+[<pRusPs.?Xc`_K0[nBEsm%kX=LL8ZEG7?UR5jeI-176""8)BG;_N/=&6Om]c.?la/g727hMuD1jq87'"
%Wc[_qPm1o@q^CZ/U_j<_!==KV\lm*X>tU;!%U:!L$[D1X0N,fV%o)[oKgMsiG6F[a-?i(g,VsFbi5O1i,\'i>cN[a1SVB'&e;pN.
%Q:O/-":pMFZ@fI7a>R9e24_:0A8Com`CU<"8q@?N8.N"0ZmE]0iBQN6Z11HjaB@aXZGElOA9NkXdW>s3;cp>r9XO9_^8;tW*bG&t
%!+iQZ-5)j,g"kpdp`MVlJ;[iiH%N;=pc#c1YSRYh/jDJQ+J0U;*(");4%sg3`3[nc]3`T&i;[f#+s<r,5I_l7>>PZ(9dq.#[!#cV
%35F8N278PTSFjU!rY^kc,)ibjnd"V*F=4pDOSX^o'kFLEBh'-3-dfb@;QUY.fX..k(5J*nQJVKlHT_29HQ;aCIb_t.I/j-e^ONjC
%LDVYXqla?BaFPL)+?A-]Ol[fqdrjiP5L4>%3-S*Md8[`tfS4M*XK`dTH)qll:E'Mj&c/fG[kmcB<ZnN1_/?8J_@iZ"7e\V=BcM%2
%<t`9I-(6oPlH,k$8(T]2JhRJ==>F9Wfb8X1`]DA@&ZFdp4e2ghEmY:4`HFt1"BJHq.5Qi;&qa](00NK4M$:X?\X4+en:TYF(;.1J
%^Dql/rK.d#qk1K2>g>j>lM&!uT,U1o=6jU"Ls!M_e6iQ`EJ?j<oLg_"f%;1([$D1QCNjJ*g&F#.)UpRb<`%7k;>LDHm]Brbk*3)K
%(E`/o5ef_V(nEVpZE#[9@3iInmpHJm+"^CF+3qOsh1Ud/%2RMoUN^s@pi'.*kR9P-3j]SN.;EonJ)ht39W=?rD9hG*S*k0,;nE<9
%WSg/^+^A'D6\E<n=(=J&TWn6B09]k"Hj8oM5],@Wo%^%c`'P392_\go![^%IHCb.nFNoZ24PA`X`P8P<k6;q/#+b9;_n`:QRF"_l
%bst,b>a$&(1CNl-r5mchAfT2FN%0X+m?1PfAXfe$+l<Yk=@@ke"=K`@=3@k62X-9I**A4gU^Vo@R8DHG<^L,]]]rgRfk-fLR%)MU
%SLf`p+ELPl2gd`7mC-<W+9(aOn%X?f*;r[S48bHF?N9sG^\aZ'o^/RNhnQg?"2FftDh%fd?bZR6%j0YXs-pe#rL^h&iVgB,^\dG[
%J,]/fn,HnpTAKPGqtGU:o,k_ss6`\_l];&b,P]XbJ`$J#+90B2qp"$s+#&bCeG~>
%AI9_PrivateDataEnd
